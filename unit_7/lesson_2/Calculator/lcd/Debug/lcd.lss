
lcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001550  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00001550  000015e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000025  00800080  00800080  00001604  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001604  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001660  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  0000169c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000120a  00000000  00000000  00001794  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000989  00000000  00000000  0000299e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a48  00000000  00000000  00003327  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000278  00000000  00000000  00003d70  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004cd  00000000  00000000  00003fe8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c13  00000000  00000000  000044b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  000050c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	4e 41       	sbci	r20, 0x1E	; 30
      56:	4e 49       	Address 0x00000056 is out of bounds.
.word	0xffff	; ????

00000057 <pstr_inity>:
      57:	49 4e 49 54 59                                      INITY

0000005c <pstr_inf>:
      5c:	49 4e 46                                            INF

0000005f <pwr_m10>:
      5f:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      6f:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000077 <pwr_p10>:
      77:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      87:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000090 <__ctors_end>:
      90:	11 24       	eor	r1, r1
      92:	1f be       	out	0x3f, r1	; 63
      94:	cf e5       	ldi	r28, 0x5F	; 95
      96:	d8 e0       	ldi	r29, 0x08	; 8
      98:	de bf       	out	0x3e, r29	; 62
      9a:	cd bf       	out	0x3d, r28	; 61

0000009c <__do_copy_data>:
      9c:	10 e0       	ldi	r17, 0x00	; 0
      9e:	a0 e6       	ldi	r26, 0x60	; 96
      a0:	b0 e0       	ldi	r27, 0x00	; 0
      a2:	e0 e5       	ldi	r30, 0x50	; 80
      a4:	f5 e1       	ldi	r31, 0x15	; 21
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
      a8:	05 90       	lpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a0 38       	cpi	r26, 0x80	; 128
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	a0 e8       	ldi	r26, 0x80	; 128
      b6:	b0 e0       	ldi	r27, 0x00	; 0
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a5 3a       	cpi	r26, 0xA5	; 165
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 36 03 	call	0x66c	; 0x66c <main>
      c6:	0c 94 a6 0a 	jmp	0x154c	; 0x154c <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <sum>:
#include "lcd.h"
#include "App_layer_calculator.h"
#include <string.h>
#include <stdlib.h>

void sum (char op1[], char op2[]){
      ce:	0f 93       	push	r16
      d0:	1f 93       	push	r17
      d2:	cf 93       	push	r28
      d4:	df 93       	push	r29
      d6:	ec 01       	movw	r28, r24
      d8:	8b 01       	movw	r16, r22
	LCD_GOTO_XY(2,0);
      da:	60 e0       	ldi	r22, 0x00	; 0
      dc:	82 e0       	ldi	r24, 0x02	; 2
      de:	0e 94 00 02 	call	0x400	; 0x400 <LCD_GOTO_XY>
	dipaly_number(atoi(op1) + atoi(op2));
      e2:	ce 01       	movw	r24, r28
      e4:	0e 94 0a 06 	call	0xc14	; 0xc14 <atoi>
      e8:	ec 01       	movw	r28, r24
      ea:	c8 01       	movw	r24, r16
      ec:	0e 94 0a 06 	call	0xc14	; 0xc14 <atoi>
      f0:	8c 0f       	add	r24, r28
      f2:	9d 1f       	adc	r25, r29
      f4:	0e 94 85 02 	call	0x50a	; 0x50a <dipaly_number>
}
      f8:	df 91       	pop	r29
      fa:	cf 91       	pop	r28
      fc:	1f 91       	pop	r17
      fe:	0f 91       	pop	r16
     100:	08 95       	ret

00000102 <subtract>:

void subtract (char op1[], char op2[]){
     102:	0f 93       	push	r16
     104:	1f 93       	push	r17
     106:	cf 93       	push	r28
     108:	df 93       	push	r29
     10a:	ec 01       	movw	r28, r24
     10c:	8b 01       	movw	r16, r22
	LCD_GOTO_XY(2,0);
     10e:	60 e0       	ldi	r22, 0x00	; 0
     110:	82 e0       	ldi	r24, 0x02	; 2
     112:	0e 94 00 02 	call	0x400	; 0x400 <LCD_GOTO_XY>
	dipaly_number(atoi(op1)-atoi(op2));
     116:	ce 01       	movw	r24, r28
     118:	0e 94 0a 06 	call	0xc14	; 0xc14 <atoi>
     11c:	ec 01       	movw	r28, r24
     11e:	c8 01       	movw	r24, r16
     120:	0e 94 0a 06 	call	0xc14	; 0xc14 <atoi>
     124:	9e 01       	movw	r18, r28
     126:	28 1b       	sub	r18, r24
     128:	39 0b       	sbc	r19, r25
     12a:	c9 01       	movw	r24, r18
     12c:	0e 94 85 02 	call	0x50a	; 0x50a <dipaly_number>
}
     130:	df 91       	pop	r29
     132:	cf 91       	pop	r28
     134:	1f 91       	pop	r17
     136:	0f 91       	pop	r16
     138:	08 95       	ret

0000013a <multiplay>:

void multiplay (char op1[], char op2[]){	
     13a:	0f 93       	push	r16
     13c:	1f 93       	push	r17
     13e:	cf 93       	push	r28
     140:	df 93       	push	r29
     142:	ec 01       	movw	r28, r24
     144:	8b 01       	movw	r16, r22
	LCD_GOTO_XY(2,0);
     146:	60 e0       	ldi	r22, 0x00	; 0
     148:	82 e0       	ldi	r24, 0x02	; 2
     14a:	0e 94 00 02 	call	0x400	; 0x400 <LCD_GOTO_XY>
	dipaly_number(atoi(op1)*atoi(op2));
     14e:	ce 01       	movw	r24, r28
     150:	0e 94 0a 06 	call	0xc14	; 0xc14 <atoi>
     154:	ec 01       	movw	r28, r24
     156:	c8 01       	movw	r24, r16
     158:	0e 94 0a 06 	call	0xc14	; 0xc14 <atoi>
     15c:	9c 01       	movw	r18, r24
     15e:	c2 9f       	mul	r28, r18
     160:	c0 01       	movw	r24, r0
     162:	c3 9f       	mul	r28, r19
     164:	90 0d       	add	r25, r0
     166:	d2 9f       	mul	r29, r18
     168:	90 0d       	add	r25, r0
     16a:	11 24       	eor	r1, r1
     16c:	0e 94 85 02 	call	0x50a	; 0x50a <dipaly_number>
}
     170:	df 91       	pop	r29
     172:	cf 91       	pop	r28
     174:	1f 91       	pop	r17
     176:	0f 91       	pop	r16
     178:	08 95       	ret

0000017a <divide>:

void divide (char op1[], char op2[]){
     17a:	cf 92       	push	r12
     17c:	df 92       	push	r13
     17e:	ef 92       	push	r14
     180:	ff 92       	push	r15
     182:	cf 93       	push	r28
     184:	df 93       	push	r29
     186:	eb 01       	movw	r28, r22
	float total = ( atof(op1) / atof(op2) );
     188:	0e 94 06 06 	call	0xc0c	; 0xc0c <atof>
     18c:	6b 01       	movw	r12, r22
     18e:	7c 01       	movw	r14, r24
     190:	ce 01       	movw	r24, r28
     192:	0e 94 06 06 	call	0xc0c	; 0xc0c <atof>
     196:	9b 01       	movw	r18, r22
     198:	ac 01       	movw	r20, r24
     19a:	c7 01       	movw	r24, r14
     19c:	b6 01       	movw	r22, r12
     19e:	0e 94 3f 04 	call	0x87e	; 0x87e <__divsf3>
     1a2:	6b 01       	movw	r12, r22
     1a4:	7c 01       	movw	r14, r24
	LCD_GOTO_XY(2,0);
     1a6:	60 e0       	ldi	r22, 0x00	; 0
     1a8:	82 e0       	ldi	r24, 0x02	; 2
     1aa:	0e 94 00 02 	call	0x400	; 0x400 <LCD_GOTO_XY>
	dipaly_real_number(total);
     1ae:	c7 01       	movw	r24, r14
     1b0:	b6 01       	movw	r22, r12
     1b2:	0e 94 b2 02 	call	0x564	; 0x564 <dipaly_real_number>
}
     1b6:	df 91       	pop	r29
     1b8:	cf 91       	pop	r28
     1ba:	ff 90       	pop	r15
     1bc:	ef 90       	pop	r14
     1be:	df 90       	pop	r13
     1c0:	cf 90       	pop	r12
     1c2:	08 95       	ret

000001c4 <Keypad_init>:

int Key_padRow[] = {R0, R1, R2, R3}; //rows of the keypad
int Key_padCol[] = {C0, C1, C2, C3};//columns

void Keypad_init(){
	DataDir_KEYPAD_PORT &= ~((1 << R0) | (1 << R1) | (1 << R2) | (1 << R3));
     1c4:	81 b3       	in	r24, 0x11	; 17
     1c6:	80 7f       	andi	r24, 0xF0	; 240
     1c8:	81 bb       	out	0x11, r24	; 17
	DataDir_KEYPAD_PORT |= ((1 << C0) | (1 << C1) | (1 << C2) | (1 << C3));
     1ca:	81 b3       	in	r24, 0x11	; 17
     1cc:	80 6f       	ori	r24, 0xF0	; 240
     1ce:	81 bb       	out	0x11, r24	; 17
	KEYPAD_PORT = 0xFF;
     1d0:	8f ef       	ldi	r24, 0xFF	; 255
     1d2:	82 bb       	out	0x12, r24	; 18
     1d4:	08 95       	ret

000001d6 <Keypad_getkey>:
}

char Keypad_getkey(){
     1d6:	ef 92       	push	r14
     1d8:	ff 92       	push	r15
     1da:	0f 93       	push	r16
     1dc:	1f 93       	push	r17
     1de:	cf 93       	push	r28
     1e0:	df 93       	push	r29
     1e2:	c0 e6       	ldi	r28, 0x60	; 96
     1e4:	d0 e0       	ldi	r29, 0x00	; 0
	int i,j;
	for (i = 0; i < 4; i++){
     1e6:	60 e0       	ldi	r22, 0x00	; 0
     1e8:	70 e0       	ldi	r23, 0x00	; 0
		KEYPAD_PORT |= ((1<<Key_padCol[0]) | (1<<Key_padCol[1]) | (1<<Key_padCol[2]) | (1<<Key_padCol[3]));
     1ea:	de 01       	movw	r26, r28
     1ec:	41 e0       	ldi	r20, 0x01	; 1
     1ee:	50 e0       	ldi	r21, 0x00	; 0
     1f0:	92 b3       	in	r25, 0x12	; 18
     1f2:	fa 01       	movw	r30, r20
     1f4:	0c 90       	ld	r0, X
     1f6:	02 c0       	rjmp	.+4      	; 0x1fc <Keypad_getkey+0x26>
     1f8:	ee 0f       	add	r30, r30
     1fa:	ff 1f       	adc	r31, r31
     1fc:	0a 94       	dec	r0
     1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <Keypad_getkey+0x22>
     200:	9a 01       	movw	r18, r20
     202:	12 96       	adiw	r26, 0x02	; 2
     204:	0c 90       	ld	r0, X
     206:	12 97       	sbiw	r26, 0x02	; 2
     208:	02 c0       	rjmp	.+4      	; 0x20e <Keypad_getkey+0x38>
     20a:	22 0f       	add	r18, r18
     20c:	33 1f       	adc	r19, r19
     20e:	0a 94       	dec	r0
     210:	e2 f7       	brpl	.-8      	; 0x20a <Keypad_getkey+0x34>
     212:	2e 2b       	or	r18, r30
     214:	82 2f       	mov	r24, r18
     216:	89 2b       	or	r24, r25
     218:	9a 01       	movw	r18, r20
     21a:	14 96       	adiw	r26, 0x04	; 4
     21c:	0c 90       	ld	r0, X
     21e:	14 97       	sbiw	r26, 0x04	; 4
     220:	02 c0       	rjmp	.+4      	; 0x226 <Keypad_getkey+0x50>
     222:	22 0f       	add	r18, r18
     224:	33 1f       	adc	r19, r19
     226:	0a 94       	dec	r0
     228:	e2 f7       	brpl	.-8      	; 0x222 <Keypad_getkey+0x4c>
     22a:	28 2b       	or	r18, r24
     22c:	ca 01       	movw	r24, r20
     22e:	16 96       	adiw	r26, 0x06	; 6
     230:	0c 90       	ld	r0, X
     232:	16 97       	sbiw	r26, 0x06	; 6
     234:	02 c0       	rjmp	.+4      	; 0x23a <Keypad_getkey+0x64>
     236:	88 0f       	add	r24, r24
     238:	99 1f       	adc	r25, r25
     23a:	0a 94       	dec	r0
     23c:	e2 f7       	brpl	.-8      	; 0x236 <Keypad_getkey+0x60>
     23e:	82 2b       	or	r24, r18
     240:	82 bb       	out	0x12, r24	; 18
		KEYPAD_PORT &= ~(1<<Key_padCol[i]);
     242:	92 b3       	in	r25, 0x12	; 18
     244:	88 81       	ld	r24, Y
     246:	22 96       	adiw	r28, 0x02	; 2
     248:	9a 01       	movw	r18, r20
     24a:	02 c0       	rjmp	.+4      	; 0x250 <Keypad_getkey+0x7a>
     24c:	22 0f       	add	r18, r18
     24e:	33 1f       	adc	r19, r19
     250:	8a 95       	dec	r24
     252:	e2 f7       	brpl	.-8      	; 0x24c <Keypad_getkey+0x76>
     254:	82 2f       	mov	r24, r18
     256:	80 95       	com	r24
     258:	89 23       	and	r24, r25
     25a:	82 bb       	out	0x12, r24	; 18
     25c:	e8 e6       	ldi	r30, 0x68	; 104
     25e:	f0 e0       	ldi	r31, 0x00	; 0
     260:	ee 24       	eor	r14, r14
     262:	e3 94       	inc	r14
     264:	f1 2c       	mov	r15, r1
     266:	00 e0       	ldi	r16, 0x00	; 0
     268:	10 e0       	ldi	r17, 0x00	; 0
     26a:	05 c0       	rjmp	.+10     	; 0x276 <Keypad_getkey+0xa0>
     26c:	0f 5f       	subi	r16, 0xFF	; 255
     26e:	1f 4f       	sbci	r17, 0xFF	; 255
     270:	8f ef       	ldi	r24, 0xFF	; 255
     272:	e8 1a       	sub	r14, r24
     274:	f8 0a       	sbc	r15, r24
		for(j = 0; j < 4; j++){
			if (!(keypadPIN & (1 << Key_padRow[j])))
     276:	80 b3       	in	r24, 0x10	; 16
     278:	20 81       	ld	r18, Z
     27a:	32 96       	adiw	r30, 0x02	; 2
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	02 2e       	mov	r0, r18
     280:	02 c0       	rjmp	.+4      	; 0x286 <Keypad_getkey+0xb0>
     282:	95 95       	asr	r25
     284:	87 95       	ror	r24
     286:	0a 94       	dec	r0
     288:	e2 f7       	brpl	.-8      	; 0x282 <Keypad_getkey+0xac>
     28a:	80 fd       	sbrc	r24, 0
     28c:	50 c0       	rjmp	.+160    	; 0x32e <Keypad_getkey+0x158>
     28e:	ca 01       	movw	r24, r20
     290:	02 c0       	rjmp	.+4      	; 0x296 <Keypad_getkey+0xc0>
     292:	88 0f       	add	r24, r24
     294:	99 1f       	adc	r25, r25
     296:	2a 95       	dec	r18
     298:	e2 f7       	brpl	.-8      	; 0x292 <Keypad_getkey+0xbc>
     29a:	9c 01       	movw	r18, r24
			{
				while(!(keypadPIN & (1 << Key_padRow[j])));
     29c:	80 b3       	in	r24, 0x10	; 16
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	82 23       	and	r24, r18
     2a2:	93 23       	and	r25, r19
     2a4:	89 2b       	or	r24, r25
     2a6:	d1 f3       	breq	.-12     	; 0x29c <Keypad_getkey+0xc6>
				switch(i){
     2a8:	61 30       	cpi	r22, 0x01	; 1
     2aa:	71 05       	cpc	r23, r1
     2ac:	c9 f0       	breq	.+50     	; 0x2e0 <Keypad_getkey+0x10a>
     2ae:	24 f4       	brge	.+8      	; 0x2b8 <Keypad_getkey+0xe2>
     2b0:	61 15       	cp	r22, r1
     2b2:	71 05       	cpc	r23, r1
     2b4:	41 f0       	breq	.+16     	; 0x2c6 <Keypad_getkey+0xf0>
     2b6:	3b c0       	rjmp	.+118    	; 0x32e <Keypad_getkey+0x158>
     2b8:	62 30       	cpi	r22, 0x02	; 2
     2ba:	71 05       	cpc	r23, r1
     2bc:	f1 f0       	breq	.+60     	; 0x2fa <Keypad_getkey+0x124>
     2be:	63 30       	cpi	r22, 0x03	; 3
     2c0:	71 05       	cpc	r23, r1
     2c2:	41 f1       	breq	.+80     	; 0x314 <Keypad_getkey+0x13e>
     2c4:	34 c0       	rjmp	.+104    	; 0x32e <Keypad_getkey+0x158>
					case (0):
						if (j == 0) return '7';
     2c6:	01 15       	cp	r16, r1
     2c8:	11 05       	cpc	r17, r1
     2ca:	f1 f1       	breq	.+124    	; 0x348 <Keypad_getkey+0x172>
						else if (j == 1) return '4';
     2cc:	01 30       	cpi	r16, 0x01	; 1
     2ce:	11 05       	cpc	r17, r1
     2d0:	e9 f1       	breq	.+122    	; 0x34c <Keypad_getkey+0x176>
						else if (j == 2) return '1';
     2d2:	02 30       	cpi	r16, 0x02	; 2
     2d4:	11 05       	cpc	r17, r1
     2d6:	e1 f1       	breq	.+120    	; 0x350 <Keypad_getkey+0x17a>
						else if (j == 3) return '?';
     2d8:	03 30       	cpi	r16, 0x03	; 3
     2da:	11 05       	cpc	r17, r1
     2dc:	41 f5       	brne	.+80     	; 0x32e <Keypad_getkey+0x158>
     2de:	3a c0       	rjmp	.+116    	; 0x354 <Keypad_getkey+0x17e>
						break;
					case (1):
						if (j == 0) return '8';
     2e0:	01 15       	cp	r16, r1
     2e2:	11 05       	cpc	r17, r1
     2e4:	c9 f1       	breq	.+114    	; 0x358 <Keypad_getkey+0x182>
						else if (j == 1) return '5';
     2e6:	01 30       	cpi	r16, 0x01	; 1
     2e8:	11 05       	cpc	r17, r1
     2ea:	c1 f1       	breq	.+112    	; 0x35c <Keypad_getkey+0x186>
						else if (j == 2) return '2';
     2ec:	02 30       	cpi	r16, 0x02	; 2
     2ee:	11 05       	cpc	r17, r1
     2f0:	b9 f1       	breq	.+110    	; 0x360 <Keypad_getkey+0x18a>
						else if (j == 3) return '0';
     2f2:	03 30       	cpi	r16, 0x03	; 3
     2f4:	11 05       	cpc	r17, r1
     2f6:	d9 f4       	brne	.+54     	; 0x32e <Keypad_getkey+0x158>
     2f8:	35 c0       	rjmp	.+106    	; 0x364 <Keypad_getkey+0x18e>
						break;
					case (2):
						if (j == 0) return '9';
     2fa:	01 15       	cp	r16, r1
     2fc:	11 05       	cpc	r17, r1
     2fe:	a1 f1       	breq	.+104    	; 0x368 <Keypad_getkey+0x192>
						else if (j == 1) return '6';
     300:	01 30       	cpi	r16, 0x01	; 1
     302:	11 05       	cpc	r17, r1
     304:	99 f1       	breq	.+102    	; 0x36c <Keypad_getkey+0x196>
						else if (j == 2) return '3';
     306:	02 30       	cpi	r16, 0x02	; 2
     308:	11 05       	cpc	r17, r1
     30a:	91 f1       	breq	.+100    	; 0x370 <Keypad_getkey+0x19a>
						else if (j == 3) return '=';
     30c:	03 30       	cpi	r16, 0x03	; 3
     30e:	11 05       	cpc	r17, r1
     310:	71 f4       	brne	.+28     	; 0x32e <Keypad_getkey+0x158>
     312:	30 c0       	rjmp	.+96     	; 0x374 <Keypad_getkey+0x19e>
						break;
					case (3):
						if (j == 0) return '/';
     314:	01 15       	cp	r16, r1
     316:	11 05       	cpc	r17, r1
     318:	79 f1       	breq	.+94     	; 0x378 <Keypad_getkey+0x1a2>
						else if (j == 1) return '*';
     31a:	01 30       	cpi	r16, 0x01	; 1
     31c:	11 05       	cpc	r17, r1
     31e:	71 f1       	breq	.+92     	; 0x37c <Keypad_getkey+0x1a6>
						else if (j == 2) return '-';
     320:	02 30       	cpi	r16, 0x02	; 2
     322:	11 05       	cpc	r17, r1
     324:	69 f1       	breq	.+90     	; 0x380 <Keypad_getkey+0x1aa>
						else if (j == 3) return '+';
     326:	03 30       	cpi	r16, 0x03	; 3
     328:	11 05       	cpc	r17, r1
     32a:	71 f5       	brne	.+92     	; 0x388 <Keypad_getkey+0x1b2>
     32c:	2b c0       	rjmp	.+86     	; 0x384 <Keypad_getkey+0x1ae>
char Keypad_getkey(){
	int i,j;
	for (i = 0; i < 4; i++){
		KEYPAD_PORT |= ((1<<Key_padCol[0]) | (1<<Key_padCol[1]) | (1<<Key_padCol[2]) | (1<<Key_padCol[3]));
		KEYPAD_PORT &= ~(1<<Key_padCol[i]);
		for(j = 0; j < 4; j++){
     32e:	94 e0       	ldi	r25, 0x04	; 4
     330:	e9 16       	cp	r14, r25
     332:	f1 04       	cpc	r15, r1
     334:	0c f4       	brge	.+2      	; 0x338 <Keypad_getkey+0x162>
     336:	9a cf       	rjmp	.-204    	; 0x26c <Keypad_getkey+0x96>
	KEYPAD_PORT = 0xFF;
}

char Keypad_getkey(){
	int i,j;
	for (i = 0; i < 4; i++){
     338:	6f 5f       	subi	r22, 0xFF	; 255
     33a:	7f 4f       	sbci	r23, 0xFF	; 255
     33c:	64 30       	cpi	r22, 0x04	; 4
     33e:	71 05       	cpc	r23, r1
     340:	09 f0       	breq	.+2      	; 0x344 <Keypad_getkey+0x16e>
     342:	56 cf       	rjmp	.-340    	; 0x1f0 <Keypad_getkey+0x1a>
						break;
				}
			}
		}
	}
	return 'A';
     344:	81 e4       	ldi	r24, 0x41	; 65
     346:	26 c0       	rjmp	.+76     	; 0x394 <Keypad_getkey+0x1be>
			if (!(keypadPIN & (1 << Key_padRow[j])))
			{
				while(!(keypadPIN & (1 << Key_padRow[j])));
				switch(i){
					case (0):
						if (j == 0) return '7';
     348:	87 e3       	ldi	r24, 0x37	; 55
     34a:	24 c0       	rjmp	.+72     	; 0x394 <Keypad_getkey+0x1be>
						else if (j == 1) return '4';
     34c:	84 e3       	ldi	r24, 0x34	; 52
     34e:	22 c0       	rjmp	.+68     	; 0x394 <Keypad_getkey+0x1be>
						else if (j == 2) return '1';
     350:	81 e3       	ldi	r24, 0x31	; 49
     352:	20 c0       	rjmp	.+64     	; 0x394 <Keypad_getkey+0x1be>
						else if (j == 3) return '?';
     354:	8f e3       	ldi	r24, 0x3F	; 63
     356:	1e c0       	rjmp	.+60     	; 0x394 <Keypad_getkey+0x1be>
						break;
					case (1):
						if (j == 0) return '8';
     358:	88 e3       	ldi	r24, 0x38	; 56
     35a:	1c c0       	rjmp	.+56     	; 0x394 <Keypad_getkey+0x1be>
						else if (j == 1) return '5';
     35c:	85 e3       	ldi	r24, 0x35	; 53
     35e:	1a c0       	rjmp	.+52     	; 0x394 <Keypad_getkey+0x1be>
						else if (j == 2) return '2';
     360:	82 e3       	ldi	r24, 0x32	; 50
     362:	18 c0       	rjmp	.+48     	; 0x394 <Keypad_getkey+0x1be>
						else if (j == 3) return '0';
     364:	80 e3       	ldi	r24, 0x30	; 48
     366:	16 c0       	rjmp	.+44     	; 0x394 <Keypad_getkey+0x1be>
						break;
					case (2):
						if (j == 0) return '9';
     368:	89 e3       	ldi	r24, 0x39	; 57
     36a:	14 c0       	rjmp	.+40     	; 0x394 <Keypad_getkey+0x1be>
						else if (j == 1) return '6';
     36c:	86 e3       	ldi	r24, 0x36	; 54
     36e:	12 c0       	rjmp	.+36     	; 0x394 <Keypad_getkey+0x1be>
						else if (j == 2) return '3';
     370:	83 e3       	ldi	r24, 0x33	; 51
     372:	10 c0       	rjmp	.+32     	; 0x394 <Keypad_getkey+0x1be>
						else if (j == 3) return '=';
     374:	8d e3       	ldi	r24, 0x3D	; 61
     376:	0e c0       	rjmp	.+28     	; 0x394 <Keypad_getkey+0x1be>
						break;
					case (3):
						if (j == 0) return '/';
     378:	8f e2       	ldi	r24, 0x2F	; 47
     37a:	0c c0       	rjmp	.+24     	; 0x394 <Keypad_getkey+0x1be>
						else if (j == 1) return '*';
     37c:	8a e2       	ldi	r24, 0x2A	; 42
     37e:	0a c0       	rjmp	.+20     	; 0x394 <Keypad_getkey+0x1be>
						else if (j == 2) return '-';
     380:	8d e2       	ldi	r24, 0x2D	; 45
     382:	08 c0       	rjmp	.+16     	; 0x394 <Keypad_getkey+0x1be>
						else if (j == 3) return '+';
     384:	8b e2       	ldi	r24, 0x2B	; 43
     386:	06 c0       	rjmp	.+12     	; 0x394 <Keypad_getkey+0x1be>
char Keypad_getkey(){
	int i,j;
	for (i = 0; i < 4; i++){
		KEYPAD_PORT |= ((1<<Key_padCol[0]) | (1<<Key_padCol[1]) | (1<<Key_padCol[2]) | (1<<Key_padCol[3]));
		KEYPAD_PORT &= ~(1<<Key_padCol[i]);
		for(j = 0; j < 4; j++){
     388:	84 e0       	ldi	r24, 0x04	; 4
     38a:	e8 16       	cp	r14, r24
     38c:	f1 04       	cpc	r15, r1
     38e:	0c f4       	brge	.+2      	; 0x392 <Keypad_getkey+0x1bc>
     390:	6d cf       	rjmp	.-294    	; 0x26c <Keypad_getkey+0x96>
						break;
				}
			}
		}
	}
	return 'A';
     392:	81 e4       	ldi	r24, 0x41	; 65
     394:	df 91       	pop	r29
     396:	cf 91       	pop	r28
     398:	1f 91       	pop	r17
     39a:	0f 91       	pop	r16
     39c:	ff 90       	pop	r15
     39e:	ef 90       	pop	r14
     3a0:	08 95       	ret

000003a2 <LCD_lcd_kick>:
	curser = 0;
	LCD_WRITE_COMMAND(LCD_CLEAR_SCREEN);
}

void LCD_lcd_kick(){
	LCD_CTRL |= (1 << EN_SWITCH);
     3a2:	c3 9a       	sbi	0x18, 3	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3a4:	83 ed       	ldi	r24, 0xD3	; 211
     3a6:	90 e3       	ldi	r25, 0x30	; 48
     3a8:	01 97       	sbiw	r24, 0x01	; 1
     3aa:	f1 f7       	brne	.-4      	; 0x3a8 <LCD_lcd_kick+0x6>
     3ac:	00 c0       	rjmp	.+0      	; 0x3ae <LCD_lcd_kick+0xc>
     3ae:	00 00       	nop
	_delay_ms(50);
	LCD_CTRL &= ~(1 << EN_SWITCH);
     3b0:	c3 98       	cbi	0x18, 3	; 24
     3b2:	08 95       	ret

000003b4 <LCD_check_lcd_isbusy>:
	LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW);
	LCD_WRITE_COMMAND(LCD_DISP_ON_CURSOR_BLINK);	
}

void LCD_check_lcd_isbusy(){
	DataDir_LCD_PORT &= ~(0xFF<<DATA_shift);
     3b4:	8a b3       	in	r24, 0x1a	; 26
     3b6:	8f 70       	andi	r24, 0x0F	; 15
     3b8:	8a bb       	out	0x1a, r24	; 26
	LCD_CTRL |= (1 << RW_SWITCH);
     3ba:	c2 9a       	sbi	0x18, 2	; 24
	LCD_CTRL &= ~(1 << RS_SWITCH);
     3bc:	c1 98       	cbi	0x18, 1	; 24
	LCD_lcd_kick();
     3be:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_lcd_kick>
	DataDir_LCD_PORT |= (0xFF<<DATA_shift);
     3c2:	8a b3       	in	r24, 0x1a	; 26
     3c4:	80 6f       	ori	r24, 0xF0	; 240
     3c6:	8a bb       	out	0x1a, r24	; 26
	LCD_CTRL &= ~(1 << RW_SWITCH);
     3c8:	c2 98       	cbi	0x18, 2	; 24
     3ca:	08 95       	ret

000003cc <LCD_WRITE_COMMAND>:
	
}


void LCD_WRITE_COMMAND(unsigned char command){
     3cc:	cf 93       	push	r28
     3ce:	c8 2f       	mov	r28, r24
	#ifdef EIGHT_BIT_MODE
		LCD_check_lcd_isbusy();
     3d0:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LCD_check_lcd_isbusy>
		LCD_PORT = command;
     3d4:	cb bb       	out	0x1b, r28	; 27
		LCD_CTRL &= ~((1 << RS_SWITCH) | (1<<RW_SWITCH)); 
     3d6:	88 b3       	in	r24, 0x18	; 24
     3d8:	89 7f       	andi	r24, 0xF9	; 249
     3da:	88 bb       	out	0x18, r24	; 24
     3dc:	89 ef       	ldi	r24, 0xF9	; 249
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	01 97       	sbiw	r24, 0x01	; 1
     3e2:	f1 f7       	brne	.-4      	; 0x3e0 <LCD_WRITE_COMMAND+0x14>
     3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <LCD_WRITE_COMMAND+0x1a>
     3e6:	00 00       	nop
		_delay_ms(1);
		LCD_lcd_kick();
     3e8:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_lcd_kick>
		LCD_lcd_kick ();
		LCD_PORT = (LCD_PORT & 0x0F) | (command << 4);
		LCD_CTRL &= ~ ((1<<RW_SWITCH)|(1<<RS_SWITCH));
		LCD_lcd_kick();
	#endif
}
     3ec:	cf 91       	pop	r28
     3ee:	08 95       	ret

000003f0 <LCD_clear_screen>:
#include <string.h>

int curser = 0;

void LCD_clear_screen(){
	curser = 0;
     3f0:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__data_end+0x1>
     3f4:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__data_end>
	LCD_WRITE_COMMAND(LCD_CLEAR_SCREEN);
     3f8:	81 e0       	ldi	r24, 0x01	; 1
     3fa:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_WRITE_COMMAND>
     3fe:	08 95       	ret

00000400 <LCD_GOTO_XY>:
	_delay_ms(50);
	LCD_CTRL &= ~(1 << EN_SWITCH);
}

void LCD_GOTO_XY(unsigned char line, unsigned char position){
	if (line == 1)
     400:	81 30       	cpi	r24, 0x01	; 1
     402:	39 f4       	brne	.+14     	; 0x412 <LCD_GOTO_XY+0x12>
	{
		if (position < 16 && position >= 0)
     404:	60 31       	cpi	r22, 0x10	; 16
     406:	98 f4       	brcc	.+38     	; 0x42e <LCD_GOTO_XY+0x2e>
		{
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW+position);
     408:	80 e8       	ldi	r24, 0x80	; 128
     40a:	86 0f       	add	r24, r22
     40c:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_WRITE_COMMAND>
     410:	08 95       	ret
		}
	}
	if (line == 2)
     412:	82 30       	cpi	r24, 0x02	; 2
     414:	61 f4       	brne	.+24     	; 0x42e <LCD_GOTO_XY+0x2e>
	{
		if (position < 16 && position >= 0)
     416:	60 31       	cpi	r22, 0x10	; 16
     418:	50 f4       	brcc	.+20     	; 0x42e <LCD_GOTO_XY+0x2e>
		{
			curser = 16;
     41a:	80 e1       	ldi	r24, 0x10	; 16
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__data_end+0x1>
     422:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__data_end>
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_SECOND_ROW+position);
     426:	80 ec       	ldi	r24, 0xC0	; 192
     428:	86 0f       	add	r24, r22
     42a:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_WRITE_COMMAND>
     42e:	08 95       	ret

00000430 <LCD_INIT>:
     430:	87 e8       	ldi	r24, 0x87	; 135
     432:	93 e1       	ldi	r25, 0x13	; 19
     434:	01 97       	sbiw	r24, 0x01	; 1
     436:	f1 f7       	brne	.-4      	; 0x434 <LCD_INIT+0x4>
     438:	00 c0       	rjmp	.+0      	; 0x43a <LCD_INIT+0xa>
     43a:	00 00       	nop
	}
}

void LCD_INIT(){
	_delay_ms(20);
	DataDir_LCD_CTRL |= (1<<EN_SWITCH | 1<<RS_SWITCH | 1<<RW_SWITCH);
     43c:	87 b3       	in	r24, 0x17	; 23
     43e:	8e 60       	ori	r24, 0x0E	; 14
     440:	87 bb       	out	0x17, r24	; 23
	LCD_CTRL &= ~ (1<<EN_SWITCH | 1<<RS_SWITCH | 1<<RW_SWITCH);
     442:	88 b3       	in	r24, 0x18	; 24
     444:	81 7f       	andi	r24, 0xF1	; 241
     446:	88 bb       	out	0x18, r24	; 24
	DataDir_LCD_PORT = 0xFF;
     448:	8f ef       	ldi	r24, 0xFF	; 255
     44a:	8a bb       	out	0x1a, r24	; 26
     44c:	85 ea       	ldi	r24, 0xA5	; 165
     44e:	9e e0       	ldi	r25, 0x0E	; 14
     450:	01 97       	sbiw	r24, 0x01	; 1
     452:	f1 f7       	brne	.-4      	; 0x450 <LCD_INIT+0x20>
     454:	00 c0       	rjmp	.+0      	; 0x456 <LCD_INIT+0x26>
     456:	00 00       	nop
	_delay_ms(15);
	LCD_clear_screen();
     458:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_clear_screen>
	
	#ifdef EIGHT_BIT_MODE
	LCD_WRITE_COMMAND(LCD_FUNCTION_8BIT_2LINES);
     45c:	88 e3       	ldi	r24, 0x38	; 56
     45e:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_WRITE_COMMAND>
		//LCD_WRITE_COMMAND(0x01);
	LCD_WRITE_COMMAND(0x02);
	LCD_WRITE_COMMAND(LCD_FUNCTION_4BIT_2LINES);
	#endif
	
	LCD_WRITE_COMMAND(LCD_ENTRY_MODE);
     462:	86 e0       	ldi	r24, 0x06	; 6
     464:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_WRITE_COMMAND>
	LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW);
     468:	80 e8       	ldi	r24, 0x80	; 128
     46a:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_WRITE_COMMAND>
	LCD_WRITE_COMMAND(LCD_DISP_ON_CURSOR_BLINK);	
     46e:	8f e0       	ldi	r24, 0x0F	; 15
     470:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_WRITE_COMMAND>
     474:	08 95       	ret

00000476 <check_position>:
		LCD_lcd_kick();
	#endif
}

void check_position (){
	curser++;
     476:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__data_end>
     47a:	90 91 81 00 	lds	r25, 0x0081	; 0x800081 <__data_end+0x1>
     47e:	01 96       	adiw	r24, 0x01	; 1
     480:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__data_end+0x1>
     484:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__data_end>
	if (curser == 16)
     488:	80 31       	cpi	r24, 0x10	; 16
     48a:	91 05       	cpc	r25, r1
     48c:	21 f4       	brne	.+8      	; 0x496 <check_position+0x20>
	if (line == 2)
	{
		if (position < 16 && position >= 0)
		{
			curser = 16;
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_SECOND_ROW+position);
     48e:	80 ec       	ldi	r24, 0xC0	; 192
     490:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_WRITE_COMMAND>
     494:	08 95       	ret
	curser++;
	if (curser == 16)
	{
		LCD_GOTO_XY(2,0);
	}
	else if (curser == 32)
     496:	80 97       	sbiw	r24, 0x20	; 32
     498:	49 f4       	brne	.+18     	; 0x4ac <check_position+0x36>
	{
		LCD_clear_screen();
     49a:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_clear_screen>
void LCD_GOTO_XY(unsigned char line, unsigned char position){
	if (line == 1)
	{
		if (position < 16 && position >= 0)
		{
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW+position);
     49e:	80 e8       	ldi	r24, 0x80	; 128
     4a0:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_WRITE_COMMAND>
	}
	else if (curser == 32)
	{
		LCD_clear_screen();
		LCD_GOTO_XY(1,0);
		curser = 0;
     4a4:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__data_end+0x1>
     4a8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__data_end>
     4ac:	08 95       	ret

000004ae <LCD_WRITE_CHAR>:
	}
	
}

void LCD_WRITE_CHAR(unsigned char character){
     4ae:	cf 93       	push	r28
     4b0:	c8 2f       	mov	r28, r24
	#ifdef EIGHT_BIT_MODE
		LCD_check_lcd_isbusy();
     4b2:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LCD_check_lcd_isbusy>
		LCD_PORT = character;
     4b6:	cb bb       	out	0x1b, r28	; 27
		LCD_CTRL &= ~(1 << RW_SWITCH);
     4b8:	c2 98       	cbi	0x18, 2	; 24
		LCD_CTRL |= (1 << RS_SWITCH);
     4ba:	c1 9a       	sbi	0x18, 1	; 24
     4bc:	89 ef       	ldi	r24, 0xF9	; 249
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	01 97       	sbiw	r24, 0x01	; 1
     4c2:	f1 f7       	brne	.-4      	; 0x4c0 <LCD_WRITE_CHAR+0x12>
     4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <LCD_WRITE_CHAR+0x18>
     4c6:	00 00       	nop
		_delay_ms(1);
		LCD_lcd_kick();
     4c8:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_lcd_kick>
     4cc:	89 ef       	ldi	r24, 0xF9	; 249
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	01 97       	sbiw	r24, 0x01	; 1
     4d2:	f1 f7       	brne	.-4      	; 0x4d0 <LCD_WRITE_CHAR+0x22>
     4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <LCD_WRITE_CHAR+0x28>
     4d6:	00 00       	nop
		_delay_ms(1);
		check_position();
     4d8:	0e 94 3b 02 	call	0x476	; 0x476 <check_position>
     4dc:	89 ef       	ldi	r24, 0xF9	; 249
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	01 97       	sbiw	r24, 0x01	; 1
     4e2:	f1 f7       	brne	.-4      	; 0x4e0 <LCD_WRITE_CHAR+0x32>
     4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <LCD_WRITE_CHAR+0x38>
     4e6:	00 00       	nop
		LCD_PORT = (LCD_PORT & 0x0F) | (character << 4);
		LCD_CTRL |= 1<<RS_SWITCH; //turn RS ON for Data mode.
		LCD_CTRL &= ~ (1<<RW_SWITCH);//turn RW off so you can write.
		LCD_lcd_kick ();
	#endif
}
     4e8:	cf 91       	pop	r28
     4ea:	08 95       	ret

000004ec <LCD_WRITE_STRING>:

void LCD_WRITE_STRING(char* string){
     4ec:	cf 93       	push	r28
     4ee:	df 93       	push	r29
     4f0:	ec 01       	movw	r28, r24
	while (*string > 0) {
     4f2:	88 81       	ld	r24, Y
     4f4:	88 23       	and	r24, r24
     4f6:	31 f0       	breq	.+12     	; 0x504 <LCD_WRITE_STRING+0x18>
     4f8:	21 96       	adiw	r28, 0x01	; 1
		LCD_WRITE_CHAR(*string++);
     4fa:	0e 94 57 02 	call	0x4ae	; 0x4ae <LCD_WRITE_CHAR>
		LCD_lcd_kick ();
	#endif
}

void LCD_WRITE_STRING(char* string){
	while (*string > 0) {
     4fe:	89 91       	ld	r24, Y+
     500:	81 11       	cpse	r24, r1
     502:	fb cf       	rjmp	.-10     	; 0x4fa <LCD_WRITE_STRING+0xe>
		LCD_WRITE_CHAR(*string++);
	}
}
     504:	df 91       	pop	r29
     506:	cf 91       	pop	r28
     508:	08 95       	ret

0000050a <dipaly_number>:

void dipaly_number(int number)
{
     50a:	0f 93       	push	r16
     50c:	1f 93       	push	r17
     50e:	cf 93       	push	r28
     510:	df 93       	push	r29
     512:	cd b7       	in	r28, 0x3d	; 61
     514:	de b7       	in	r29, 0x3e	; 62
     516:	60 97       	sbiw	r28, 0x10	; 16
     518:	0f b6       	in	r0, 0x3f	; 63
     51a:	f8 94       	cli
     51c:	de bf       	out	0x3e, r29	; 62
     51e:	0f be       	out	0x3f, r0	; 63
     520:	cd bf       	out	0x3d, r28	; 61
	char str[16];
	sprintf(str,"%d",number);
     522:	9f 93       	push	r25
     524:	8f 93       	push	r24
     526:	80 e7       	ldi	r24, 0x70	; 112
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	9f 93       	push	r25
     52c:	8f 93       	push	r24
     52e:	8e 01       	movw	r16, r28
     530:	0f 5f       	subi	r16, 0xFF	; 255
     532:	1f 4f       	sbci	r17, 0xFF	; 255
     534:	1f 93       	push	r17
     536:	0f 93       	push	r16
     538:	0e 94 30 06 	call	0xc60	; 0xc60 <sprintf>
	LCD_WRITE_STRING(str);
     53c:	c8 01       	movw	r24, r16
     53e:	0e 94 76 02 	call	0x4ec	; 0x4ec <LCD_WRITE_STRING>
}
     542:	0f 90       	pop	r0
     544:	0f 90       	pop	r0
     546:	0f 90       	pop	r0
     548:	0f 90       	pop	r0
     54a:	0f 90       	pop	r0
     54c:	0f 90       	pop	r0
     54e:	60 96       	adiw	r28, 0x10	; 16
     550:	0f b6       	in	r0, 0x3f	; 63
     552:	f8 94       	cli
     554:	de bf       	out	0x3e, r29	; 62
     556:	0f be       	out	0x3f, r0	; 63
     558:	cd bf       	out	0x3d, r28	; 61
     55a:	df 91       	pop	r29
     55c:	cf 91       	pop	r28
     55e:	1f 91       	pop	r17
     560:	0f 91       	pop	r16
     562:	08 95       	ret

00000564 <dipaly_real_number>:

void dipaly_real_number(float number)
{
     564:	8f 92       	push	r8
     566:	9f 92       	push	r9
     568:	af 92       	push	r10
     56a:	bf 92       	push	r11
     56c:	cf 92       	push	r12
     56e:	df 92       	push	r13
     570:	ef 92       	push	r14
     572:	ff 92       	push	r15
     574:	0f 93       	push	r16
     576:	1f 93       	push	r17
     578:	cf 93       	push	r28
     57a:	df 93       	push	r29
     57c:	cd b7       	in	r28, 0x3d	; 61
     57e:	de b7       	in	r29, 0x3e	; 62
     580:	60 97       	sbiw	r28, 0x10	; 16
     582:	0f b6       	in	r0, 0x3f	; 63
     584:	f8 94       	cli
     586:	de bf       	out	0x3e, r29	; 62
     588:	0f be       	out	0x3f, r0	; 63
     58a:	cd bf       	out	0x3d, r28	; 61
     58c:	6b 01       	movw	r12, r22
     58e:	7c 01       	movw	r14, r24
	char strr[16];
	
	char *tmpsign = (number < 0) ? "-" : "";
     590:	20 e0       	ldi	r18, 0x00	; 0
     592:	30 e0       	ldi	r19, 0x00	; 0
     594:	a9 01       	movw	r20, r18
     596:	0e 94 3a 04 	call	0x874	; 0x874 <__cmpsf2>
     59a:	88 23       	and	r24, r24
     59c:	64 f0       	brlt	.+24     	; 0x5b6 <dipaly_real_number+0x52>
	float tmpval = (number < 0) ? -number : number;
     59e:	20 e0       	ldi	r18, 0x00	; 0
     5a0:	30 e0       	ldi	r19, 0x00	; 0
     5a2:	a9 01       	movw	r20, r18
     5a4:	c7 01       	movw	r24, r14
     5a6:	b6 01       	movw	r22, r12
     5a8:	0e 94 3a 04 	call	0x874	; 0x874 <__cmpsf2>
     5ac:	88 23       	and	r24, r24
     5ae:	54 f4       	brge	.+20     	; 0x5c4 <dipaly_real_number+0x60>

void dipaly_real_number(float number)
{
	char strr[16];
	
	char *tmpsign = (number < 0) ? "-" : "";
     5b0:	04 e7       	ldi	r16, 0x74	; 116
     5b2:	10 e0       	ldi	r17, 0x00	; 0
     5b4:	02 c0       	rjmp	.+4      	; 0x5ba <dipaly_real_number+0x56>
     5b6:	03 e7       	ldi	r16, 0x73	; 115
     5b8:	10 e0       	ldi	r17, 0x00	; 0
	float tmpval = (number < 0) ? -number : number;
     5ba:	f7 fa       	bst	r15, 7
     5bc:	f0 94       	com	r15
     5be:	f7 f8       	bld	r15, 7
     5c0:	f0 94       	com	r15
     5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <dipaly_real_number+0x64>

void dipaly_real_number(float number)
{
	char strr[16];
	
	char *tmpsign = (number < 0) ? "-" : "";
     5c4:	04 e7       	ldi	r16, 0x74	; 116
     5c6:	10 e0       	ldi	r17, 0x00	; 0
	float tmpval = (number < 0) ? -number : number;
	
	int tmpint1 = tmpval;
     5c8:	c7 01       	movw	r24, r14
     5ca:	b6 01       	movw	r22, r12
     5cc:	0e 94 b1 04 	call	0x962	; 0x962 <__fixsfsi>
     5d0:	4b 01       	movw	r8, r22
     5d2:	5c 01       	movw	r10, r24
	float tmpfrac = tmpval - tmpint1;
	int tmpint2 = tmpfrac * 1000;
		
	sprintf(strr,"%s%d.%03d",tmpsign,tmpint1,tmpint2);
     5d4:	07 2e       	mov	r0, r23
     5d6:	00 0c       	add	r0, r0
     5d8:	88 0b       	sbc	r24, r24
     5da:	99 0b       	sbc	r25, r25
     5dc:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__floatsisf>
     5e0:	9b 01       	movw	r18, r22
     5e2:	ac 01       	movw	r20, r24
     5e4:	c7 01       	movw	r24, r14
     5e6:	b6 01       	movw	r22, r12
     5e8:	0e 94 cd 03 	call	0x79a	; 0x79a <__subsf3>
     5ec:	20 e0       	ldi	r18, 0x00	; 0
     5ee:	30 e0       	ldi	r19, 0x00	; 0
     5f0:	4a e7       	ldi	r20, 0x7A	; 122
     5f2:	54 e4       	ldi	r21, 0x44	; 68
     5f4:	0e 94 99 05 	call	0xb32	; 0xb32 <__mulsf3>
     5f8:	0e 94 b1 04 	call	0x962	; 0x962 <__fixsfsi>
     5fc:	7f 93       	push	r23
     5fe:	6f 93       	push	r22
     600:	9f 92       	push	r9
     602:	8f 92       	push	r8
     604:	1f 93       	push	r17
     606:	0f 93       	push	r16
     608:	85 e7       	ldi	r24, 0x75	; 117
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	9f 93       	push	r25
     60e:	8f 93       	push	r24
     610:	8e 01       	movw	r16, r28
     612:	0f 5f       	subi	r16, 0xFF	; 255
     614:	1f 4f       	sbci	r17, 0xFF	; 255
     616:	1f 93       	push	r17
     618:	0f 93       	push	r16
     61a:	0e 94 30 06 	call	0xc60	; 0xc60 <sprintf>
	
	LCD_WRITE_STRING(strr);
     61e:	c8 01       	movw	r24, r16
     620:	0e 94 76 02 	call	0x4ec	; 0x4ec <LCD_WRITE_STRING>
     624:	0f b6       	in	r0, 0x3f	; 63
     626:	f8 94       	cli
     628:	de bf       	out	0x3e, r29	; 62
     62a:	0f be       	out	0x3f, r0	; 63
     62c:	cd bf       	out	0x3d, r28	; 61
     62e:	60 96       	adiw	r28, 0x10	; 16
     630:	0f b6       	in	r0, 0x3f	; 63
     632:	f8 94       	cli
     634:	de bf       	out	0x3e, r29	; 62
     636:	0f be       	out	0x3f, r0	; 63
     638:	cd bf       	out	0x3d, r28	; 61
     63a:	df 91       	pop	r29
     63c:	cf 91       	pop	r28
     63e:	1f 91       	pop	r17
     640:	0f 91       	pop	r16
     642:	ff 90       	pop	r15
     644:	ef 90       	pop	r14
     646:	df 90       	pop	r13
     648:	cf 90       	pop	r12
     64a:	bf 90       	pop	r11
     64c:	af 90       	pop	r10
     64e:	9f 90       	pop	r9
     650:	8f 90       	pop	r8
     652:	08 95       	ret

00000654 <reset>:

char op1[16] = {};
char op2[16] = {};
char op = '\0';

void reset() {
     654:	e3 e9       	ldi	r30, 0x93	; 147
     656:	f0 e0       	ldi	r31, 0x00	; 0
     658:	a3 e8       	ldi	r26, 0x83	; 131
     65a:	b0 e0       	ldi	r27, 0x00	; 0
     65c:	83 ea       	ldi	r24, 0xA3	; 163
     65e:	90 e0       	ldi	r25, 0x00	; 0
	
	for (int i = 0 ; i < 16 ; i++){
		op1[i] = '\0';
     660:	11 92       	st	Z+, r1
		op2[i] = '\0';
     662:	1d 92       	st	X+, r1
char op2[16] = {};
char op = '\0';

void reset() {
	
	for (int i = 0 ; i < 16 ; i++){
     664:	e8 17       	cp	r30, r24
     666:	f9 07       	cpc	r31, r25
     668:	d9 f7       	brne	.-10     	; 0x660 <reset+0xc>
		op1[i] = '\0';
		op2[i] = '\0';
	}
	
}
     66a:	08 95       	ret

0000066c <main>:
int main()
{
	int flag = 0;
	int count = 0;
	
	LCD_INIT();
     66c:	0e 94 18 02 	call	0x430	; 0x430 <LCD_INIT>
	Keypad_init();
     670:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <Keypad_init>
     674:	83 ed       	ldi	r24, 0xD3	; 211
     676:	90 e3       	ldi	r25, 0x30	; 48
     678:	01 97       	sbiw	r24, 0x01	; 1
     67a:	f1 f7       	brne	.-4      	; 0x678 <main+0xc>
     67c:	00 c0       	rjmp	.+0      	; 0x67e <main+0x12>
     67e:	00 00       	nop
}

int main()
{
	int flag = 0;
	int count = 0;
     680:	e1 2c       	mov	r14, r1
     682:	f1 2c       	mov	r15, r1
	
}

int main()
{
	int flag = 0;
     684:	00 e0       	ldi	r16, 0x00	; 0
     686:	10 e0       	ldi	r17, 0x00	; 0
			case '?':
				LCD_clear_screen();
				reset();
				op = '\0';
				count = 0;
				flag = 0;
     688:	d1 2c       	mov	r13, r1
     68a:	d0 e0       	ldi	r29, 0x00	; 0
				break;
			default:
				LCD_WRITE_CHAR(key_pressed);
				if (key_pressed == '+' || key_pressed == '-'  || key_pressed == '*' || key_pressed =='/') {
					flag = 1;
     68c:	bb 24       	eor	r11, r11
     68e:	b3 94       	inc	r11
     690:	c1 2c       	mov	r12, r1
	LCD_INIT();
	Keypad_init();
	_delay_ms(50);
	unsigned char key_pressed;
	while(1){
		key_pressed = Keypad_getkey();
     692:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <Keypad_getkey>
     696:	c8 2f       	mov	r28, r24
		switch(key_pressed){
     698:	8f 33       	cpi	r24, 0x3F	; 63
     69a:	19 f0       	breq	.+6      	; 0x6a2 <main+0x36>
     69c:	81 34       	cpi	r24, 0x41	; 65
     69e:	c9 f3       	breq	.-14     	; 0x692 <main+0x26>
     6a0:	0b c0       	rjmp	.+22     	; 0x6b8 <main+0x4c>
			case 'A':
				break;
			case '?':
				LCD_clear_screen();
     6a2:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_clear_screen>
				reset();
     6a6:	0e 94 2a 03 	call	0x654	; 0x654 <reset>
				op = '\0';
     6aa:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <op>
				count = 0;
     6ae:	e1 2c       	mov	r14, r1
     6b0:	f1 2c       	mov	r15, r1
				flag = 0;
     6b2:	0d 2d       	mov	r16, r13
     6b4:	1d 2f       	mov	r17, r29
				break;
     6b6:	ed cf       	rjmp	.-38     	; 0x692 <main+0x26>
			default:
				LCD_WRITE_CHAR(key_pressed);
     6b8:	0e 94 57 02 	call	0x4ae	; 0x4ae <LCD_WRITE_CHAR>
				if (key_pressed == '+' || key_pressed == '-'  || key_pressed == '*' || key_pressed =='/') {
     6bc:	8c 2f       	mov	r24, r28
     6be:	8d 7f       	andi	r24, 0xFD	; 253
     6c0:	8d 32       	cpi	r24, 0x2D	; 45
     6c2:	21 f0       	breq	.+8      	; 0x6cc <main+0x60>
     6c4:	86 ed       	ldi	r24, 0xD6	; 214
     6c6:	8c 0f       	add	r24, r28
     6c8:	82 30       	cpi	r24, 0x02	; 2
     6ca:	38 f4       	brcc	.+14     	; 0x6da <main+0x6e>
					flag = 1;
					op = key_pressed;
     6cc:	c0 93 82 00 	sts	0x0082, r28	; 0x800082 <op>
					count = 0;
     6d0:	e1 2c       	mov	r14, r1
     6d2:	f1 2c       	mov	r15, r1
				flag = 0;
				break;
			default:
				LCD_WRITE_CHAR(key_pressed);
				if (key_pressed == '+' || key_pressed == '-'  || key_pressed == '*' || key_pressed =='/') {
					flag = 1;
     6d4:	0b 2d       	mov	r16, r11
     6d6:	1c 2d       	mov	r17, r12
					op = key_pressed;
					count = 0;
     6d8:	18 c0       	rjmp	.+48     	; 0x70a <main+0x9e>
				}				
				else if(flag == 0){
     6da:	01 15       	cp	r16, r1
     6dc:	11 05       	cpc	r17, r1
     6de:	41 f4       	brne	.+16     	; 0x6f0 <main+0x84>
					op1[count] = key_pressed;
     6e0:	f7 01       	movw	r30, r14
     6e2:	ed 56       	subi	r30, 0x6D	; 109
     6e4:	ff 4f       	sbci	r31, 0xFF	; 255
     6e6:	c0 83       	st	Z, r28
					count++;
     6e8:	9f ef       	ldi	r25, 0xFF	; 255
     6ea:	e9 1a       	sub	r14, r25
     6ec:	f9 0a       	sbc	r15, r25
     6ee:	0d c0       	rjmp	.+26     	; 0x70a <main+0x9e>
				}
				else if(flag == 1 && (key_pressed != '=')){
     6f0:	01 30       	cpi	r16, 0x01	; 1
     6f2:	11 05       	cpc	r17, r1
     6f4:	51 f4       	brne	.+20     	; 0x70a <main+0x9e>
     6f6:	cd 33       	cpi	r28, 0x3D	; 61
     6f8:	51 f0       	breq	.+20     	; 0x70e <main+0xa2>
					op2[count] = key_pressed;
     6fa:	f7 01       	movw	r30, r14
     6fc:	ed 57       	subi	r30, 0x7D	; 125
     6fe:	ff 4f       	sbci	r31, 0xFF	; 255
     700:	c0 83       	st	Z, r28
					count++;
     702:	8f ef       	ldi	r24, 0xFF	; 255
     704:	e8 1a       	sub	r14, r24
     706:	f8 0a       	sbc	r15, r24
     708:	c4 cf       	rjmp	.-120    	; 0x692 <main+0x26>
				}
				if ((key_pressed == '=') && (op == '+') ){
     70a:	cd 33       	cpi	r28, 0x3D	; 61
     70c:	11 f6       	brne	.-124    	; 0x692 <main+0x26>
     70e:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <op>
     712:	8b 32       	cpi	r24, 0x2B	; 43
     714:	69 f4       	brne	.+26     	; 0x730 <main+0xc4>
					sum(op1,op2);
     716:	63 e8       	ldi	r22, 0x83	; 131
     718:	70 e0       	ldi	r23, 0x00	; 0
     71a:	83 e9       	ldi	r24, 0x93	; 147
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	0e 94 67 00 	call	0xce	; 0xce <sum>
					op = '\0';
     722:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <op>
					count = 0;
     726:	e1 2c       	mov	r14, r1
     728:	f1 2c       	mov	r15, r1
					flag = 0;
     72a:	0d 2d       	mov	r16, r13
     72c:	1d 2f       	mov	r17, r29
     72e:	2b c0       	rjmp	.+86     	; 0x786 <main+0x11a>
				}
				if ((key_pressed == '=') && (op == '-') ){
     730:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <op>
     734:	8d 32       	cpi	r24, 0x2D	; 45
     736:	39 f5       	brne	.+78     	; 0x786 <main+0x11a>
					subtract(op1,op2);
     738:	63 e8       	ldi	r22, 0x83	; 131
     73a:	70 e0       	ldi	r23, 0x00	; 0
     73c:	83 e9       	ldi	r24, 0x93	; 147
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	0e 94 81 00 	call	0x102	; 0x102 <subtract>
					op = '\0';
     744:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <op>
					count = 0;
     748:	e1 2c       	mov	r14, r1
     74a:	f1 2c       	mov	r15, r1
					flag = 0;
     74c:	0d 2d       	mov	r16, r13
     74e:	1d 2f       	mov	r17, r29
     750:	1e c0       	rjmp	.+60     	; 0x78e <main+0x122>
				}
				if ((key_pressed == '=') && (op == '*') ){
					multiplay(op1,op2);
     752:	63 e8       	ldi	r22, 0x83	; 131
     754:	70 e0       	ldi	r23, 0x00	; 0
     756:	83 e9       	ldi	r24, 0x93	; 147
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	0e 94 9d 00 	call	0x13a	; 0x13a <multiplay>
					op = '\0';
     75e:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <op>
					count = 0;
     762:	e1 2c       	mov	r14, r1
     764:	f1 2c       	mov	r15, r1
					flag = 0;
     766:	0d 2d       	mov	r16, r13
     768:	1d 2f       	mov	r17, r29
     76a:	93 cf       	rjmp	.-218    	; 0x692 <main+0x26>
				}
				if ((key_pressed == '=') && (op == '/') ){
					divide(op1,op2);
     76c:	63 e8       	ldi	r22, 0x83	; 131
     76e:	70 e0       	ldi	r23, 0x00	; 0
     770:	83 e9       	ldi	r24, 0x93	; 147
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	0e 94 bd 00 	call	0x17a	; 0x17a <divide>
					op = '\0';
     778:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <op>
					count = 0;
     77c:	e1 2c       	mov	r14, r1
     77e:	f1 2c       	mov	r15, r1
					flag = 0;
     780:	0d 2d       	mov	r16, r13
     782:	1d 2f       	mov	r17, r29
     784:	86 cf       	rjmp	.-244    	; 0x692 <main+0x26>
					subtract(op1,op2);
					op = '\0';
					count = 0;
					flag = 0;
				}
				if ((key_pressed == '=') && (op == '*') ){
     786:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <op>
     78a:	8a 32       	cpi	r24, 0x2A	; 42
     78c:	11 f3       	breq	.-60     	; 0x752 <main+0xe6>
					multiplay(op1,op2);
					op = '\0';
					count = 0;
					flag = 0;
				}
				if ((key_pressed == '=') && (op == '/') ){
     78e:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <op>
     792:	8f 32       	cpi	r24, 0x2F	; 47
     794:	09 f0       	breq	.+2      	; 0x798 <main+0x12c>
     796:	7d cf       	rjmp	.-262    	; 0x692 <main+0x26>
     798:	e9 cf       	rjmp	.-46     	; 0x76c <main+0x100>

0000079a <__subsf3>:
     79a:	50 58       	subi	r21, 0x80	; 128

0000079c <__addsf3>:
     79c:	bb 27       	eor	r27, r27
     79e:	aa 27       	eor	r26, r26
     7a0:	0e 94 e5 03 	call	0x7ca	; 0x7ca <__addsf3x>
     7a4:	0c 94 5f 05 	jmp	0xabe	; 0xabe <__fp_round>
     7a8:	0e 94 51 05 	call	0xaa2	; 0xaa2 <__fp_pscA>
     7ac:	38 f0       	brcs	.+14     	; 0x7bc <__addsf3+0x20>
     7ae:	0e 94 58 05 	call	0xab0	; 0xab0 <__fp_pscB>
     7b2:	20 f0       	brcs	.+8      	; 0x7bc <__addsf3+0x20>
     7b4:	39 f4       	brne	.+14     	; 0x7c4 <__addsf3+0x28>
     7b6:	9f 3f       	cpi	r25, 0xFF	; 255
     7b8:	19 f4       	brne	.+6      	; 0x7c0 <__addsf3+0x24>
     7ba:	26 f4       	brtc	.+8      	; 0x7c4 <__addsf3+0x28>
     7bc:	0c 94 4e 05 	jmp	0xa9c	; 0xa9c <__fp_nan>
     7c0:	0e f4       	brtc	.+2      	; 0x7c4 <__addsf3+0x28>
     7c2:	e0 95       	com	r30
     7c4:	e7 fb       	bst	r30, 7
     7c6:	0c 94 48 05 	jmp	0xa90	; 0xa90 <__fp_inf>

000007ca <__addsf3x>:
     7ca:	e9 2f       	mov	r30, r25
     7cc:	0e 94 70 05 	call	0xae0	; 0xae0 <__fp_split3>
     7d0:	58 f3       	brcs	.-42     	; 0x7a8 <__addsf3+0xc>
     7d2:	ba 17       	cp	r27, r26
     7d4:	62 07       	cpc	r22, r18
     7d6:	73 07       	cpc	r23, r19
     7d8:	84 07       	cpc	r24, r20
     7da:	95 07       	cpc	r25, r21
     7dc:	20 f0       	brcs	.+8      	; 0x7e6 <__addsf3x+0x1c>
     7de:	79 f4       	brne	.+30     	; 0x7fe <__addsf3x+0x34>
     7e0:	a6 f5       	brtc	.+104    	; 0x84a <__addsf3x+0x80>
     7e2:	0c 94 92 05 	jmp	0xb24	; 0xb24 <__fp_zero>
     7e6:	0e f4       	brtc	.+2      	; 0x7ea <__addsf3x+0x20>
     7e8:	e0 95       	com	r30
     7ea:	0b 2e       	mov	r0, r27
     7ec:	ba 2f       	mov	r27, r26
     7ee:	a0 2d       	mov	r26, r0
     7f0:	0b 01       	movw	r0, r22
     7f2:	b9 01       	movw	r22, r18
     7f4:	90 01       	movw	r18, r0
     7f6:	0c 01       	movw	r0, r24
     7f8:	ca 01       	movw	r24, r20
     7fa:	a0 01       	movw	r20, r0
     7fc:	11 24       	eor	r1, r1
     7fe:	ff 27       	eor	r31, r31
     800:	59 1b       	sub	r21, r25
     802:	99 f0       	breq	.+38     	; 0x82a <__addsf3x+0x60>
     804:	59 3f       	cpi	r21, 0xF9	; 249
     806:	50 f4       	brcc	.+20     	; 0x81c <__addsf3x+0x52>
     808:	50 3e       	cpi	r21, 0xE0	; 224
     80a:	68 f1       	brcs	.+90     	; 0x866 <__stack+0x7>
     80c:	1a 16       	cp	r1, r26
     80e:	f0 40       	sbci	r31, 0x00	; 0
     810:	a2 2f       	mov	r26, r18
     812:	23 2f       	mov	r18, r19
     814:	34 2f       	mov	r19, r20
     816:	44 27       	eor	r20, r20
     818:	58 5f       	subi	r21, 0xF8	; 248
     81a:	f3 cf       	rjmp	.-26     	; 0x802 <__addsf3x+0x38>
     81c:	46 95       	lsr	r20
     81e:	37 95       	ror	r19
     820:	27 95       	ror	r18
     822:	a7 95       	ror	r26
     824:	f0 40       	sbci	r31, 0x00	; 0
     826:	53 95       	inc	r21
     828:	c9 f7       	brne	.-14     	; 0x81c <__addsf3x+0x52>
     82a:	7e f4       	brtc	.+30     	; 0x84a <__addsf3x+0x80>
     82c:	1f 16       	cp	r1, r31
     82e:	ba 0b       	sbc	r27, r26
     830:	62 0b       	sbc	r22, r18
     832:	73 0b       	sbc	r23, r19
     834:	84 0b       	sbc	r24, r20
     836:	ba f0       	brmi	.+46     	; 0x866 <__stack+0x7>
     838:	91 50       	subi	r25, 0x01	; 1
     83a:	a1 f0       	breq	.+40     	; 0x864 <__stack+0x5>
     83c:	ff 0f       	add	r31, r31
     83e:	bb 1f       	adc	r27, r27
     840:	66 1f       	adc	r22, r22
     842:	77 1f       	adc	r23, r23
     844:	88 1f       	adc	r24, r24
     846:	c2 f7       	brpl	.-16     	; 0x838 <__addsf3x+0x6e>
     848:	0e c0       	rjmp	.+28     	; 0x866 <__stack+0x7>
     84a:	ba 0f       	add	r27, r26
     84c:	62 1f       	adc	r22, r18
     84e:	73 1f       	adc	r23, r19
     850:	84 1f       	adc	r24, r20
     852:	48 f4       	brcc	.+18     	; 0x866 <__stack+0x7>
     854:	87 95       	ror	r24
     856:	77 95       	ror	r23
     858:	67 95       	ror	r22
     85a:	b7 95       	ror	r27
     85c:	f7 95       	ror	r31
     85e:	9e 3f       	cpi	r25, 0xFE	; 254
     860:	08 f0       	brcs	.+2      	; 0x864 <__stack+0x5>
     862:	b0 cf       	rjmp	.-160    	; 0x7c4 <__addsf3+0x28>
     864:	93 95       	inc	r25
     866:	88 0f       	add	r24, r24
     868:	08 f0       	brcs	.+2      	; 0x86c <__stack+0xd>
     86a:	99 27       	eor	r25, r25
     86c:	ee 0f       	add	r30, r30
     86e:	97 95       	ror	r25
     870:	87 95       	ror	r24
     872:	08 95       	ret

00000874 <__cmpsf2>:
     874:	0e 94 24 05 	call	0xa48	; 0xa48 <__fp_cmp>
     878:	08 f4       	brcc	.+2      	; 0x87c <__cmpsf2+0x8>
     87a:	81 e0       	ldi	r24, 0x01	; 1
     87c:	08 95       	ret

0000087e <__divsf3>:
     87e:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__divsf3x>
     882:	0c 94 5f 05 	jmp	0xabe	; 0xabe <__fp_round>
     886:	0e 94 58 05 	call	0xab0	; 0xab0 <__fp_pscB>
     88a:	58 f0       	brcs	.+22     	; 0x8a2 <__divsf3+0x24>
     88c:	0e 94 51 05 	call	0xaa2	; 0xaa2 <__fp_pscA>
     890:	40 f0       	brcs	.+16     	; 0x8a2 <__divsf3+0x24>
     892:	29 f4       	brne	.+10     	; 0x89e <__divsf3+0x20>
     894:	5f 3f       	cpi	r21, 0xFF	; 255
     896:	29 f0       	breq	.+10     	; 0x8a2 <__divsf3+0x24>
     898:	0c 94 48 05 	jmp	0xa90	; 0xa90 <__fp_inf>
     89c:	51 11       	cpse	r21, r1
     89e:	0c 94 93 05 	jmp	0xb26	; 0xb26 <__fp_szero>
     8a2:	0c 94 4e 05 	jmp	0xa9c	; 0xa9c <__fp_nan>

000008a6 <__divsf3x>:
     8a6:	0e 94 70 05 	call	0xae0	; 0xae0 <__fp_split3>
     8aa:	68 f3       	brcs	.-38     	; 0x886 <__divsf3+0x8>

000008ac <__divsf3_pse>:
     8ac:	99 23       	and	r25, r25
     8ae:	b1 f3       	breq	.-20     	; 0x89c <__divsf3+0x1e>
     8b0:	55 23       	and	r21, r21
     8b2:	91 f3       	breq	.-28     	; 0x898 <__divsf3+0x1a>
     8b4:	95 1b       	sub	r25, r21
     8b6:	55 0b       	sbc	r21, r21
     8b8:	bb 27       	eor	r27, r27
     8ba:	aa 27       	eor	r26, r26
     8bc:	62 17       	cp	r22, r18
     8be:	73 07       	cpc	r23, r19
     8c0:	84 07       	cpc	r24, r20
     8c2:	38 f0       	brcs	.+14     	; 0x8d2 <__divsf3_pse+0x26>
     8c4:	9f 5f       	subi	r25, 0xFF	; 255
     8c6:	5f 4f       	sbci	r21, 0xFF	; 255
     8c8:	22 0f       	add	r18, r18
     8ca:	33 1f       	adc	r19, r19
     8cc:	44 1f       	adc	r20, r20
     8ce:	aa 1f       	adc	r26, r26
     8d0:	a9 f3       	breq	.-22     	; 0x8bc <__divsf3_pse+0x10>
     8d2:	35 d0       	rcall	.+106    	; 0x93e <__divsf3_pse+0x92>
     8d4:	0e 2e       	mov	r0, r30
     8d6:	3a f0       	brmi	.+14     	; 0x8e6 <__divsf3_pse+0x3a>
     8d8:	e0 e8       	ldi	r30, 0x80	; 128
     8da:	32 d0       	rcall	.+100    	; 0x940 <__divsf3_pse+0x94>
     8dc:	91 50       	subi	r25, 0x01	; 1
     8de:	50 40       	sbci	r21, 0x00	; 0
     8e0:	e6 95       	lsr	r30
     8e2:	00 1c       	adc	r0, r0
     8e4:	ca f7       	brpl	.-14     	; 0x8d8 <__divsf3_pse+0x2c>
     8e6:	2b d0       	rcall	.+86     	; 0x93e <__divsf3_pse+0x92>
     8e8:	fe 2f       	mov	r31, r30
     8ea:	29 d0       	rcall	.+82     	; 0x93e <__divsf3_pse+0x92>
     8ec:	66 0f       	add	r22, r22
     8ee:	77 1f       	adc	r23, r23
     8f0:	88 1f       	adc	r24, r24
     8f2:	bb 1f       	adc	r27, r27
     8f4:	26 17       	cp	r18, r22
     8f6:	37 07       	cpc	r19, r23
     8f8:	48 07       	cpc	r20, r24
     8fa:	ab 07       	cpc	r26, r27
     8fc:	b0 e8       	ldi	r27, 0x80	; 128
     8fe:	09 f0       	breq	.+2      	; 0x902 <__divsf3_pse+0x56>
     900:	bb 0b       	sbc	r27, r27
     902:	80 2d       	mov	r24, r0
     904:	bf 01       	movw	r22, r30
     906:	ff 27       	eor	r31, r31
     908:	93 58       	subi	r25, 0x83	; 131
     90a:	5f 4f       	sbci	r21, 0xFF	; 255
     90c:	3a f0       	brmi	.+14     	; 0x91c <__divsf3_pse+0x70>
     90e:	9e 3f       	cpi	r25, 0xFE	; 254
     910:	51 05       	cpc	r21, r1
     912:	78 f0       	brcs	.+30     	; 0x932 <__divsf3_pse+0x86>
     914:	0c 94 48 05 	jmp	0xa90	; 0xa90 <__fp_inf>
     918:	0c 94 93 05 	jmp	0xb26	; 0xb26 <__fp_szero>
     91c:	5f 3f       	cpi	r21, 0xFF	; 255
     91e:	e4 f3       	brlt	.-8      	; 0x918 <__divsf3_pse+0x6c>
     920:	98 3e       	cpi	r25, 0xE8	; 232
     922:	d4 f3       	brlt	.-12     	; 0x918 <__divsf3_pse+0x6c>
     924:	86 95       	lsr	r24
     926:	77 95       	ror	r23
     928:	67 95       	ror	r22
     92a:	b7 95       	ror	r27
     92c:	f7 95       	ror	r31
     92e:	9f 5f       	subi	r25, 0xFF	; 255
     930:	c9 f7       	brne	.-14     	; 0x924 <__divsf3_pse+0x78>
     932:	88 0f       	add	r24, r24
     934:	91 1d       	adc	r25, r1
     936:	96 95       	lsr	r25
     938:	87 95       	ror	r24
     93a:	97 f9       	bld	r25, 7
     93c:	08 95       	ret
     93e:	e1 e0       	ldi	r30, 0x01	; 1
     940:	66 0f       	add	r22, r22
     942:	77 1f       	adc	r23, r23
     944:	88 1f       	adc	r24, r24
     946:	bb 1f       	adc	r27, r27
     948:	62 17       	cp	r22, r18
     94a:	73 07       	cpc	r23, r19
     94c:	84 07       	cpc	r24, r20
     94e:	ba 07       	cpc	r27, r26
     950:	20 f0       	brcs	.+8      	; 0x95a <__divsf3_pse+0xae>
     952:	62 1b       	sub	r22, r18
     954:	73 0b       	sbc	r23, r19
     956:	84 0b       	sbc	r24, r20
     958:	ba 0b       	sbc	r27, r26
     95a:	ee 1f       	adc	r30, r30
     95c:	88 f7       	brcc	.-30     	; 0x940 <__divsf3_pse+0x94>
     95e:	e0 95       	com	r30
     960:	08 95       	ret

00000962 <__fixsfsi>:
     962:	0e 94 b8 04 	call	0x970	; 0x970 <__fixunssfsi>
     966:	68 94       	set
     968:	b1 11       	cpse	r27, r1
     96a:	0c 94 93 05 	jmp	0xb26	; 0xb26 <__fp_szero>
     96e:	08 95       	ret

00000970 <__fixunssfsi>:
     970:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__fp_splitA>
     974:	88 f0       	brcs	.+34     	; 0x998 <__fixunssfsi+0x28>
     976:	9f 57       	subi	r25, 0x7F	; 127
     978:	98 f0       	brcs	.+38     	; 0x9a0 <__fixunssfsi+0x30>
     97a:	b9 2f       	mov	r27, r25
     97c:	99 27       	eor	r25, r25
     97e:	b7 51       	subi	r27, 0x17	; 23
     980:	b0 f0       	brcs	.+44     	; 0x9ae <__fixunssfsi+0x3e>
     982:	e1 f0       	breq	.+56     	; 0x9bc <__fixunssfsi+0x4c>
     984:	66 0f       	add	r22, r22
     986:	77 1f       	adc	r23, r23
     988:	88 1f       	adc	r24, r24
     98a:	99 1f       	adc	r25, r25
     98c:	1a f0       	brmi	.+6      	; 0x994 <__fixunssfsi+0x24>
     98e:	ba 95       	dec	r27
     990:	c9 f7       	brne	.-14     	; 0x984 <__fixunssfsi+0x14>
     992:	14 c0       	rjmp	.+40     	; 0x9bc <__fixunssfsi+0x4c>
     994:	b1 30       	cpi	r27, 0x01	; 1
     996:	91 f0       	breq	.+36     	; 0x9bc <__fixunssfsi+0x4c>
     998:	0e 94 92 05 	call	0xb24	; 0xb24 <__fp_zero>
     99c:	b1 e0       	ldi	r27, 0x01	; 1
     99e:	08 95       	ret
     9a0:	0c 94 92 05 	jmp	0xb24	; 0xb24 <__fp_zero>
     9a4:	67 2f       	mov	r22, r23
     9a6:	78 2f       	mov	r23, r24
     9a8:	88 27       	eor	r24, r24
     9aa:	b8 5f       	subi	r27, 0xF8	; 248
     9ac:	39 f0       	breq	.+14     	; 0x9bc <__fixunssfsi+0x4c>
     9ae:	b9 3f       	cpi	r27, 0xF9	; 249
     9b0:	cc f3       	brlt	.-14     	; 0x9a4 <__fixunssfsi+0x34>
     9b2:	86 95       	lsr	r24
     9b4:	77 95       	ror	r23
     9b6:	67 95       	ror	r22
     9b8:	b3 95       	inc	r27
     9ba:	d9 f7       	brne	.-10     	; 0x9b2 <__fixunssfsi+0x42>
     9bc:	3e f4       	brtc	.+14     	; 0x9cc <__fixunssfsi+0x5c>
     9be:	90 95       	com	r25
     9c0:	80 95       	com	r24
     9c2:	70 95       	com	r23
     9c4:	61 95       	neg	r22
     9c6:	7f 4f       	sbci	r23, 0xFF	; 255
     9c8:	8f 4f       	sbci	r24, 0xFF	; 255
     9ca:	9f 4f       	sbci	r25, 0xFF	; 255
     9cc:	08 95       	ret

000009ce <__floatunsisf>:
     9ce:	e8 94       	clt
     9d0:	09 c0       	rjmp	.+18     	; 0x9e4 <__floatsisf+0x12>

000009d2 <__floatsisf>:
     9d2:	97 fb       	bst	r25, 7
     9d4:	3e f4       	brtc	.+14     	; 0x9e4 <__floatsisf+0x12>
     9d6:	90 95       	com	r25
     9d8:	80 95       	com	r24
     9da:	70 95       	com	r23
     9dc:	61 95       	neg	r22
     9de:	7f 4f       	sbci	r23, 0xFF	; 255
     9e0:	8f 4f       	sbci	r24, 0xFF	; 255
     9e2:	9f 4f       	sbci	r25, 0xFF	; 255
     9e4:	99 23       	and	r25, r25
     9e6:	a9 f0       	breq	.+42     	; 0xa12 <__floatsisf+0x40>
     9e8:	f9 2f       	mov	r31, r25
     9ea:	96 e9       	ldi	r25, 0x96	; 150
     9ec:	bb 27       	eor	r27, r27
     9ee:	93 95       	inc	r25
     9f0:	f6 95       	lsr	r31
     9f2:	87 95       	ror	r24
     9f4:	77 95       	ror	r23
     9f6:	67 95       	ror	r22
     9f8:	b7 95       	ror	r27
     9fa:	f1 11       	cpse	r31, r1
     9fc:	f8 cf       	rjmp	.-16     	; 0x9ee <__floatsisf+0x1c>
     9fe:	fa f4       	brpl	.+62     	; 0xa3e <__floatsisf+0x6c>
     a00:	bb 0f       	add	r27, r27
     a02:	11 f4       	brne	.+4      	; 0xa08 <__floatsisf+0x36>
     a04:	60 ff       	sbrs	r22, 0
     a06:	1b c0       	rjmp	.+54     	; 0xa3e <__floatsisf+0x6c>
     a08:	6f 5f       	subi	r22, 0xFF	; 255
     a0a:	7f 4f       	sbci	r23, 0xFF	; 255
     a0c:	8f 4f       	sbci	r24, 0xFF	; 255
     a0e:	9f 4f       	sbci	r25, 0xFF	; 255
     a10:	16 c0       	rjmp	.+44     	; 0xa3e <__floatsisf+0x6c>
     a12:	88 23       	and	r24, r24
     a14:	11 f0       	breq	.+4      	; 0xa1a <__floatsisf+0x48>
     a16:	96 e9       	ldi	r25, 0x96	; 150
     a18:	11 c0       	rjmp	.+34     	; 0xa3c <__floatsisf+0x6a>
     a1a:	77 23       	and	r23, r23
     a1c:	21 f0       	breq	.+8      	; 0xa26 <__floatsisf+0x54>
     a1e:	9e e8       	ldi	r25, 0x8E	; 142
     a20:	87 2f       	mov	r24, r23
     a22:	76 2f       	mov	r23, r22
     a24:	05 c0       	rjmp	.+10     	; 0xa30 <__floatsisf+0x5e>
     a26:	66 23       	and	r22, r22
     a28:	71 f0       	breq	.+28     	; 0xa46 <__floatsisf+0x74>
     a2a:	96 e8       	ldi	r25, 0x86	; 134
     a2c:	86 2f       	mov	r24, r22
     a2e:	70 e0       	ldi	r23, 0x00	; 0
     a30:	60 e0       	ldi	r22, 0x00	; 0
     a32:	2a f0       	brmi	.+10     	; 0xa3e <__floatsisf+0x6c>
     a34:	9a 95       	dec	r25
     a36:	66 0f       	add	r22, r22
     a38:	77 1f       	adc	r23, r23
     a3a:	88 1f       	adc	r24, r24
     a3c:	da f7       	brpl	.-10     	; 0xa34 <__floatsisf+0x62>
     a3e:	88 0f       	add	r24, r24
     a40:	96 95       	lsr	r25
     a42:	87 95       	ror	r24
     a44:	97 f9       	bld	r25, 7
     a46:	08 95       	ret

00000a48 <__fp_cmp>:
     a48:	99 0f       	add	r25, r25
     a4a:	00 08       	sbc	r0, r0
     a4c:	55 0f       	add	r21, r21
     a4e:	aa 0b       	sbc	r26, r26
     a50:	e0 e8       	ldi	r30, 0x80	; 128
     a52:	fe ef       	ldi	r31, 0xFE	; 254
     a54:	16 16       	cp	r1, r22
     a56:	17 06       	cpc	r1, r23
     a58:	e8 07       	cpc	r30, r24
     a5a:	f9 07       	cpc	r31, r25
     a5c:	c0 f0       	brcs	.+48     	; 0xa8e <__fp_cmp+0x46>
     a5e:	12 16       	cp	r1, r18
     a60:	13 06       	cpc	r1, r19
     a62:	e4 07       	cpc	r30, r20
     a64:	f5 07       	cpc	r31, r21
     a66:	98 f0       	brcs	.+38     	; 0xa8e <__fp_cmp+0x46>
     a68:	62 1b       	sub	r22, r18
     a6a:	73 0b       	sbc	r23, r19
     a6c:	84 0b       	sbc	r24, r20
     a6e:	95 0b       	sbc	r25, r21
     a70:	39 f4       	brne	.+14     	; 0xa80 <__fp_cmp+0x38>
     a72:	0a 26       	eor	r0, r26
     a74:	61 f0       	breq	.+24     	; 0xa8e <__fp_cmp+0x46>
     a76:	23 2b       	or	r18, r19
     a78:	24 2b       	or	r18, r20
     a7a:	25 2b       	or	r18, r21
     a7c:	21 f4       	brne	.+8      	; 0xa86 <__fp_cmp+0x3e>
     a7e:	08 95       	ret
     a80:	0a 26       	eor	r0, r26
     a82:	09 f4       	brne	.+2      	; 0xa86 <__fp_cmp+0x3e>
     a84:	a1 40       	sbci	r26, 0x01	; 1
     a86:	a6 95       	lsr	r26
     a88:	8f ef       	ldi	r24, 0xFF	; 255
     a8a:	81 1d       	adc	r24, r1
     a8c:	81 1d       	adc	r24, r1
     a8e:	08 95       	ret

00000a90 <__fp_inf>:
     a90:	97 f9       	bld	r25, 7
     a92:	9f 67       	ori	r25, 0x7F	; 127
     a94:	80 e8       	ldi	r24, 0x80	; 128
     a96:	70 e0       	ldi	r23, 0x00	; 0
     a98:	60 e0       	ldi	r22, 0x00	; 0
     a9a:	08 95       	ret

00000a9c <__fp_nan>:
     a9c:	9f ef       	ldi	r25, 0xFF	; 255
     a9e:	80 ec       	ldi	r24, 0xC0	; 192
     aa0:	08 95       	ret

00000aa2 <__fp_pscA>:
     aa2:	00 24       	eor	r0, r0
     aa4:	0a 94       	dec	r0
     aa6:	16 16       	cp	r1, r22
     aa8:	17 06       	cpc	r1, r23
     aaa:	18 06       	cpc	r1, r24
     aac:	09 06       	cpc	r0, r25
     aae:	08 95       	ret

00000ab0 <__fp_pscB>:
     ab0:	00 24       	eor	r0, r0
     ab2:	0a 94       	dec	r0
     ab4:	12 16       	cp	r1, r18
     ab6:	13 06       	cpc	r1, r19
     ab8:	14 06       	cpc	r1, r20
     aba:	05 06       	cpc	r0, r21
     abc:	08 95       	ret

00000abe <__fp_round>:
     abe:	09 2e       	mov	r0, r25
     ac0:	03 94       	inc	r0
     ac2:	00 0c       	add	r0, r0
     ac4:	11 f4       	brne	.+4      	; 0xaca <__fp_round+0xc>
     ac6:	88 23       	and	r24, r24
     ac8:	52 f0       	brmi	.+20     	; 0xade <__fp_round+0x20>
     aca:	bb 0f       	add	r27, r27
     acc:	40 f4       	brcc	.+16     	; 0xade <__fp_round+0x20>
     ace:	bf 2b       	or	r27, r31
     ad0:	11 f4       	brne	.+4      	; 0xad6 <__fp_round+0x18>
     ad2:	60 ff       	sbrs	r22, 0
     ad4:	04 c0       	rjmp	.+8      	; 0xade <__fp_round+0x20>
     ad6:	6f 5f       	subi	r22, 0xFF	; 255
     ad8:	7f 4f       	sbci	r23, 0xFF	; 255
     ada:	8f 4f       	sbci	r24, 0xFF	; 255
     adc:	9f 4f       	sbci	r25, 0xFF	; 255
     ade:	08 95       	ret

00000ae0 <__fp_split3>:
     ae0:	57 fd       	sbrc	r21, 7
     ae2:	90 58       	subi	r25, 0x80	; 128
     ae4:	44 0f       	add	r20, r20
     ae6:	55 1f       	adc	r21, r21
     ae8:	59 f0       	breq	.+22     	; 0xb00 <__fp_splitA+0x10>
     aea:	5f 3f       	cpi	r21, 0xFF	; 255
     aec:	71 f0       	breq	.+28     	; 0xb0a <__fp_splitA+0x1a>
     aee:	47 95       	ror	r20

00000af0 <__fp_splitA>:
     af0:	88 0f       	add	r24, r24
     af2:	97 fb       	bst	r25, 7
     af4:	99 1f       	adc	r25, r25
     af6:	61 f0       	breq	.+24     	; 0xb10 <__fp_splitA+0x20>
     af8:	9f 3f       	cpi	r25, 0xFF	; 255
     afa:	79 f0       	breq	.+30     	; 0xb1a <__fp_splitA+0x2a>
     afc:	87 95       	ror	r24
     afe:	08 95       	ret
     b00:	12 16       	cp	r1, r18
     b02:	13 06       	cpc	r1, r19
     b04:	14 06       	cpc	r1, r20
     b06:	55 1f       	adc	r21, r21
     b08:	f2 cf       	rjmp	.-28     	; 0xaee <__fp_split3+0xe>
     b0a:	46 95       	lsr	r20
     b0c:	f1 df       	rcall	.-30     	; 0xaf0 <__fp_splitA>
     b0e:	08 c0       	rjmp	.+16     	; 0xb20 <__fp_splitA+0x30>
     b10:	16 16       	cp	r1, r22
     b12:	17 06       	cpc	r1, r23
     b14:	18 06       	cpc	r1, r24
     b16:	99 1f       	adc	r25, r25
     b18:	f1 cf       	rjmp	.-30     	; 0xafc <__fp_splitA+0xc>
     b1a:	86 95       	lsr	r24
     b1c:	71 05       	cpc	r23, r1
     b1e:	61 05       	cpc	r22, r1
     b20:	08 94       	sec
     b22:	08 95       	ret

00000b24 <__fp_zero>:
     b24:	e8 94       	clt

00000b26 <__fp_szero>:
     b26:	bb 27       	eor	r27, r27
     b28:	66 27       	eor	r22, r22
     b2a:	77 27       	eor	r23, r23
     b2c:	cb 01       	movw	r24, r22
     b2e:	97 f9       	bld	r25, 7
     b30:	08 95       	ret

00000b32 <__mulsf3>:
     b32:	0e 94 ac 05 	call	0xb58	; 0xb58 <__mulsf3x>
     b36:	0c 94 5f 05 	jmp	0xabe	; 0xabe <__fp_round>
     b3a:	0e 94 51 05 	call	0xaa2	; 0xaa2 <__fp_pscA>
     b3e:	38 f0       	brcs	.+14     	; 0xb4e <__mulsf3+0x1c>
     b40:	0e 94 58 05 	call	0xab0	; 0xab0 <__fp_pscB>
     b44:	20 f0       	brcs	.+8      	; 0xb4e <__mulsf3+0x1c>
     b46:	95 23       	and	r25, r21
     b48:	11 f0       	breq	.+4      	; 0xb4e <__mulsf3+0x1c>
     b4a:	0c 94 48 05 	jmp	0xa90	; 0xa90 <__fp_inf>
     b4e:	0c 94 4e 05 	jmp	0xa9c	; 0xa9c <__fp_nan>
     b52:	11 24       	eor	r1, r1
     b54:	0c 94 93 05 	jmp	0xb26	; 0xb26 <__fp_szero>

00000b58 <__mulsf3x>:
     b58:	0e 94 70 05 	call	0xae0	; 0xae0 <__fp_split3>
     b5c:	70 f3       	brcs	.-36     	; 0xb3a <__mulsf3+0x8>

00000b5e <__mulsf3_pse>:
     b5e:	95 9f       	mul	r25, r21
     b60:	c1 f3       	breq	.-16     	; 0xb52 <__mulsf3+0x20>
     b62:	95 0f       	add	r25, r21
     b64:	50 e0       	ldi	r21, 0x00	; 0
     b66:	55 1f       	adc	r21, r21
     b68:	62 9f       	mul	r22, r18
     b6a:	f0 01       	movw	r30, r0
     b6c:	72 9f       	mul	r23, r18
     b6e:	bb 27       	eor	r27, r27
     b70:	f0 0d       	add	r31, r0
     b72:	b1 1d       	adc	r27, r1
     b74:	63 9f       	mul	r22, r19
     b76:	aa 27       	eor	r26, r26
     b78:	f0 0d       	add	r31, r0
     b7a:	b1 1d       	adc	r27, r1
     b7c:	aa 1f       	adc	r26, r26
     b7e:	64 9f       	mul	r22, r20
     b80:	66 27       	eor	r22, r22
     b82:	b0 0d       	add	r27, r0
     b84:	a1 1d       	adc	r26, r1
     b86:	66 1f       	adc	r22, r22
     b88:	82 9f       	mul	r24, r18
     b8a:	22 27       	eor	r18, r18
     b8c:	b0 0d       	add	r27, r0
     b8e:	a1 1d       	adc	r26, r1
     b90:	62 1f       	adc	r22, r18
     b92:	73 9f       	mul	r23, r19
     b94:	b0 0d       	add	r27, r0
     b96:	a1 1d       	adc	r26, r1
     b98:	62 1f       	adc	r22, r18
     b9a:	83 9f       	mul	r24, r19
     b9c:	a0 0d       	add	r26, r0
     b9e:	61 1d       	adc	r22, r1
     ba0:	22 1f       	adc	r18, r18
     ba2:	74 9f       	mul	r23, r20
     ba4:	33 27       	eor	r19, r19
     ba6:	a0 0d       	add	r26, r0
     ba8:	61 1d       	adc	r22, r1
     baa:	23 1f       	adc	r18, r19
     bac:	84 9f       	mul	r24, r20
     bae:	60 0d       	add	r22, r0
     bb0:	21 1d       	adc	r18, r1
     bb2:	82 2f       	mov	r24, r18
     bb4:	76 2f       	mov	r23, r22
     bb6:	6a 2f       	mov	r22, r26
     bb8:	11 24       	eor	r1, r1
     bba:	9f 57       	subi	r25, 0x7F	; 127
     bbc:	50 40       	sbci	r21, 0x00	; 0
     bbe:	9a f0       	brmi	.+38     	; 0xbe6 <__mulsf3_pse+0x88>
     bc0:	f1 f0       	breq	.+60     	; 0xbfe <__mulsf3_pse+0xa0>
     bc2:	88 23       	and	r24, r24
     bc4:	4a f0       	brmi	.+18     	; 0xbd8 <__mulsf3_pse+0x7a>
     bc6:	ee 0f       	add	r30, r30
     bc8:	ff 1f       	adc	r31, r31
     bca:	bb 1f       	adc	r27, r27
     bcc:	66 1f       	adc	r22, r22
     bce:	77 1f       	adc	r23, r23
     bd0:	88 1f       	adc	r24, r24
     bd2:	91 50       	subi	r25, 0x01	; 1
     bd4:	50 40       	sbci	r21, 0x00	; 0
     bd6:	a9 f7       	brne	.-22     	; 0xbc2 <__mulsf3_pse+0x64>
     bd8:	9e 3f       	cpi	r25, 0xFE	; 254
     bda:	51 05       	cpc	r21, r1
     bdc:	80 f0       	brcs	.+32     	; 0xbfe <__mulsf3_pse+0xa0>
     bde:	0c 94 48 05 	jmp	0xa90	; 0xa90 <__fp_inf>
     be2:	0c 94 93 05 	jmp	0xb26	; 0xb26 <__fp_szero>
     be6:	5f 3f       	cpi	r21, 0xFF	; 255
     be8:	e4 f3       	brlt	.-8      	; 0xbe2 <__mulsf3_pse+0x84>
     bea:	98 3e       	cpi	r25, 0xE8	; 232
     bec:	d4 f3       	brlt	.-12     	; 0xbe2 <__mulsf3_pse+0x84>
     bee:	86 95       	lsr	r24
     bf0:	77 95       	ror	r23
     bf2:	67 95       	ror	r22
     bf4:	b7 95       	ror	r27
     bf6:	f7 95       	ror	r31
     bf8:	e7 95       	ror	r30
     bfa:	9f 5f       	subi	r25, 0xFF	; 255
     bfc:	c1 f7       	brne	.-16     	; 0xbee <__mulsf3_pse+0x90>
     bfe:	fe 2b       	or	r31, r30
     c00:	88 0f       	add	r24, r24
     c02:	91 1d       	adc	r25, r1
     c04:	96 95       	lsr	r25
     c06:	87 95       	ror	r24
     c08:	97 f9       	bld	r25, 7
     c0a:	08 95       	ret

00000c0c <atof>:
     c0c:	66 27       	eor	r22, r22
     c0e:	77 27       	eor	r23, r23
     c10:	0c 94 33 08 	jmp	0x1066	; 0x1066 <strtod>

00000c14 <atoi>:
     c14:	fc 01       	movw	r30, r24
     c16:	88 27       	eor	r24, r24
     c18:	99 27       	eor	r25, r25
     c1a:	e8 94       	clt
     c1c:	21 91       	ld	r18, Z+
     c1e:	20 32       	cpi	r18, 0x20	; 32
     c20:	e9 f3       	breq	.-6      	; 0xc1c <atoi+0x8>
     c22:	29 30       	cpi	r18, 0x09	; 9
     c24:	10 f0       	brcs	.+4      	; 0xc2a <atoi+0x16>
     c26:	2e 30       	cpi	r18, 0x0E	; 14
     c28:	c8 f3       	brcs	.-14     	; 0xc1c <atoi+0x8>
     c2a:	2b 32       	cpi	r18, 0x2B	; 43
     c2c:	41 f0       	breq	.+16     	; 0xc3e <atoi+0x2a>
     c2e:	2d 32       	cpi	r18, 0x2D	; 45
     c30:	39 f4       	brne	.+14     	; 0xc40 <atoi+0x2c>
     c32:	68 94       	set
     c34:	04 c0       	rjmp	.+8      	; 0xc3e <atoi+0x2a>
     c36:	0e 94 28 06 	call	0xc50	; 0xc50 <__mulhi_const_10>
     c3a:	82 0f       	add	r24, r18
     c3c:	91 1d       	adc	r25, r1
     c3e:	21 91       	ld	r18, Z+
     c40:	20 53       	subi	r18, 0x30	; 48
     c42:	2a 30       	cpi	r18, 0x0A	; 10
     c44:	c0 f3       	brcs	.-16     	; 0xc36 <atoi+0x22>
     c46:	1e f4       	brtc	.+6      	; 0xc4e <atoi+0x3a>
     c48:	90 95       	com	r25
     c4a:	81 95       	neg	r24
     c4c:	9f 4f       	sbci	r25, 0xFF	; 255
     c4e:	08 95       	ret

00000c50 <__mulhi_const_10>:
     c50:	7a e0       	ldi	r23, 0x0A	; 10
     c52:	97 9f       	mul	r25, r23
     c54:	90 2d       	mov	r25, r0
     c56:	87 9f       	mul	r24, r23
     c58:	80 2d       	mov	r24, r0
     c5a:	91 0d       	add	r25, r1
     c5c:	11 24       	eor	r1, r1
     c5e:	08 95       	ret

00000c60 <sprintf>:
     c60:	ae e0       	ldi	r26, 0x0E	; 14
     c62:	b0 e0       	ldi	r27, 0x00	; 0
     c64:	e6 e3       	ldi	r30, 0x36	; 54
     c66:	f6 e0       	ldi	r31, 0x06	; 6
     c68:	0c 94 6e 0a 	jmp	0x14dc	; 0x14dc <__prologue_saves__+0x1c>
     c6c:	0d 89       	ldd	r16, Y+21	; 0x15
     c6e:	1e 89       	ldd	r17, Y+22	; 0x16
     c70:	86 e0       	ldi	r24, 0x06	; 6
     c72:	8c 83       	std	Y+4, r24	; 0x04
     c74:	1a 83       	std	Y+2, r17	; 0x02
     c76:	09 83       	std	Y+1, r16	; 0x01
     c78:	8f ef       	ldi	r24, 0xFF	; 255
     c7a:	9f e7       	ldi	r25, 0x7F	; 127
     c7c:	9e 83       	std	Y+6, r25	; 0x06
     c7e:	8d 83       	std	Y+5, r24	; 0x05
     c80:	ae 01       	movw	r20, r28
     c82:	47 5e       	subi	r20, 0xE7	; 231
     c84:	5f 4f       	sbci	r21, 0xFF	; 255
     c86:	6f 89       	ldd	r22, Y+23	; 0x17
     c88:	78 8d       	ldd	r23, Y+24	; 0x18
     c8a:	ce 01       	movw	r24, r28
     c8c:	01 96       	adiw	r24, 0x01	; 1
     c8e:	0e 94 52 06 	call	0xca4	; 0xca4 <vfprintf>
     c92:	ef 81       	ldd	r30, Y+7	; 0x07
     c94:	f8 85       	ldd	r31, Y+8	; 0x08
     c96:	e0 0f       	add	r30, r16
     c98:	f1 1f       	adc	r31, r17
     c9a:	10 82       	st	Z, r1
     c9c:	2e 96       	adiw	r28, 0x0e	; 14
     c9e:	e4 e0       	ldi	r30, 0x04	; 4
     ca0:	0c 94 8a 0a 	jmp	0x1514	; 0x1514 <__epilogue_restores__+0x1c>

00000ca4 <vfprintf>:
     ca4:	ab e0       	ldi	r26, 0x0B	; 11
     ca6:	b0 e0       	ldi	r27, 0x00	; 0
     ca8:	e8 e5       	ldi	r30, 0x58	; 88
     caa:	f6 e0       	ldi	r31, 0x06	; 6
     cac:	0c 94 60 0a 	jmp	0x14c0	; 0x14c0 <__prologue_saves__>
     cb0:	6c 01       	movw	r12, r24
     cb2:	7b 01       	movw	r14, r22
     cb4:	8a 01       	movw	r16, r20
     cb6:	fc 01       	movw	r30, r24
     cb8:	17 82       	std	Z+7, r1	; 0x07
     cba:	16 82       	std	Z+6, r1	; 0x06
     cbc:	83 81       	ldd	r24, Z+3	; 0x03
     cbe:	81 ff       	sbrs	r24, 1
     cc0:	cc c1       	rjmp	.+920    	; 0x105a <vfprintf+0x3b6>
     cc2:	ce 01       	movw	r24, r28
     cc4:	01 96       	adiw	r24, 0x01	; 1
     cc6:	3c 01       	movw	r6, r24
     cc8:	f6 01       	movw	r30, r12
     cca:	93 81       	ldd	r25, Z+3	; 0x03
     ccc:	f7 01       	movw	r30, r14
     cce:	93 fd       	sbrc	r25, 3
     cd0:	85 91       	lpm	r24, Z+
     cd2:	93 ff       	sbrs	r25, 3
     cd4:	81 91       	ld	r24, Z+
     cd6:	7f 01       	movw	r14, r30
     cd8:	88 23       	and	r24, r24
     cda:	09 f4       	brne	.+2      	; 0xcde <vfprintf+0x3a>
     cdc:	ba c1       	rjmp	.+884    	; 0x1052 <vfprintf+0x3ae>
     cde:	85 32       	cpi	r24, 0x25	; 37
     ce0:	39 f4       	brne	.+14     	; 0xcf0 <vfprintf+0x4c>
     ce2:	93 fd       	sbrc	r25, 3
     ce4:	85 91       	lpm	r24, Z+
     ce6:	93 ff       	sbrs	r25, 3
     ce8:	81 91       	ld	r24, Z+
     cea:	7f 01       	movw	r14, r30
     cec:	85 32       	cpi	r24, 0x25	; 37
     cee:	29 f4       	brne	.+10     	; 0xcfa <vfprintf+0x56>
     cf0:	b6 01       	movw	r22, r12
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	0e 94 b8 09 	call	0x1370	; 0x1370 <fputc>
     cf8:	e7 cf       	rjmp	.-50     	; 0xcc8 <vfprintf+0x24>
     cfa:	91 2c       	mov	r9, r1
     cfc:	21 2c       	mov	r2, r1
     cfe:	31 2c       	mov	r3, r1
     d00:	ff e1       	ldi	r31, 0x1F	; 31
     d02:	f3 15       	cp	r31, r3
     d04:	d8 f0       	brcs	.+54     	; 0xd3c <vfprintf+0x98>
     d06:	8b 32       	cpi	r24, 0x2B	; 43
     d08:	79 f0       	breq	.+30     	; 0xd28 <vfprintf+0x84>
     d0a:	38 f4       	brcc	.+14     	; 0xd1a <vfprintf+0x76>
     d0c:	80 32       	cpi	r24, 0x20	; 32
     d0e:	79 f0       	breq	.+30     	; 0xd2e <vfprintf+0x8a>
     d10:	83 32       	cpi	r24, 0x23	; 35
     d12:	a1 f4       	brne	.+40     	; 0xd3c <vfprintf+0x98>
     d14:	23 2d       	mov	r18, r3
     d16:	20 61       	ori	r18, 0x10	; 16
     d18:	1d c0       	rjmp	.+58     	; 0xd54 <vfprintf+0xb0>
     d1a:	8d 32       	cpi	r24, 0x2D	; 45
     d1c:	61 f0       	breq	.+24     	; 0xd36 <vfprintf+0x92>
     d1e:	80 33       	cpi	r24, 0x30	; 48
     d20:	69 f4       	brne	.+26     	; 0xd3c <vfprintf+0x98>
     d22:	23 2d       	mov	r18, r3
     d24:	21 60       	ori	r18, 0x01	; 1
     d26:	16 c0       	rjmp	.+44     	; 0xd54 <vfprintf+0xb0>
     d28:	83 2d       	mov	r24, r3
     d2a:	82 60       	ori	r24, 0x02	; 2
     d2c:	38 2e       	mov	r3, r24
     d2e:	e3 2d       	mov	r30, r3
     d30:	e4 60       	ori	r30, 0x04	; 4
     d32:	3e 2e       	mov	r3, r30
     d34:	2a c0       	rjmp	.+84     	; 0xd8a <vfprintf+0xe6>
     d36:	f3 2d       	mov	r31, r3
     d38:	f8 60       	ori	r31, 0x08	; 8
     d3a:	1d c0       	rjmp	.+58     	; 0xd76 <vfprintf+0xd2>
     d3c:	37 fc       	sbrc	r3, 7
     d3e:	2d c0       	rjmp	.+90     	; 0xd9a <vfprintf+0xf6>
     d40:	20 ed       	ldi	r18, 0xD0	; 208
     d42:	28 0f       	add	r18, r24
     d44:	2a 30       	cpi	r18, 0x0A	; 10
     d46:	40 f0       	brcs	.+16     	; 0xd58 <vfprintf+0xb4>
     d48:	8e 32       	cpi	r24, 0x2E	; 46
     d4a:	b9 f4       	brne	.+46     	; 0xd7a <vfprintf+0xd6>
     d4c:	36 fc       	sbrc	r3, 6
     d4e:	81 c1       	rjmp	.+770    	; 0x1052 <vfprintf+0x3ae>
     d50:	23 2d       	mov	r18, r3
     d52:	20 64       	ori	r18, 0x40	; 64
     d54:	32 2e       	mov	r3, r18
     d56:	19 c0       	rjmp	.+50     	; 0xd8a <vfprintf+0xe6>
     d58:	36 fe       	sbrs	r3, 6
     d5a:	06 c0       	rjmp	.+12     	; 0xd68 <vfprintf+0xc4>
     d5c:	8a e0       	ldi	r24, 0x0A	; 10
     d5e:	98 9e       	mul	r9, r24
     d60:	20 0d       	add	r18, r0
     d62:	11 24       	eor	r1, r1
     d64:	92 2e       	mov	r9, r18
     d66:	11 c0       	rjmp	.+34     	; 0xd8a <vfprintf+0xe6>
     d68:	ea e0       	ldi	r30, 0x0A	; 10
     d6a:	2e 9e       	mul	r2, r30
     d6c:	20 0d       	add	r18, r0
     d6e:	11 24       	eor	r1, r1
     d70:	22 2e       	mov	r2, r18
     d72:	f3 2d       	mov	r31, r3
     d74:	f0 62       	ori	r31, 0x20	; 32
     d76:	3f 2e       	mov	r3, r31
     d78:	08 c0       	rjmp	.+16     	; 0xd8a <vfprintf+0xe6>
     d7a:	8c 36       	cpi	r24, 0x6C	; 108
     d7c:	21 f4       	brne	.+8      	; 0xd86 <vfprintf+0xe2>
     d7e:	83 2d       	mov	r24, r3
     d80:	80 68       	ori	r24, 0x80	; 128
     d82:	38 2e       	mov	r3, r24
     d84:	02 c0       	rjmp	.+4      	; 0xd8a <vfprintf+0xe6>
     d86:	88 36       	cpi	r24, 0x68	; 104
     d88:	41 f4       	brne	.+16     	; 0xd9a <vfprintf+0xf6>
     d8a:	f7 01       	movw	r30, r14
     d8c:	93 fd       	sbrc	r25, 3
     d8e:	85 91       	lpm	r24, Z+
     d90:	93 ff       	sbrs	r25, 3
     d92:	81 91       	ld	r24, Z+
     d94:	7f 01       	movw	r14, r30
     d96:	81 11       	cpse	r24, r1
     d98:	b3 cf       	rjmp	.-154    	; 0xd00 <vfprintf+0x5c>
     d9a:	98 2f       	mov	r25, r24
     d9c:	9f 7d       	andi	r25, 0xDF	; 223
     d9e:	95 54       	subi	r25, 0x45	; 69
     da0:	93 30       	cpi	r25, 0x03	; 3
     da2:	28 f4       	brcc	.+10     	; 0xdae <vfprintf+0x10a>
     da4:	0c 5f       	subi	r16, 0xFC	; 252
     da6:	1f 4f       	sbci	r17, 0xFF	; 255
     da8:	9f e3       	ldi	r25, 0x3F	; 63
     daa:	99 83       	std	Y+1, r25	; 0x01
     dac:	0d c0       	rjmp	.+26     	; 0xdc8 <vfprintf+0x124>
     dae:	83 36       	cpi	r24, 0x63	; 99
     db0:	31 f0       	breq	.+12     	; 0xdbe <vfprintf+0x11a>
     db2:	83 37       	cpi	r24, 0x73	; 115
     db4:	71 f0       	breq	.+28     	; 0xdd2 <vfprintf+0x12e>
     db6:	83 35       	cpi	r24, 0x53	; 83
     db8:	09 f0       	breq	.+2      	; 0xdbc <vfprintf+0x118>
     dba:	59 c0       	rjmp	.+178    	; 0xe6e <vfprintf+0x1ca>
     dbc:	21 c0       	rjmp	.+66     	; 0xe00 <vfprintf+0x15c>
     dbe:	f8 01       	movw	r30, r16
     dc0:	80 81       	ld	r24, Z
     dc2:	89 83       	std	Y+1, r24	; 0x01
     dc4:	0e 5f       	subi	r16, 0xFE	; 254
     dc6:	1f 4f       	sbci	r17, 0xFF	; 255
     dc8:	88 24       	eor	r8, r8
     dca:	83 94       	inc	r8
     dcc:	91 2c       	mov	r9, r1
     dce:	53 01       	movw	r10, r6
     dd0:	13 c0       	rjmp	.+38     	; 0xdf8 <vfprintf+0x154>
     dd2:	28 01       	movw	r4, r16
     dd4:	f2 e0       	ldi	r31, 0x02	; 2
     dd6:	4f 0e       	add	r4, r31
     dd8:	51 1c       	adc	r5, r1
     dda:	f8 01       	movw	r30, r16
     ddc:	a0 80       	ld	r10, Z
     dde:	b1 80       	ldd	r11, Z+1	; 0x01
     de0:	36 fe       	sbrs	r3, 6
     de2:	03 c0       	rjmp	.+6      	; 0xdea <vfprintf+0x146>
     de4:	69 2d       	mov	r22, r9
     de6:	70 e0       	ldi	r23, 0x00	; 0
     de8:	02 c0       	rjmp	.+4      	; 0xdee <vfprintf+0x14a>
     dea:	6f ef       	ldi	r22, 0xFF	; 255
     dec:	7f ef       	ldi	r23, 0xFF	; 255
     dee:	c5 01       	movw	r24, r10
     df0:	0e 94 ad 09 	call	0x135a	; 0x135a <strnlen>
     df4:	4c 01       	movw	r8, r24
     df6:	82 01       	movw	r16, r4
     df8:	f3 2d       	mov	r31, r3
     dfa:	ff 77       	andi	r31, 0x7F	; 127
     dfc:	3f 2e       	mov	r3, r31
     dfe:	16 c0       	rjmp	.+44     	; 0xe2c <vfprintf+0x188>
     e00:	28 01       	movw	r4, r16
     e02:	22 e0       	ldi	r18, 0x02	; 2
     e04:	42 0e       	add	r4, r18
     e06:	51 1c       	adc	r5, r1
     e08:	f8 01       	movw	r30, r16
     e0a:	a0 80       	ld	r10, Z
     e0c:	b1 80       	ldd	r11, Z+1	; 0x01
     e0e:	36 fe       	sbrs	r3, 6
     e10:	03 c0       	rjmp	.+6      	; 0xe18 <vfprintf+0x174>
     e12:	69 2d       	mov	r22, r9
     e14:	70 e0       	ldi	r23, 0x00	; 0
     e16:	02 c0       	rjmp	.+4      	; 0xe1c <vfprintf+0x178>
     e18:	6f ef       	ldi	r22, 0xFF	; 255
     e1a:	7f ef       	ldi	r23, 0xFF	; 255
     e1c:	c5 01       	movw	r24, r10
     e1e:	0e 94 a2 09 	call	0x1344	; 0x1344 <strnlen_P>
     e22:	4c 01       	movw	r8, r24
     e24:	f3 2d       	mov	r31, r3
     e26:	f0 68       	ori	r31, 0x80	; 128
     e28:	3f 2e       	mov	r3, r31
     e2a:	82 01       	movw	r16, r4
     e2c:	33 fc       	sbrc	r3, 3
     e2e:	1b c0       	rjmp	.+54     	; 0xe66 <vfprintf+0x1c2>
     e30:	82 2d       	mov	r24, r2
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	88 16       	cp	r8, r24
     e36:	99 06       	cpc	r9, r25
     e38:	b0 f4       	brcc	.+44     	; 0xe66 <vfprintf+0x1c2>
     e3a:	b6 01       	movw	r22, r12
     e3c:	80 e2       	ldi	r24, 0x20	; 32
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	0e 94 b8 09 	call	0x1370	; 0x1370 <fputc>
     e44:	2a 94       	dec	r2
     e46:	f4 cf       	rjmp	.-24     	; 0xe30 <vfprintf+0x18c>
     e48:	f5 01       	movw	r30, r10
     e4a:	37 fc       	sbrc	r3, 7
     e4c:	85 91       	lpm	r24, Z+
     e4e:	37 fe       	sbrs	r3, 7
     e50:	81 91       	ld	r24, Z+
     e52:	5f 01       	movw	r10, r30
     e54:	b6 01       	movw	r22, r12
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	0e 94 b8 09 	call	0x1370	; 0x1370 <fputc>
     e5c:	21 10       	cpse	r2, r1
     e5e:	2a 94       	dec	r2
     e60:	21 e0       	ldi	r18, 0x01	; 1
     e62:	82 1a       	sub	r8, r18
     e64:	91 08       	sbc	r9, r1
     e66:	81 14       	cp	r8, r1
     e68:	91 04       	cpc	r9, r1
     e6a:	71 f7       	brne	.-36     	; 0xe48 <vfprintf+0x1a4>
     e6c:	e8 c0       	rjmp	.+464    	; 0x103e <vfprintf+0x39a>
     e6e:	84 36       	cpi	r24, 0x64	; 100
     e70:	11 f0       	breq	.+4      	; 0xe76 <vfprintf+0x1d2>
     e72:	89 36       	cpi	r24, 0x69	; 105
     e74:	41 f5       	brne	.+80     	; 0xec6 <vfprintf+0x222>
     e76:	f8 01       	movw	r30, r16
     e78:	37 fe       	sbrs	r3, 7
     e7a:	07 c0       	rjmp	.+14     	; 0xe8a <vfprintf+0x1e6>
     e7c:	60 81       	ld	r22, Z
     e7e:	71 81       	ldd	r23, Z+1	; 0x01
     e80:	82 81       	ldd	r24, Z+2	; 0x02
     e82:	93 81       	ldd	r25, Z+3	; 0x03
     e84:	0c 5f       	subi	r16, 0xFC	; 252
     e86:	1f 4f       	sbci	r17, 0xFF	; 255
     e88:	08 c0       	rjmp	.+16     	; 0xe9a <vfprintf+0x1f6>
     e8a:	60 81       	ld	r22, Z
     e8c:	71 81       	ldd	r23, Z+1	; 0x01
     e8e:	07 2e       	mov	r0, r23
     e90:	00 0c       	add	r0, r0
     e92:	88 0b       	sbc	r24, r24
     e94:	99 0b       	sbc	r25, r25
     e96:	0e 5f       	subi	r16, 0xFE	; 254
     e98:	1f 4f       	sbci	r17, 0xFF	; 255
     e9a:	f3 2d       	mov	r31, r3
     e9c:	ff 76       	andi	r31, 0x6F	; 111
     e9e:	3f 2e       	mov	r3, r31
     ea0:	97 ff       	sbrs	r25, 7
     ea2:	09 c0       	rjmp	.+18     	; 0xeb6 <vfprintf+0x212>
     ea4:	90 95       	com	r25
     ea6:	80 95       	com	r24
     ea8:	70 95       	com	r23
     eaa:	61 95       	neg	r22
     eac:	7f 4f       	sbci	r23, 0xFF	; 255
     eae:	8f 4f       	sbci	r24, 0xFF	; 255
     eb0:	9f 4f       	sbci	r25, 0xFF	; 255
     eb2:	f0 68       	ori	r31, 0x80	; 128
     eb4:	3f 2e       	mov	r3, r31
     eb6:	2a e0       	ldi	r18, 0x0A	; 10
     eb8:	30 e0       	ldi	r19, 0x00	; 0
     eba:	a3 01       	movw	r20, r6
     ebc:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__ultoa_invert>
     ec0:	88 2e       	mov	r8, r24
     ec2:	86 18       	sub	r8, r6
     ec4:	45 c0       	rjmp	.+138    	; 0xf50 <vfprintf+0x2ac>
     ec6:	85 37       	cpi	r24, 0x75	; 117
     ec8:	31 f4       	brne	.+12     	; 0xed6 <vfprintf+0x232>
     eca:	23 2d       	mov	r18, r3
     ecc:	2f 7e       	andi	r18, 0xEF	; 239
     ece:	b2 2e       	mov	r11, r18
     ed0:	2a e0       	ldi	r18, 0x0A	; 10
     ed2:	30 e0       	ldi	r19, 0x00	; 0
     ed4:	25 c0       	rjmp	.+74     	; 0xf20 <vfprintf+0x27c>
     ed6:	93 2d       	mov	r25, r3
     ed8:	99 7f       	andi	r25, 0xF9	; 249
     eda:	b9 2e       	mov	r11, r25
     edc:	8f 36       	cpi	r24, 0x6F	; 111
     ede:	c1 f0       	breq	.+48     	; 0xf10 <vfprintf+0x26c>
     ee0:	18 f4       	brcc	.+6      	; 0xee8 <vfprintf+0x244>
     ee2:	88 35       	cpi	r24, 0x58	; 88
     ee4:	79 f0       	breq	.+30     	; 0xf04 <vfprintf+0x260>
     ee6:	b5 c0       	rjmp	.+362    	; 0x1052 <vfprintf+0x3ae>
     ee8:	80 37       	cpi	r24, 0x70	; 112
     eea:	19 f0       	breq	.+6      	; 0xef2 <vfprintf+0x24e>
     eec:	88 37       	cpi	r24, 0x78	; 120
     eee:	21 f0       	breq	.+8      	; 0xef8 <vfprintf+0x254>
     ef0:	b0 c0       	rjmp	.+352    	; 0x1052 <vfprintf+0x3ae>
     ef2:	e9 2f       	mov	r30, r25
     ef4:	e0 61       	ori	r30, 0x10	; 16
     ef6:	be 2e       	mov	r11, r30
     ef8:	b4 fe       	sbrs	r11, 4
     efa:	0d c0       	rjmp	.+26     	; 0xf16 <vfprintf+0x272>
     efc:	fb 2d       	mov	r31, r11
     efe:	f4 60       	ori	r31, 0x04	; 4
     f00:	bf 2e       	mov	r11, r31
     f02:	09 c0       	rjmp	.+18     	; 0xf16 <vfprintf+0x272>
     f04:	34 fe       	sbrs	r3, 4
     f06:	0a c0       	rjmp	.+20     	; 0xf1c <vfprintf+0x278>
     f08:	29 2f       	mov	r18, r25
     f0a:	26 60       	ori	r18, 0x06	; 6
     f0c:	b2 2e       	mov	r11, r18
     f0e:	06 c0       	rjmp	.+12     	; 0xf1c <vfprintf+0x278>
     f10:	28 e0       	ldi	r18, 0x08	; 8
     f12:	30 e0       	ldi	r19, 0x00	; 0
     f14:	05 c0       	rjmp	.+10     	; 0xf20 <vfprintf+0x27c>
     f16:	20 e1       	ldi	r18, 0x10	; 16
     f18:	30 e0       	ldi	r19, 0x00	; 0
     f1a:	02 c0       	rjmp	.+4      	; 0xf20 <vfprintf+0x27c>
     f1c:	20 e1       	ldi	r18, 0x10	; 16
     f1e:	32 e0       	ldi	r19, 0x02	; 2
     f20:	f8 01       	movw	r30, r16
     f22:	b7 fe       	sbrs	r11, 7
     f24:	07 c0       	rjmp	.+14     	; 0xf34 <vfprintf+0x290>
     f26:	60 81       	ld	r22, Z
     f28:	71 81       	ldd	r23, Z+1	; 0x01
     f2a:	82 81       	ldd	r24, Z+2	; 0x02
     f2c:	93 81       	ldd	r25, Z+3	; 0x03
     f2e:	0c 5f       	subi	r16, 0xFC	; 252
     f30:	1f 4f       	sbci	r17, 0xFF	; 255
     f32:	06 c0       	rjmp	.+12     	; 0xf40 <vfprintf+0x29c>
     f34:	60 81       	ld	r22, Z
     f36:	71 81       	ldd	r23, Z+1	; 0x01
     f38:	80 e0       	ldi	r24, 0x00	; 0
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	0e 5f       	subi	r16, 0xFE	; 254
     f3e:	1f 4f       	sbci	r17, 0xFF	; 255
     f40:	a3 01       	movw	r20, r6
     f42:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__ultoa_invert>
     f46:	88 2e       	mov	r8, r24
     f48:	86 18       	sub	r8, r6
     f4a:	fb 2d       	mov	r31, r11
     f4c:	ff 77       	andi	r31, 0x7F	; 127
     f4e:	3f 2e       	mov	r3, r31
     f50:	36 fe       	sbrs	r3, 6
     f52:	0d c0       	rjmp	.+26     	; 0xf6e <vfprintf+0x2ca>
     f54:	23 2d       	mov	r18, r3
     f56:	2e 7f       	andi	r18, 0xFE	; 254
     f58:	a2 2e       	mov	r10, r18
     f5a:	89 14       	cp	r8, r9
     f5c:	58 f4       	brcc	.+22     	; 0xf74 <vfprintf+0x2d0>
     f5e:	34 fe       	sbrs	r3, 4
     f60:	0b c0       	rjmp	.+22     	; 0xf78 <vfprintf+0x2d4>
     f62:	32 fc       	sbrc	r3, 2
     f64:	09 c0       	rjmp	.+18     	; 0xf78 <vfprintf+0x2d4>
     f66:	83 2d       	mov	r24, r3
     f68:	8e 7e       	andi	r24, 0xEE	; 238
     f6a:	a8 2e       	mov	r10, r24
     f6c:	05 c0       	rjmp	.+10     	; 0xf78 <vfprintf+0x2d4>
     f6e:	b8 2c       	mov	r11, r8
     f70:	a3 2c       	mov	r10, r3
     f72:	03 c0       	rjmp	.+6      	; 0xf7a <vfprintf+0x2d6>
     f74:	b8 2c       	mov	r11, r8
     f76:	01 c0       	rjmp	.+2      	; 0xf7a <vfprintf+0x2d6>
     f78:	b9 2c       	mov	r11, r9
     f7a:	a4 fe       	sbrs	r10, 4
     f7c:	0f c0       	rjmp	.+30     	; 0xf9c <vfprintf+0x2f8>
     f7e:	fe 01       	movw	r30, r28
     f80:	e8 0d       	add	r30, r8
     f82:	f1 1d       	adc	r31, r1
     f84:	80 81       	ld	r24, Z
     f86:	80 33       	cpi	r24, 0x30	; 48
     f88:	21 f4       	brne	.+8      	; 0xf92 <vfprintf+0x2ee>
     f8a:	9a 2d       	mov	r25, r10
     f8c:	99 7e       	andi	r25, 0xE9	; 233
     f8e:	a9 2e       	mov	r10, r25
     f90:	09 c0       	rjmp	.+18     	; 0xfa4 <vfprintf+0x300>
     f92:	a2 fe       	sbrs	r10, 2
     f94:	06 c0       	rjmp	.+12     	; 0xfa2 <vfprintf+0x2fe>
     f96:	b3 94       	inc	r11
     f98:	b3 94       	inc	r11
     f9a:	04 c0       	rjmp	.+8      	; 0xfa4 <vfprintf+0x300>
     f9c:	8a 2d       	mov	r24, r10
     f9e:	86 78       	andi	r24, 0x86	; 134
     fa0:	09 f0       	breq	.+2      	; 0xfa4 <vfprintf+0x300>
     fa2:	b3 94       	inc	r11
     fa4:	a3 fc       	sbrc	r10, 3
     fa6:	11 c0       	rjmp	.+34     	; 0xfca <vfprintf+0x326>
     fa8:	a0 fe       	sbrs	r10, 0
     faa:	06 c0       	rjmp	.+12     	; 0xfb8 <vfprintf+0x314>
     fac:	b2 14       	cp	r11, r2
     fae:	88 f4       	brcc	.+34     	; 0xfd2 <vfprintf+0x32e>
     fb0:	28 0c       	add	r2, r8
     fb2:	92 2c       	mov	r9, r2
     fb4:	9b 18       	sub	r9, r11
     fb6:	0e c0       	rjmp	.+28     	; 0xfd4 <vfprintf+0x330>
     fb8:	b2 14       	cp	r11, r2
     fba:	60 f4       	brcc	.+24     	; 0xfd4 <vfprintf+0x330>
     fbc:	b6 01       	movw	r22, r12
     fbe:	80 e2       	ldi	r24, 0x20	; 32
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	0e 94 b8 09 	call	0x1370	; 0x1370 <fputc>
     fc6:	b3 94       	inc	r11
     fc8:	f7 cf       	rjmp	.-18     	; 0xfb8 <vfprintf+0x314>
     fca:	b2 14       	cp	r11, r2
     fcc:	18 f4       	brcc	.+6      	; 0xfd4 <vfprintf+0x330>
     fce:	2b 18       	sub	r2, r11
     fd0:	02 c0       	rjmp	.+4      	; 0xfd6 <vfprintf+0x332>
     fd2:	98 2c       	mov	r9, r8
     fd4:	21 2c       	mov	r2, r1
     fd6:	a4 fe       	sbrs	r10, 4
     fd8:	10 c0       	rjmp	.+32     	; 0xffa <vfprintf+0x356>
     fda:	b6 01       	movw	r22, r12
     fdc:	80 e3       	ldi	r24, 0x30	; 48
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	0e 94 b8 09 	call	0x1370	; 0x1370 <fputc>
     fe4:	a2 fe       	sbrs	r10, 2
     fe6:	17 c0       	rjmp	.+46     	; 0x1016 <vfprintf+0x372>
     fe8:	a1 fc       	sbrc	r10, 1
     fea:	03 c0       	rjmp	.+6      	; 0xff2 <vfprintf+0x34e>
     fec:	88 e7       	ldi	r24, 0x78	; 120
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	02 c0       	rjmp	.+4      	; 0xff6 <vfprintf+0x352>
     ff2:	88 e5       	ldi	r24, 0x58	; 88
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	b6 01       	movw	r22, r12
     ff8:	0c c0       	rjmp	.+24     	; 0x1012 <vfprintf+0x36e>
     ffa:	8a 2d       	mov	r24, r10
     ffc:	86 78       	andi	r24, 0x86	; 134
     ffe:	59 f0       	breq	.+22     	; 0x1016 <vfprintf+0x372>
    1000:	a1 fe       	sbrs	r10, 1
    1002:	02 c0       	rjmp	.+4      	; 0x1008 <vfprintf+0x364>
    1004:	8b e2       	ldi	r24, 0x2B	; 43
    1006:	01 c0       	rjmp	.+2      	; 0x100a <vfprintf+0x366>
    1008:	80 e2       	ldi	r24, 0x20	; 32
    100a:	a7 fc       	sbrc	r10, 7
    100c:	8d e2       	ldi	r24, 0x2D	; 45
    100e:	b6 01       	movw	r22, r12
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	0e 94 b8 09 	call	0x1370	; 0x1370 <fputc>
    1016:	89 14       	cp	r8, r9
    1018:	38 f4       	brcc	.+14     	; 0x1028 <vfprintf+0x384>
    101a:	b6 01       	movw	r22, r12
    101c:	80 e3       	ldi	r24, 0x30	; 48
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	0e 94 b8 09 	call	0x1370	; 0x1370 <fputc>
    1024:	9a 94       	dec	r9
    1026:	f7 cf       	rjmp	.-18     	; 0x1016 <vfprintf+0x372>
    1028:	8a 94       	dec	r8
    102a:	f3 01       	movw	r30, r6
    102c:	e8 0d       	add	r30, r8
    102e:	f1 1d       	adc	r31, r1
    1030:	80 81       	ld	r24, Z
    1032:	b6 01       	movw	r22, r12
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	0e 94 b8 09 	call	0x1370	; 0x1370 <fputc>
    103a:	81 10       	cpse	r8, r1
    103c:	f5 cf       	rjmp	.-22     	; 0x1028 <vfprintf+0x384>
    103e:	22 20       	and	r2, r2
    1040:	09 f4       	brne	.+2      	; 0x1044 <vfprintf+0x3a0>
    1042:	42 ce       	rjmp	.-892    	; 0xcc8 <vfprintf+0x24>
    1044:	b6 01       	movw	r22, r12
    1046:	80 e2       	ldi	r24, 0x20	; 32
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	0e 94 b8 09 	call	0x1370	; 0x1370 <fputc>
    104e:	2a 94       	dec	r2
    1050:	f6 cf       	rjmp	.-20     	; 0x103e <vfprintf+0x39a>
    1052:	f6 01       	movw	r30, r12
    1054:	86 81       	ldd	r24, Z+6	; 0x06
    1056:	97 81       	ldd	r25, Z+7	; 0x07
    1058:	02 c0       	rjmp	.+4      	; 0x105e <vfprintf+0x3ba>
    105a:	8f ef       	ldi	r24, 0xFF	; 255
    105c:	9f ef       	ldi	r25, 0xFF	; 255
    105e:	2b 96       	adiw	r28, 0x0b	; 11
    1060:	e2 e1       	ldi	r30, 0x12	; 18
    1062:	0c 94 7c 0a 	jmp	0x14f8	; 0x14f8 <__epilogue_restores__>

00001066 <strtod>:
    1066:	a0 e0       	ldi	r26, 0x00	; 0
    1068:	b0 e0       	ldi	r27, 0x00	; 0
    106a:	e9 e3       	ldi	r30, 0x39	; 57
    106c:	f8 e0       	ldi	r31, 0x08	; 8
    106e:	0c 94 66 0a 	jmp	0x14cc	; 0x14cc <__prologue_saves__+0xc>
    1072:	ec 01       	movw	r28, r24
    1074:	6b 01       	movw	r12, r22
    1076:	61 15       	cp	r22, r1
    1078:	71 05       	cpc	r23, r1
    107a:	19 f0       	breq	.+6      	; 0x1082 <strtod+0x1c>
    107c:	fb 01       	movw	r30, r22
    107e:	91 83       	std	Z+1, r25	; 0x01
    1080:	80 83       	st	Z, r24
    1082:	7e 01       	movw	r14, r28
    1084:	ff ef       	ldi	r31, 0xFF	; 255
    1086:	ef 1a       	sub	r14, r31
    1088:	ff 0a       	sbc	r15, r31
    108a:	08 81       	ld	r16, Y
    108c:	80 2f       	mov	r24, r16
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	0e 94 81 09 	call	0x1302	; 0x1302 <isspace>
    1094:	89 2b       	or	r24, r25
    1096:	11 f0       	breq	.+4      	; 0x109c <strtod+0x36>
    1098:	e7 01       	movw	r28, r14
    109a:	f3 cf       	rjmp	.-26     	; 0x1082 <strtod+0x1c>
    109c:	0d 32       	cpi	r16, 0x2D	; 45
    109e:	39 f4       	brne	.+14     	; 0x10ae <strtod+0x48>
    10a0:	7e 01       	movw	r14, r28
    10a2:	82 e0       	ldi	r24, 0x02	; 2
    10a4:	e8 0e       	add	r14, r24
    10a6:	f1 1c       	adc	r15, r1
    10a8:	09 81       	ldd	r16, Y+1	; 0x01
    10aa:	11 e0       	ldi	r17, 0x01	; 1
    10ac:	08 c0       	rjmp	.+16     	; 0x10be <strtod+0x58>
    10ae:	0b 32       	cpi	r16, 0x2B	; 43
    10b0:	29 f4       	brne	.+10     	; 0x10bc <strtod+0x56>
    10b2:	7e 01       	movw	r14, r28
    10b4:	92 e0       	ldi	r25, 0x02	; 2
    10b6:	e9 0e       	add	r14, r25
    10b8:	f1 1c       	adc	r15, r1
    10ba:	09 81       	ldd	r16, Y+1	; 0x01
    10bc:	10 e0       	ldi	r17, 0x00	; 0
    10be:	e7 01       	movw	r28, r14
    10c0:	21 97       	sbiw	r28, 0x01	; 1
    10c2:	43 e0       	ldi	r20, 0x03	; 3
    10c4:	50 e0       	ldi	r21, 0x00	; 0
    10c6:	6c e5       	ldi	r22, 0x5C	; 92
    10c8:	70 e0       	ldi	r23, 0x00	; 0
    10ca:	ce 01       	movw	r24, r28
    10cc:	0e 94 8a 09 	call	0x1314	; 0x1314 <strncasecmp_P>
    10d0:	89 2b       	or	r24, r25
    10d2:	c1 f4       	brne	.+48     	; 0x1104 <strtod+0x9e>
    10d4:	23 96       	adiw	r28, 0x03	; 3
    10d6:	45 e0       	ldi	r20, 0x05	; 5
    10d8:	50 e0       	ldi	r21, 0x00	; 0
    10da:	67 e5       	ldi	r22, 0x57	; 87
    10dc:	70 e0       	ldi	r23, 0x00	; 0
    10de:	ce 01       	movw	r24, r28
    10e0:	0e 94 8a 09 	call	0x1314	; 0x1314 <strncasecmp_P>
    10e4:	89 2b       	or	r24, r25
    10e6:	09 f4       	brne	.+2      	; 0x10ea <strtod+0x84>
    10e8:	25 96       	adiw	r28, 0x05	; 5
    10ea:	c1 14       	cp	r12, r1
    10ec:	d1 04       	cpc	r13, r1
    10ee:	19 f0       	breq	.+6      	; 0x10f6 <strtod+0x90>
    10f0:	f6 01       	movw	r30, r12
    10f2:	d1 83       	std	Z+1, r29	; 0x01
    10f4:	c0 83       	st	Z, r28
    10f6:	11 11       	cpse	r17, r1
    10f8:	f6 c0       	rjmp	.+492    	; 0x12e6 <strtod+0x280>
    10fa:	60 e0       	ldi	r22, 0x00	; 0
    10fc:	70 e0       	ldi	r23, 0x00	; 0
    10fe:	80 e8       	ldi	r24, 0x80	; 128
    1100:	9f e7       	ldi	r25, 0x7F	; 127
    1102:	fa c0       	rjmp	.+500    	; 0x12f8 <strtod+0x292>
    1104:	43 e0       	ldi	r20, 0x03	; 3
    1106:	50 e0       	ldi	r21, 0x00	; 0
    1108:	64 e5       	ldi	r22, 0x54	; 84
    110a:	70 e0       	ldi	r23, 0x00	; 0
    110c:	ce 01       	movw	r24, r28
    110e:	0e 94 8a 09 	call	0x1314	; 0x1314 <strncasecmp_P>
    1112:	89 2b       	or	r24, r25
    1114:	59 f4       	brne	.+22     	; 0x112c <strtod+0xc6>
    1116:	c1 14       	cp	r12, r1
    1118:	d1 04       	cpc	r13, r1
    111a:	09 f4       	brne	.+2      	; 0x111e <strtod+0xb8>
    111c:	e9 c0       	rjmp	.+466    	; 0x12f0 <strtod+0x28a>
    111e:	f2 e0       	ldi	r31, 0x02	; 2
    1120:	ef 0e       	add	r14, r31
    1122:	f1 1c       	adc	r15, r1
    1124:	f6 01       	movw	r30, r12
    1126:	f1 82       	std	Z+1, r15	; 0x01
    1128:	e0 82       	st	Z, r14
    112a:	e2 c0       	rjmp	.+452    	; 0x12f0 <strtod+0x28a>
    112c:	20 e0       	ldi	r18, 0x00	; 0
    112e:	30 e0       	ldi	r19, 0x00	; 0
    1130:	a9 01       	movw	r20, r18
    1132:	c0 e0       	ldi	r28, 0x00	; 0
    1134:	d0 e0       	ldi	r29, 0x00	; 0
    1136:	f7 01       	movw	r30, r14
    1138:	80 ed       	ldi	r24, 0xD0	; 208
    113a:	a8 2e       	mov	r10, r24
    113c:	a0 0e       	add	r10, r16
    113e:	89 e0       	ldi	r24, 0x09	; 9
    1140:	8a 15       	cp	r24, r10
    1142:	30 f1       	brcs	.+76     	; 0x1190 <strtod+0x12a>
    1144:	91 2f       	mov	r25, r17
    1146:	92 60       	ori	r25, 0x02	; 2
    1148:	b9 2e       	mov	r11, r25
    114a:	81 2f       	mov	r24, r17
    114c:	88 70       	andi	r24, 0x08	; 8
    114e:	12 ff       	sbrs	r17, 2
    1150:	04 c0       	rjmp	.+8      	; 0x115a <strtod+0xf4>
    1152:	81 11       	cpse	r24, r1
    1154:	24 c0       	rjmp	.+72     	; 0x119e <strtod+0x138>
    1156:	21 96       	adiw	r28, 0x01	; 1
    1158:	22 c0       	rjmp	.+68     	; 0x119e <strtod+0x138>
    115a:	81 11       	cpse	r24, r1
    115c:	21 97       	sbiw	r28, 0x01	; 1
    115e:	a5 e0       	ldi	r26, 0x05	; 5
    1160:	b0 e0       	ldi	r27, 0x00	; 0
    1162:	0e 94 55 0a 	call	0x14aa	; 0x14aa <__muluhisi3>
    1166:	dc 01       	movw	r26, r24
    1168:	cb 01       	movw	r24, r22
    116a:	88 0f       	add	r24, r24
    116c:	99 1f       	adc	r25, r25
    116e:	aa 1f       	adc	r26, r26
    1170:	bb 1f       	adc	r27, r27
    1172:	9c 01       	movw	r18, r24
    1174:	ad 01       	movw	r20, r26
    1176:	2a 0d       	add	r18, r10
    1178:	31 1d       	adc	r19, r1
    117a:	41 1d       	adc	r20, r1
    117c:	51 1d       	adc	r21, r1
    117e:	28 39       	cpi	r18, 0x98	; 152
    1180:	89 e9       	ldi	r24, 0x99	; 153
    1182:	38 07       	cpc	r19, r24
    1184:	48 07       	cpc	r20, r24
    1186:	89 e1       	ldi	r24, 0x19	; 25
    1188:	58 07       	cpc	r21, r24
    118a:	48 f0       	brcs	.+18     	; 0x119e <strtod+0x138>
    118c:	16 60       	ori	r17, 0x06	; 6
    118e:	06 c0       	rjmp	.+12     	; 0x119c <strtod+0x136>
    1190:	9e ef       	ldi	r25, 0xFE	; 254
    1192:	a9 12       	cpse	r10, r25
    1194:	0a c0       	rjmp	.+20     	; 0x11aa <strtod+0x144>
    1196:	13 fd       	sbrc	r17, 3
    1198:	40 c0       	rjmp	.+128    	; 0x121a <strtod+0x1b4>
    119a:	18 60       	ori	r17, 0x08	; 8
    119c:	b1 2e       	mov	r11, r17
    119e:	8f ef       	ldi	r24, 0xFF	; 255
    11a0:	e8 1a       	sub	r14, r24
    11a2:	f8 0a       	sbc	r15, r24
    11a4:	00 81       	ld	r16, Z
    11a6:	1b 2d       	mov	r17, r11
    11a8:	c6 cf       	rjmp	.-116    	; 0x1136 <strtod+0xd0>
    11aa:	80 2f       	mov	r24, r16
    11ac:	8f 7d       	andi	r24, 0xDF	; 223
    11ae:	85 34       	cpi	r24, 0x45	; 69
    11b0:	a1 f5       	brne	.+104    	; 0x121a <strtod+0x1b4>
    11b2:	80 81       	ld	r24, Z
    11b4:	8d 32       	cpi	r24, 0x2D	; 45
    11b6:	11 f4       	brne	.+4      	; 0x11bc <strtod+0x156>
    11b8:	10 61       	ori	r17, 0x10	; 16
    11ba:	06 c0       	rjmp	.+12     	; 0x11c8 <strtod+0x162>
    11bc:	8b 32       	cpi	r24, 0x2B	; 43
    11be:	21 f0       	breq	.+8      	; 0x11c8 <strtod+0x162>
    11c0:	31 96       	adiw	r30, 0x01	; 1
    11c2:	61 e0       	ldi	r22, 0x01	; 1
    11c4:	70 e0       	ldi	r23, 0x00	; 0
    11c6:	04 c0       	rjmp	.+8      	; 0x11d0 <strtod+0x16a>
    11c8:	81 81       	ldd	r24, Z+1	; 0x01
    11ca:	32 96       	adiw	r30, 0x02	; 2
    11cc:	62 e0       	ldi	r22, 0x02	; 2
    11ce:	70 e0       	ldi	r23, 0x00	; 0
    11d0:	80 53       	subi	r24, 0x30	; 48
    11d2:	8a 30       	cpi	r24, 0x0A	; 10
    11d4:	18 f0       	brcs	.+6      	; 0x11dc <strtod+0x176>
    11d6:	e6 1b       	sub	r30, r22
    11d8:	f7 0b       	sbc	r31, r23
    11da:	1f c0       	rjmp	.+62     	; 0x121a <strtod+0x1b4>
    11dc:	60 e0       	ldi	r22, 0x00	; 0
    11de:	70 e0       	ldi	r23, 0x00	; 0
    11e0:	60 38       	cpi	r22, 0x80	; 128
    11e2:	9c e0       	ldi	r25, 0x0C	; 12
    11e4:	79 07       	cpc	r23, r25
    11e6:	5c f4       	brge	.+22     	; 0x11fe <strtod+0x198>
    11e8:	db 01       	movw	r26, r22
    11ea:	aa 0f       	add	r26, r26
    11ec:	bb 1f       	adc	r27, r27
    11ee:	aa 0f       	add	r26, r26
    11f0:	bb 1f       	adc	r27, r27
    11f2:	6a 0f       	add	r22, r26
    11f4:	7b 1f       	adc	r23, r27
    11f6:	66 0f       	add	r22, r22
    11f8:	77 1f       	adc	r23, r23
    11fa:	68 0f       	add	r22, r24
    11fc:	71 1d       	adc	r23, r1
    11fe:	31 96       	adiw	r30, 0x01	; 1
    1200:	df 01       	movw	r26, r30
    1202:	11 97       	sbiw	r26, 0x01	; 1
    1204:	8c 91       	ld	r24, X
    1206:	80 53       	subi	r24, 0x30	; 48
    1208:	8a 30       	cpi	r24, 0x0A	; 10
    120a:	50 f3       	brcs	.-44     	; 0x11e0 <strtod+0x17a>
    120c:	14 ff       	sbrs	r17, 4
    120e:	03 c0       	rjmp	.+6      	; 0x1216 <strtod+0x1b0>
    1210:	71 95       	neg	r23
    1212:	61 95       	neg	r22
    1214:	71 09       	sbc	r23, r1
    1216:	c6 0f       	add	r28, r22
    1218:	d7 1f       	adc	r29, r23
    121a:	11 ff       	sbrs	r17, 1
    121c:	08 c0       	rjmp	.+16     	; 0x122e <strtod+0x1c8>
    121e:	c1 14       	cp	r12, r1
    1220:	d1 04       	cpc	r13, r1
    1222:	29 f0       	breq	.+10     	; 0x122e <strtod+0x1c8>
    1224:	cf 01       	movw	r24, r30
    1226:	01 97       	sbiw	r24, 0x01	; 1
    1228:	f6 01       	movw	r30, r12
    122a:	91 83       	std	Z+1, r25	; 0x01
    122c:	80 83       	st	Z, r24
    122e:	ca 01       	movw	r24, r20
    1230:	b9 01       	movw	r22, r18
    1232:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__floatunsisf>
    1236:	21 2f       	mov	r18, r17
    1238:	23 70       	andi	r18, 0x03	; 3
    123a:	23 30       	cpi	r18, 0x03	; 3
    123c:	19 f0       	breq	.+6      	; 0x1244 <strtod+0x1de>
    123e:	4b 01       	movw	r8, r22
    1240:	5c 01       	movw	r10, r24
    1242:	06 c0       	rjmp	.+12     	; 0x1250 <strtod+0x1ea>
    1244:	4b 01       	movw	r8, r22
    1246:	5c 01       	movw	r10, r24
    1248:	b7 fa       	bst	r11, 7
    124a:	b0 94       	com	r11
    124c:	b7 f8       	bld	r11, 7
    124e:	b0 94       	com	r11
    1250:	20 e0       	ldi	r18, 0x00	; 0
    1252:	30 e0       	ldi	r19, 0x00	; 0
    1254:	a9 01       	movw	r20, r18
    1256:	c5 01       	movw	r24, r10
    1258:	b4 01       	movw	r22, r8
    125a:	0e 94 3a 04 	call	0x874	; 0x874 <__cmpsf2>
    125e:	88 23       	and	r24, r24
    1260:	09 f4       	brne	.+2      	; 0x1264 <strtod+0x1fe>
    1262:	3e c0       	rjmp	.+124    	; 0x12e0 <strtod+0x27a>
    1264:	d7 ff       	sbrs	r29, 7
    1266:	06 c0       	rjmp	.+12     	; 0x1274 <strtod+0x20e>
    1268:	d1 95       	neg	r29
    126a:	c1 95       	neg	r28
    126c:	d1 09       	sbc	r29, r1
    126e:	03 e7       	ldi	r16, 0x73	; 115
    1270:	10 e0       	ldi	r17, 0x00	; 0
    1272:	02 c0       	rjmp	.+4      	; 0x1278 <strtod+0x212>
    1274:	0b e8       	ldi	r16, 0x8B	; 139
    1276:	10 e0       	ldi	r17, 0x00	; 0
    1278:	68 01       	movw	r12, r16
    127a:	f8 e1       	ldi	r31, 0x18	; 24
    127c:	cf 1a       	sub	r12, r31
    127e:	d1 08       	sbc	r13, r1
    1280:	90 e2       	ldi	r25, 0x20	; 32
    1282:	e9 2e       	mov	r14, r25
    1284:	f1 2c       	mov	r15, r1
    1286:	ce 15       	cp	r28, r14
    1288:	df 05       	cpc	r29, r15
    128a:	74 f0       	brlt	.+28     	; 0x12a8 <strtod+0x242>
    128c:	f8 01       	movw	r30, r16
    128e:	25 91       	lpm	r18, Z+
    1290:	35 91       	lpm	r19, Z+
    1292:	45 91       	lpm	r20, Z+
    1294:	54 91       	lpm	r21, Z
    1296:	c5 01       	movw	r24, r10
    1298:	b4 01       	movw	r22, r8
    129a:	0e 94 99 05 	call	0xb32	; 0xb32 <__mulsf3>
    129e:	4b 01       	movw	r8, r22
    12a0:	5c 01       	movw	r10, r24
    12a2:	ce 19       	sub	r28, r14
    12a4:	df 09       	sbc	r29, r15
    12a6:	ef cf       	rjmp	.-34     	; 0x1286 <strtod+0x220>
    12a8:	04 50       	subi	r16, 0x04	; 4
    12aa:	11 09       	sbc	r17, r1
    12ac:	f5 94       	asr	r15
    12ae:	e7 94       	ror	r14
    12b0:	0c 15       	cp	r16, r12
    12b2:	1d 05       	cpc	r17, r13
    12b4:	41 f7       	brne	.-48     	; 0x1286 <strtod+0x220>
    12b6:	8a 2d       	mov	r24, r10
    12b8:	88 0f       	add	r24, r24
    12ba:	8b 2d       	mov	r24, r11
    12bc:	88 1f       	adc	r24, r24
    12be:	8f 3f       	cpi	r24, 0xFF	; 255
    12c0:	49 f0       	breq	.+18     	; 0x12d4 <strtod+0x26e>
    12c2:	20 e0       	ldi	r18, 0x00	; 0
    12c4:	30 e0       	ldi	r19, 0x00	; 0
    12c6:	a9 01       	movw	r20, r18
    12c8:	c5 01       	movw	r24, r10
    12ca:	b4 01       	movw	r22, r8
    12cc:	0e 94 3a 04 	call	0x874	; 0x874 <__cmpsf2>
    12d0:	81 11       	cpse	r24, r1
    12d2:	06 c0       	rjmp	.+12     	; 0x12e0 <strtod+0x27a>
    12d4:	82 e2       	ldi	r24, 0x22	; 34
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <errno+0x1>
    12dc:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <errno>
    12e0:	c5 01       	movw	r24, r10
    12e2:	b4 01       	movw	r22, r8
    12e4:	09 c0       	rjmp	.+18     	; 0x12f8 <strtod+0x292>
    12e6:	60 e0       	ldi	r22, 0x00	; 0
    12e8:	70 e0       	ldi	r23, 0x00	; 0
    12ea:	80 e8       	ldi	r24, 0x80	; 128
    12ec:	9f ef       	ldi	r25, 0xFF	; 255
    12ee:	04 c0       	rjmp	.+8      	; 0x12f8 <strtod+0x292>
    12f0:	60 e0       	ldi	r22, 0x00	; 0
    12f2:	70 e0       	ldi	r23, 0x00	; 0
    12f4:	80 ec       	ldi	r24, 0xC0	; 192
    12f6:	9f e7       	ldi	r25, 0x7F	; 127
    12f8:	cd b7       	in	r28, 0x3d	; 61
    12fa:	de b7       	in	r29, 0x3e	; 62
    12fc:	ec e0       	ldi	r30, 0x0C	; 12
    12fe:	0c 94 82 0a 	jmp	0x1504	; 0x1504 <__epilogue_restores__+0xc>

00001302 <isspace>:
    1302:	91 11       	cpse	r25, r1
    1304:	0c 94 52 0a 	jmp	0x14a4	; 0x14a4 <__ctype_isfalse>
    1308:	80 32       	cpi	r24, 0x20	; 32
    130a:	19 f0       	breq	.+6      	; 0x1312 <isspace+0x10>
    130c:	89 50       	subi	r24, 0x09	; 9
    130e:	85 50       	subi	r24, 0x05	; 5
    1310:	c8 f7       	brcc	.-14     	; 0x1304 <isspace+0x2>
    1312:	08 95       	ret

00001314 <strncasecmp_P>:
    1314:	fb 01       	movw	r30, r22
    1316:	dc 01       	movw	r26, r24
    1318:	41 50       	subi	r20, 0x01	; 1
    131a:	50 40       	sbci	r21, 0x00	; 0
    131c:	88 f0       	brcs	.+34     	; 0x1340 <strncasecmp_P+0x2c>
    131e:	8d 91       	ld	r24, X+
    1320:	81 34       	cpi	r24, 0x41	; 65
    1322:	1c f0       	brlt	.+6      	; 0x132a <strncasecmp_P+0x16>
    1324:	8b 35       	cpi	r24, 0x5B	; 91
    1326:	0c f4       	brge	.+2      	; 0x132a <strncasecmp_P+0x16>
    1328:	80 5e       	subi	r24, 0xE0	; 224
    132a:	65 91       	lpm	r22, Z+
    132c:	61 34       	cpi	r22, 0x41	; 65
    132e:	1c f0       	brlt	.+6      	; 0x1336 <strncasecmp_P+0x22>
    1330:	6b 35       	cpi	r22, 0x5B	; 91
    1332:	0c f4       	brge	.+2      	; 0x1336 <strncasecmp_P+0x22>
    1334:	60 5e       	subi	r22, 0xE0	; 224
    1336:	86 1b       	sub	r24, r22
    1338:	61 11       	cpse	r22, r1
    133a:	71 f3       	breq	.-36     	; 0x1318 <strncasecmp_P+0x4>
    133c:	99 0b       	sbc	r25, r25
    133e:	08 95       	ret
    1340:	88 1b       	sub	r24, r24
    1342:	fc cf       	rjmp	.-8      	; 0x133c <strncasecmp_P+0x28>

00001344 <strnlen_P>:
    1344:	fc 01       	movw	r30, r24
    1346:	05 90       	lpm	r0, Z+
    1348:	61 50       	subi	r22, 0x01	; 1
    134a:	70 40       	sbci	r23, 0x00	; 0
    134c:	01 10       	cpse	r0, r1
    134e:	d8 f7       	brcc	.-10     	; 0x1346 <strnlen_P+0x2>
    1350:	80 95       	com	r24
    1352:	90 95       	com	r25
    1354:	8e 0f       	add	r24, r30
    1356:	9f 1f       	adc	r25, r31
    1358:	08 95       	ret

0000135a <strnlen>:
    135a:	fc 01       	movw	r30, r24
    135c:	61 50       	subi	r22, 0x01	; 1
    135e:	70 40       	sbci	r23, 0x00	; 0
    1360:	01 90       	ld	r0, Z+
    1362:	01 10       	cpse	r0, r1
    1364:	d8 f7       	brcc	.-10     	; 0x135c <strnlen+0x2>
    1366:	80 95       	com	r24
    1368:	90 95       	com	r25
    136a:	8e 0f       	add	r24, r30
    136c:	9f 1f       	adc	r25, r31
    136e:	08 95       	ret

00001370 <fputc>:
    1370:	0f 93       	push	r16
    1372:	1f 93       	push	r17
    1374:	cf 93       	push	r28
    1376:	df 93       	push	r29
    1378:	fb 01       	movw	r30, r22
    137a:	23 81       	ldd	r18, Z+3	; 0x03
    137c:	21 fd       	sbrc	r18, 1
    137e:	03 c0       	rjmp	.+6      	; 0x1386 <fputc+0x16>
    1380:	8f ef       	ldi	r24, 0xFF	; 255
    1382:	9f ef       	ldi	r25, 0xFF	; 255
    1384:	2c c0       	rjmp	.+88     	; 0x13de <fputc+0x6e>
    1386:	22 ff       	sbrs	r18, 2
    1388:	16 c0       	rjmp	.+44     	; 0x13b6 <fputc+0x46>
    138a:	46 81       	ldd	r20, Z+6	; 0x06
    138c:	57 81       	ldd	r21, Z+7	; 0x07
    138e:	24 81       	ldd	r18, Z+4	; 0x04
    1390:	35 81       	ldd	r19, Z+5	; 0x05
    1392:	42 17       	cp	r20, r18
    1394:	53 07       	cpc	r21, r19
    1396:	44 f4       	brge	.+16     	; 0x13a8 <fputc+0x38>
    1398:	a0 81       	ld	r26, Z
    139a:	b1 81       	ldd	r27, Z+1	; 0x01
    139c:	9d 01       	movw	r18, r26
    139e:	2f 5f       	subi	r18, 0xFF	; 255
    13a0:	3f 4f       	sbci	r19, 0xFF	; 255
    13a2:	31 83       	std	Z+1, r19	; 0x01
    13a4:	20 83       	st	Z, r18
    13a6:	8c 93       	st	X, r24
    13a8:	26 81       	ldd	r18, Z+6	; 0x06
    13aa:	37 81       	ldd	r19, Z+7	; 0x07
    13ac:	2f 5f       	subi	r18, 0xFF	; 255
    13ae:	3f 4f       	sbci	r19, 0xFF	; 255
    13b0:	37 83       	std	Z+7, r19	; 0x07
    13b2:	26 83       	std	Z+6, r18	; 0x06
    13b4:	14 c0       	rjmp	.+40     	; 0x13de <fputc+0x6e>
    13b6:	8b 01       	movw	r16, r22
    13b8:	ec 01       	movw	r28, r24
    13ba:	fb 01       	movw	r30, r22
    13bc:	00 84       	ldd	r0, Z+8	; 0x08
    13be:	f1 85       	ldd	r31, Z+9	; 0x09
    13c0:	e0 2d       	mov	r30, r0
    13c2:	09 95       	icall
    13c4:	89 2b       	or	r24, r25
    13c6:	e1 f6       	brne	.-72     	; 0x1380 <fputc+0x10>
    13c8:	d8 01       	movw	r26, r16
    13ca:	16 96       	adiw	r26, 0x06	; 6
    13cc:	8d 91       	ld	r24, X+
    13ce:	9c 91       	ld	r25, X
    13d0:	17 97       	sbiw	r26, 0x07	; 7
    13d2:	01 96       	adiw	r24, 0x01	; 1
    13d4:	17 96       	adiw	r26, 0x07	; 7
    13d6:	9c 93       	st	X, r25
    13d8:	8e 93       	st	-X, r24
    13da:	16 97       	sbiw	r26, 0x06	; 6
    13dc:	ce 01       	movw	r24, r28
    13de:	df 91       	pop	r29
    13e0:	cf 91       	pop	r28
    13e2:	1f 91       	pop	r17
    13e4:	0f 91       	pop	r16
    13e6:	08 95       	ret

000013e8 <__ultoa_invert>:
    13e8:	fa 01       	movw	r30, r20
    13ea:	aa 27       	eor	r26, r26
    13ec:	28 30       	cpi	r18, 0x08	; 8
    13ee:	51 f1       	breq	.+84     	; 0x1444 <__ultoa_invert+0x5c>
    13f0:	20 31       	cpi	r18, 0x10	; 16
    13f2:	81 f1       	breq	.+96     	; 0x1454 <__ultoa_invert+0x6c>
    13f4:	e8 94       	clt
    13f6:	6f 93       	push	r22
    13f8:	6e 7f       	andi	r22, 0xFE	; 254
    13fa:	6e 5f       	subi	r22, 0xFE	; 254
    13fc:	7f 4f       	sbci	r23, 0xFF	; 255
    13fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1400:	9f 4f       	sbci	r25, 0xFF	; 255
    1402:	af 4f       	sbci	r26, 0xFF	; 255
    1404:	b1 e0       	ldi	r27, 0x01	; 1
    1406:	3e d0       	rcall	.+124    	; 0x1484 <__ultoa_invert+0x9c>
    1408:	b4 e0       	ldi	r27, 0x04	; 4
    140a:	3c d0       	rcall	.+120    	; 0x1484 <__ultoa_invert+0x9c>
    140c:	67 0f       	add	r22, r23
    140e:	78 1f       	adc	r23, r24
    1410:	89 1f       	adc	r24, r25
    1412:	9a 1f       	adc	r25, r26
    1414:	a1 1d       	adc	r26, r1
    1416:	68 0f       	add	r22, r24
    1418:	79 1f       	adc	r23, r25
    141a:	8a 1f       	adc	r24, r26
    141c:	91 1d       	adc	r25, r1
    141e:	a1 1d       	adc	r26, r1
    1420:	6a 0f       	add	r22, r26
    1422:	71 1d       	adc	r23, r1
    1424:	81 1d       	adc	r24, r1
    1426:	91 1d       	adc	r25, r1
    1428:	a1 1d       	adc	r26, r1
    142a:	20 d0       	rcall	.+64     	; 0x146c <__ultoa_invert+0x84>
    142c:	09 f4       	brne	.+2      	; 0x1430 <__ultoa_invert+0x48>
    142e:	68 94       	set
    1430:	3f 91       	pop	r19
    1432:	2a e0       	ldi	r18, 0x0A	; 10
    1434:	26 9f       	mul	r18, r22
    1436:	11 24       	eor	r1, r1
    1438:	30 19       	sub	r19, r0
    143a:	30 5d       	subi	r19, 0xD0	; 208
    143c:	31 93       	st	Z+, r19
    143e:	de f6       	brtc	.-74     	; 0x13f6 <__ultoa_invert+0xe>
    1440:	cf 01       	movw	r24, r30
    1442:	08 95       	ret
    1444:	46 2f       	mov	r20, r22
    1446:	47 70       	andi	r20, 0x07	; 7
    1448:	40 5d       	subi	r20, 0xD0	; 208
    144a:	41 93       	st	Z+, r20
    144c:	b3 e0       	ldi	r27, 0x03	; 3
    144e:	0f d0       	rcall	.+30     	; 0x146e <__ultoa_invert+0x86>
    1450:	c9 f7       	brne	.-14     	; 0x1444 <__ultoa_invert+0x5c>
    1452:	f6 cf       	rjmp	.-20     	; 0x1440 <__ultoa_invert+0x58>
    1454:	46 2f       	mov	r20, r22
    1456:	4f 70       	andi	r20, 0x0F	; 15
    1458:	40 5d       	subi	r20, 0xD0	; 208
    145a:	4a 33       	cpi	r20, 0x3A	; 58
    145c:	18 f0       	brcs	.+6      	; 0x1464 <__ultoa_invert+0x7c>
    145e:	49 5d       	subi	r20, 0xD9	; 217
    1460:	31 fd       	sbrc	r19, 1
    1462:	40 52       	subi	r20, 0x20	; 32
    1464:	41 93       	st	Z+, r20
    1466:	02 d0       	rcall	.+4      	; 0x146c <__ultoa_invert+0x84>
    1468:	a9 f7       	brne	.-22     	; 0x1454 <__ultoa_invert+0x6c>
    146a:	ea cf       	rjmp	.-44     	; 0x1440 <__ultoa_invert+0x58>
    146c:	b4 e0       	ldi	r27, 0x04	; 4
    146e:	a6 95       	lsr	r26
    1470:	97 95       	ror	r25
    1472:	87 95       	ror	r24
    1474:	77 95       	ror	r23
    1476:	67 95       	ror	r22
    1478:	ba 95       	dec	r27
    147a:	c9 f7       	brne	.-14     	; 0x146e <__ultoa_invert+0x86>
    147c:	00 97       	sbiw	r24, 0x00	; 0
    147e:	61 05       	cpc	r22, r1
    1480:	71 05       	cpc	r23, r1
    1482:	08 95       	ret
    1484:	9b 01       	movw	r18, r22
    1486:	ac 01       	movw	r20, r24
    1488:	0a 2e       	mov	r0, r26
    148a:	06 94       	lsr	r0
    148c:	57 95       	ror	r21
    148e:	47 95       	ror	r20
    1490:	37 95       	ror	r19
    1492:	27 95       	ror	r18
    1494:	ba 95       	dec	r27
    1496:	c9 f7       	brne	.-14     	; 0x148a <__ultoa_invert+0xa2>
    1498:	62 0f       	add	r22, r18
    149a:	73 1f       	adc	r23, r19
    149c:	84 1f       	adc	r24, r20
    149e:	95 1f       	adc	r25, r21
    14a0:	a0 1d       	adc	r26, r0
    14a2:	08 95       	ret

000014a4 <__ctype_isfalse>:
    14a4:	99 27       	eor	r25, r25
    14a6:	88 27       	eor	r24, r24

000014a8 <__ctype_istrue>:
    14a8:	08 95       	ret

000014aa <__muluhisi3>:
    14aa:	0e 94 97 0a 	call	0x152e	; 0x152e <__umulhisi3>
    14ae:	a5 9f       	mul	r26, r21
    14b0:	90 0d       	add	r25, r0
    14b2:	b4 9f       	mul	r27, r20
    14b4:	90 0d       	add	r25, r0
    14b6:	a4 9f       	mul	r26, r20
    14b8:	80 0d       	add	r24, r0
    14ba:	91 1d       	adc	r25, r1
    14bc:	11 24       	eor	r1, r1
    14be:	08 95       	ret

000014c0 <__prologue_saves__>:
    14c0:	2f 92       	push	r2
    14c2:	3f 92       	push	r3
    14c4:	4f 92       	push	r4
    14c6:	5f 92       	push	r5
    14c8:	6f 92       	push	r6
    14ca:	7f 92       	push	r7
    14cc:	8f 92       	push	r8
    14ce:	9f 92       	push	r9
    14d0:	af 92       	push	r10
    14d2:	bf 92       	push	r11
    14d4:	cf 92       	push	r12
    14d6:	df 92       	push	r13
    14d8:	ef 92       	push	r14
    14da:	ff 92       	push	r15
    14dc:	0f 93       	push	r16
    14de:	1f 93       	push	r17
    14e0:	cf 93       	push	r28
    14e2:	df 93       	push	r29
    14e4:	cd b7       	in	r28, 0x3d	; 61
    14e6:	de b7       	in	r29, 0x3e	; 62
    14e8:	ca 1b       	sub	r28, r26
    14ea:	db 0b       	sbc	r29, r27
    14ec:	0f b6       	in	r0, 0x3f	; 63
    14ee:	f8 94       	cli
    14f0:	de bf       	out	0x3e, r29	; 62
    14f2:	0f be       	out	0x3f, r0	; 63
    14f4:	cd bf       	out	0x3d, r28	; 61
    14f6:	09 94       	ijmp

000014f8 <__epilogue_restores__>:
    14f8:	2a 88       	ldd	r2, Y+18	; 0x12
    14fa:	39 88       	ldd	r3, Y+17	; 0x11
    14fc:	48 88       	ldd	r4, Y+16	; 0x10
    14fe:	5f 84       	ldd	r5, Y+15	; 0x0f
    1500:	6e 84       	ldd	r6, Y+14	; 0x0e
    1502:	7d 84       	ldd	r7, Y+13	; 0x0d
    1504:	8c 84       	ldd	r8, Y+12	; 0x0c
    1506:	9b 84       	ldd	r9, Y+11	; 0x0b
    1508:	aa 84       	ldd	r10, Y+10	; 0x0a
    150a:	b9 84       	ldd	r11, Y+9	; 0x09
    150c:	c8 84       	ldd	r12, Y+8	; 0x08
    150e:	df 80       	ldd	r13, Y+7	; 0x07
    1510:	ee 80       	ldd	r14, Y+6	; 0x06
    1512:	fd 80       	ldd	r15, Y+5	; 0x05
    1514:	0c 81       	ldd	r16, Y+4	; 0x04
    1516:	1b 81       	ldd	r17, Y+3	; 0x03
    1518:	aa 81       	ldd	r26, Y+2	; 0x02
    151a:	b9 81       	ldd	r27, Y+1	; 0x01
    151c:	ce 0f       	add	r28, r30
    151e:	d1 1d       	adc	r29, r1
    1520:	0f b6       	in	r0, 0x3f	; 63
    1522:	f8 94       	cli
    1524:	de bf       	out	0x3e, r29	; 62
    1526:	0f be       	out	0x3f, r0	; 63
    1528:	cd bf       	out	0x3d, r28	; 61
    152a:	ed 01       	movw	r28, r26
    152c:	08 95       	ret

0000152e <__umulhisi3>:
    152e:	a2 9f       	mul	r26, r18
    1530:	b0 01       	movw	r22, r0
    1532:	b3 9f       	mul	r27, r19
    1534:	c0 01       	movw	r24, r0
    1536:	a3 9f       	mul	r26, r19
    1538:	70 0d       	add	r23, r0
    153a:	81 1d       	adc	r24, r1
    153c:	11 24       	eor	r1, r1
    153e:	91 1d       	adc	r25, r1
    1540:	b2 9f       	mul	r27, r18
    1542:	70 0d       	add	r23, r0
    1544:	81 1d       	adc	r24, r1
    1546:	11 24       	eor	r1, r1
    1548:	91 1d       	adc	r25, r1
    154a:	08 95       	ret

0000154c <_exit>:
    154c:	f8 94       	cli

0000154e <__stop_program>:
    154e:	ff cf       	rjmp	.-2      	; 0x154e <__stop_program>
