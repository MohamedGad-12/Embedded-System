
gpio_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000010e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000162  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000162  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000194  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000734  00000000  00000000  000001f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005ac  00000000  00000000  0000092c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002b7  00000000  00000000  00000ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001190  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000317  00000000  00000000  000011c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001ac  00000000  00000000  000014db  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001687  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 3d 00 	call	0x7a	; 0x7a <main>
  64:	0c 94 85 00 	jmp	0x10a	; 0x10a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <init>:

void init ()
{


	RESET_BIT(DDRD,1,0);
  6c:	88 98       	cbi	0x11, 0	; 17
	SET_BIT(PORTD,1,0);
  6e:	90 9a       	sbi	0x12, 0	; 18
	
	SET_BIT(DDRD,1,7);
  70:	8f 9a       	sbi	0x11, 7	; 17
	SET_BIT(DDRD,1,6);
  72:	8e 9a       	sbi	0x11, 6	; 17
	SET_BIT(DDRD,1,5);
  74:	8d 9a       	sbi	0x11, 5	; 17
	SET_BIT(DDRD,1,4);
  76:	8c 9a       	sbi	0x11, 4	; 17
  78:	08 95       	ret

0000007a <main>:
}

int main(void)
{
	int flag = 0;
	init ();
  7a:	0e 94 36 00 	call	0x6c	; 0x6c <init>
			flag++;
			_delay_ms(100);
			}
						
			if (flag == 1) {
			TOGGLE_BIT(PORTD,1,6);
  7e:	20 e4       	ldi	r18, 0x40	; 64
			flag++;
			_delay_ms(100);
			}
						
			if (flag == 2) {
			TOGGLE_BIT(PORTD,1,5);
  80:	90 e2       	ldi	r25, 0x20	; 32
	int flag = 0;
	init ();
	
	while(1){

		if ( READ_BIT(PIND,1,0) == 1) {
  82:	80 9b       	sbis	0x10, 0	; 16
  84:	38 c0       	rjmp	.+112    	; 0xf6 <main+0x7c>
			
			if (flag == 0) {
			TOGGLE_BIT(PORTD,1,7);
  86:	82 b3       	in	r24, 0x12	; 18
  88:	80 58       	subi	r24, 0x80	; 128
  8a:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8c:	3f ef       	ldi	r19, 0xFF	; 255
  8e:	40 e7       	ldi	r20, 0x70	; 112
  90:	82 e0       	ldi	r24, 0x02	; 2
  92:	31 50       	subi	r19, 0x01	; 1
  94:	40 40       	sbci	r20, 0x00	; 0
  96:	80 40       	sbci	r24, 0x00	; 0
  98:	e1 f7       	brne	.-8      	; 0x92 <main+0x18>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <main+0x22>
  9c:	00 00       	nop
			flag++;
			_delay_ms(100);
			}
						
			if (flag == 1) {
			TOGGLE_BIT(PORTD,1,6);
  9e:	82 b3       	in	r24, 0x12	; 18
  a0:	82 27       	eor	r24, r18
  a2:	82 bb       	out	0x12, r24	; 18
  a4:	3f ef       	ldi	r19, 0xFF	; 255
  a6:	40 e7       	ldi	r20, 0x70	; 112
  a8:	82 e0       	ldi	r24, 0x02	; 2
  aa:	31 50       	subi	r19, 0x01	; 1
  ac:	40 40       	sbci	r20, 0x00	; 0
  ae:	80 40       	sbci	r24, 0x00	; 0
  b0:	e1 f7       	brne	.-8      	; 0xaa <main+0x30>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <main+0x3a>
  b4:	00 00       	nop
			flag++;
			_delay_ms(100);
			}
						
			if (flag == 2) {
			TOGGLE_BIT(PORTD,1,5);
  b6:	82 b3       	in	r24, 0x12	; 18
  b8:	89 27       	eor	r24, r25
  ba:	82 bb       	out	0x12, r24	; 18
  bc:	3f ef       	ldi	r19, 0xFF	; 255
  be:	40 e7       	ldi	r20, 0x70	; 112
  c0:	82 e0       	ldi	r24, 0x02	; 2
  c2:	31 50       	subi	r19, 0x01	; 1
  c4:	40 40       	sbci	r20, 0x00	; 0
  c6:	80 40       	sbci	r24, 0x00	; 0
  c8:	e1 f7       	brne	.-8      	; 0xc2 <main+0x48>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x52>
  cc:	00 00       	nop
			flag++;
			_delay_ms(100);
			}
						
			if (flag == 3) {
			SET_BIT(PORTD,1,4);
  ce:	94 9a       	sbi	0x12, 4	; 18
  d0:	3f ef       	ldi	r19, 0xFF	; 255
  d2:	49 e6       	ldi	r20, 0x69	; 105
  d4:	88 e1       	ldi	r24, 0x18	; 24
  d6:	31 50       	subi	r19, 0x01	; 1
  d8:	40 40       	sbci	r20, 0x00	; 0
  da:	80 40       	sbci	r24, 0x00	; 0
  dc:	e1 f7       	brne	.-8      	; 0xd6 <main+0x5c>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <main+0x66>
  e0:	00 00       	nop
			_delay_ms(1000);
			RESET_BIT(PORTD,1,4);
  e2:	94 98       	cbi	0x12, 4	; 18
  e4:	3f ef       	ldi	r19, 0xFF	; 255
  e6:	49 e6       	ldi	r20, 0x69	; 105
  e8:	88 e1       	ldi	r24, 0x18	; 24
  ea:	31 50       	subi	r19, 0x01	; 1
  ec:	40 40       	sbci	r20, 0x00	; 0
  ee:	80 40       	sbci	r24, 0x00	; 0
  f0:	e1 f7       	brne	.-8      	; 0xea <main+0x70>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <main+0x7a>
  f4:	00 00       	nop
  f6:	3f ef       	ldi	r19, 0xFF	; 255
  f8:	40 e7       	ldi	r20, 0x70	; 112
  fa:	82 e0       	ldi	r24, 0x02	; 2
  fc:	31 50       	subi	r19, 0x01	; 1
  fe:	40 40       	sbci	r20, 0x00	; 0
 100:	80 40       	sbci	r24, 0x00	; 0
 102:	e1 f7       	brne	.-8      	; 0xfc <main+0x82>
 104:	00 c0       	rjmp	.+0      	; 0x106 <main+0x8c>
 106:	00 00       	nop
 108:	bc cf       	rjmp	.-136    	; 0x82 <main+0x8>

0000010a <_exit>:
 10a:	f8 94       	cli

0000010c <__stop_program>:
 10c:	ff cf       	rjmp	.-2      	; 0x10c <__stop_program>
