
lcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000015be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  000015be  00001652  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000025  00800080  00800080  00001672  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001672  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000016d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  0000170c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000120a  00000000  00000000  00001804  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000989  00000000  00000000  00002a0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a48  00000000  00000000  00003397  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000029c  00000000  00000000  00003de0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004cb  00000000  00000000  0000407c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c67  00000000  00000000  00004547  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  000051ae  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	4e 41       	sbci	r20, 0x1E	; 30
      56:	4e 49       	Address 0x00000056 is out of bounds.
.word	0xffff	; ????

00000057 <pstr_inity>:
      57:	49 4e 49 54 59                                      INITY

0000005c <pstr_inf>:
      5c:	49 4e 46                                            INF

0000005f <pwr_m10>:
      5f:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      6f:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000077 <pwr_p10>:
      77:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      87:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000090 <__ctors_end>:
      90:	11 24       	eor	r1, r1
      92:	1f be       	out	0x3f, r1	; 63
      94:	cf e5       	ldi	r28, 0x5F	; 95
      96:	d8 e0       	ldi	r29, 0x08	; 8
      98:	de bf       	out	0x3e, r29	; 62
      9a:	cd bf       	out	0x3d, r28	; 61

0000009c <__do_copy_data>:
      9c:	10 e0       	ldi	r17, 0x00	; 0
      9e:	a0 e6       	ldi	r26, 0x60	; 96
      a0:	b0 e0       	ldi	r27, 0x00	; 0
      a2:	ee eb       	ldi	r30, 0xBE	; 190
      a4:	f5 e1       	ldi	r31, 0x15	; 21
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
      a8:	05 90       	lpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a0 38       	cpi	r26, 0x80	; 128
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	a0 e8       	ldi	r26, 0x80	; 128
      b6:	b0 e0       	ldi	r27, 0x00	; 0
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a5 3a       	cpi	r26, 0xA5	; 165
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 47 03 	call	0x68e	; 0x68e <main>
      c6:	0c 94 dd 0a 	jmp	0x15ba	; 0x15ba <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <sum>:
#include "lcd.h"
#include "App_layer_calculator.h"
#include <string.h>
#include <stdlib.h>

void sum (char op1[], char op2[]){
      ce:	cf 92       	push	r12
      d0:	df 92       	push	r13
      d2:	ef 92       	push	r14
      d4:	ff 92       	push	r15
      d6:	cf 93       	push	r28
      d8:	df 93       	push	r29
      da:	7c 01       	movw	r14, r24
      dc:	eb 01       	movw	r28, r22
	LCD_GOTO_XY(2,0);
      de:	60 e0       	ldi	r22, 0x00	; 0
      e0:	82 e0       	ldi	r24, 0x02	; 2
      e2:	0e 94 10 02 	call	0x420	; 0x420 <LCD_GOTO_XY>
	dipaly_number(atol(op1) + atol(op2));
      e6:	c7 01       	movw	r24, r14
      e8:	0e 94 45 06 	call	0xc8a	; 0xc8a <atol>
      ec:	6b 01       	movw	r12, r22
      ee:	7c 01       	movw	r14, r24
      f0:	ce 01       	movw	r24, r28
      f2:	0e 94 45 06 	call	0xc8a	; 0xc8a <atol>
      f6:	6c 0d       	add	r22, r12
      f8:	7d 1d       	adc	r23, r13
      fa:	8e 1d       	adc	r24, r14
      fc:	9f 1d       	adc	r25, r15
      fe:	0e 94 95 02 	call	0x52a	; 0x52a <dipaly_number>
}
     102:	df 91       	pop	r29
     104:	cf 91       	pop	r28
     106:	ff 90       	pop	r15
     108:	ef 90       	pop	r14
     10a:	df 90       	pop	r13
     10c:	cf 90       	pop	r12
     10e:	08 95       	ret

00000110 <subtract>:

void subtract (char op1[], char op2[]){
     110:	cf 92       	push	r12
     112:	df 92       	push	r13
     114:	ef 92       	push	r14
     116:	ff 92       	push	r15
     118:	cf 93       	push	r28
     11a:	df 93       	push	r29
     11c:	7c 01       	movw	r14, r24
     11e:	eb 01       	movw	r28, r22
	LCD_GOTO_XY(2,0);
     120:	60 e0       	ldi	r22, 0x00	; 0
     122:	82 e0       	ldi	r24, 0x02	; 2
     124:	0e 94 10 02 	call	0x420	; 0x420 <LCD_GOTO_XY>
	dipaly_number(atol(op1)-atol(op2));
     128:	c7 01       	movw	r24, r14
     12a:	0e 94 45 06 	call	0xc8a	; 0xc8a <atol>
     12e:	6b 01       	movw	r12, r22
     130:	7c 01       	movw	r14, r24
     132:	ce 01       	movw	r24, r28
     134:	0e 94 45 06 	call	0xc8a	; 0xc8a <atol>
     138:	a7 01       	movw	r20, r14
     13a:	96 01       	movw	r18, r12
     13c:	26 1b       	sub	r18, r22
     13e:	37 0b       	sbc	r19, r23
     140:	48 0b       	sbc	r20, r24
     142:	59 0b       	sbc	r21, r25
     144:	ca 01       	movw	r24, r20
     146:	b9 01       	movw	r22, r18
     148:	0e 94 95 02 	call	0x52a	; 0x52a <dipaly_number>
}
     14c:	df 91       	pop	r29
     14e:	cf 91       	pop	r28
     150:	ff 90       	pop	r15
     152:	ef 90       	pop	r14
     154:	df 90       	pop	r13
     156:	cf 90       	pop	r12
     158:	08 95       	ret

0000015a <multiplay>:

void multiplay (char op1[], char op2[]){	
     15a:	cf 92       	push	r12
     15c:	df 92       	push	r13
     15e:	ef 92       	push	r14
     160:	ff 92       	push	r15
     162:	cf 93       	push	r28
     164:	df 93       	push	r29
     166:	7c 01       	movw	r14, r24
     168:	eb 01       	movw	r28, r22
	LCD_GOTO_XY(2,0);
     16a:	60 e0       	ldi	r22, 0x00	; 0
     16c:	82 e0       	ldi	r24, 0x02	; 2
     16e:	0e 94 10 02 	call	0x420	; 0x420 <LCD_GOTO_XY>
	dipaly_number(atol(op1)*atol(op2));
     172:	c7 01       	movw	r24, r14
     174:	0e 94 45 06 	call	0xc8a	; 0xc8a <atol>
     178:	6b 01       	movw	r12, r22
     17a:	7c 01       	movw	r14, r24
     17c:	ce 01       	movw	r24, r28
     17e:	0e 94 45 06 	call	0xc8a	; 0xc8a <atol>
     182:	a7 01       	movw	r20, r14
     184:	96 01       	movw	r18, r12
     186:	0e 94 17 06 	call	0xc2e	; 0xc2e <__mulsi3>
     18a:	0e 94 95 02 	call	0x52a	; 0x52a <dipaly_number>
}
     18e:	df 91       	pop	r29
     190:	cf 91       	pop	r28
     192:	ff 90       	pop	r15
     194:	ef 90       	pop	r14
     196:	df 90       	pop	r13
     198:	cf 90       	pop	r12
     19a:	08 95       	ret

0000019c <divide>:

void divide (char op1[], char op2[]){
     19c:	cf 92       	push	r12
     19e:	df 92       	push	r13
     1a0:	ef 92       	push	r14
     1a2:	ff 92       	push	r15
     1a4:	cf 93       	push	r28
     1a6:	df 93       	push	r29
     1a8:	eb 01       	movw	r28, r22
	float total = ( atof(op1) / atof(op2) );
     1aa:	0e 94 41 06 	call	0xc82	; 0xc82 <atof>
     1ae:	6b 01       	movw	r12, r22
     1b0:	7c 01       	movw	r14, r24
     1b2:	ce 01       	movw	r24, r28
     1b4:	0e 94 41 06 	call	0xc82	; 0xc82 <atof>
     1b8:	9b 01       	movw	r18, r22
     1ba:	ac 01       	movw	r20, r24
     1bc:	c7 01       	movw	r24, r14
     1be:	b6 01       	movw	r22, r12
     1c0:	0e 94 50 04 	call	0x8a0	; 0x8a0 <__divsf3>
     1c4:	6b 01       	movw	r12, r22
     1c6:	7c 01       	movw	r14, r24
	LCD_GOTO_XY(2,0);
     1c8:	60 e0       	ldi	r22, 0x00	; 0
     1ca:	82 e0       	ldi	r24, 0x02	; 2
     1cc:	0e 94 10 02 	call	0x420	; 0x420 <LCD_GOTO_XY>
	dipaly_real_number(total);
     1d0:	c7 01       	movw	r24, r14
     1d2:	b6 01       	movw	r22, r12
     1d4:	0e 94 c3 02 	call	0x586	; 0x586 <dipaly_real_number>
}
     1d8:	df 91       	pop	r29
     1da:	cf 91       	pop	r28
     1dc:	ff 90       	pop	r15
     1de:	ef 90       	pop	r14
     1e0:	df 90       	pop	r13
     1e2:	cf 90       	pop	r12
     1e4:	08 95       	ret

000001e6 <Keypad_init>:

int Key_padRow[] = {R0, R1, R2, R3}; //rows of the keypad
int Key_padCol[] = {C0, C1, C2, C3};//columns

void Keypad_init(){
	DataDir_KEYPAD_PORT &= ~((1 << R0) | (1 << R1) | (1 << R2) | (1 << R3));
     1e6:	81 b3       	in	r24, 0x11	; 17
     1e8:	80 7f       	andi	r24, 0xF0	; 240
     1ea:	81 bb       	out	0x11, r24	; 17
	DataDir_KEYPAD_PORT |= ((1 << C0) | (1 << C1) | (1 << C2) | (1 << C3));
     1ec:	81 b3       	in	r24, 0x11	; 17
     1ee:	80 6f       	ori	r24, 0xF0	; 240
     1f0:	81 bb       	out	0x11, r24	; 17
	KEYPAD_PORT = 0xFF;
     1f2:	8f ef       	ldi	r24, 0xFF	; 255
     1f4:	82 bb       	out	0x12, r24	; 18
     1f6:	08 95       	ret

000001f8 <Keypad_getkey>:
}

char Keypad_getkey(){
     1f8:	ef 92       	push	r14
     1fa:	ff 92       	push	r15
     1fc:	0f 93       	push	r16
     1fe:	1f 93       	push	r17
     200:	cf 93       	push	r28
     202:	df 93       	push	r29
     204:	c0 e6       	ldi	r28, 0x60	; 96
     206:	d0 e0       	ldi	r29, 0x00	; 0
	int i,j;
	for (i = 0; i < 4; i++){
     208:	60 e0       	ldi	r22, 0x00	; 0
     20a:	70 e0       	ldi	r23, 0x00	; 0
		KEYPAD_PORT |= ((1<<Key_padCol[0]) | (1<<Key_padCol[1]) | (1<<Key_padCol[2]) | (1<<Key_padCol[3]));
     20c:	de 01       	movw	r26, r28
     20e:	41 e0       	ldi	r20, 0x01	; 1
     210:	50 e0       	ldi	r21, 0x00	; 0
     212:	92 b3       	in	r25, 0x12	; 18
     214:	fa 01       	movw	r30, r20
     216:	0c 90       	ld	r0, X
     218:	02 c0       	rjmp	.+4      	; 0x21e <Keypad_getkey+0x26>
     21a:	ee 0f       	add	r30, r30
     21c:	ff 1f       	adc	r31, r31
     21e:	0a 94       	dec	r0
     220:	e2 f7       	brpl	.-8      	; 0x21a <Keypad_getkey+0x22>
     222:	9a 01       	movw	r18, r20
     224:	12 96       	adiw	r26, 0x02	; 2
     226:	0c 90       	ld	r0, X
     228:	12 97       	sbiw	r26, 0x02	; 2
     22a:	02 c0       	rjmp	.+4      	; 0x230 <Keypad_getkey+0x38>
     22c:	22 0f       	add	r18, r18
     22e:	33 1f       	adc	r19, r19
     230:	0a 94       	dec	r0
     232:	e2 f7       	brpl	.-8      	; 0x22c <Keypad_getkey+0x34>
     234:	2e 2b       	or	r18, r30
     236:	82 2f       	mov	r24, r18
     238:	89 2b       	or	r24, r25
     23a:	9a 01       	movw	r18, r20
     23c:	14 96       	adiw	r26, 0x04	; 4
     23e:	0c 90       	ld	r0, X
     240:	14 97       	sbiw	r26, 0x04	; 4
     242:	02 c0       	rjmp	.+4      	; 0x248 <Keypad_getkey+0x50>
     244:	22 0f       	add	r18, r18
     246:	33 1f       	adc	r19, r19
     248:	0a 94       	dec	r0
     24a:	e2 f7       	brpl	.-8      	; 0x244 <Keypad_getkey+0x4c>
     24c:	28 2b       	or	r18, r24
     24e:	ca 01       	movw	r24, r20
     250:	16 96       	adiw	r26, 0x06	; 6
     252:	0c 90       	ld	r0, X
     254:	16 97       	sbiw	r26, 0x06	; 6
     256:	02 c0       	rjmp	.+4      	; 0x25c <Keypad_getkey+0x64>
     258:	88 0f       	add	r24, r24
     25a:	99 1f       	adc	r25, r25
     25c:	0a 94       	dec	r0
     25e:	e2 f7       	brpl	.-8      	; 0x258 <Keypad_getkey+0x60>
     260:	82 2b       	or	r24, r18
     262:	82 bb       	out	0x12, r24	; 18
		KEYPAD_PORT &= ~(1<<Key_padCol[i]);
     264:	92 b3       	in	r25, 0x12	; 18
     266:	88 81       	ld	r24, Y
     268:	22 96       	adiw	r28, 0x02	; 2
     26a:	9a 01       	movw	r18, r20
     26c:	02 c0       	rjmp	.+4      	; 0x272 <Keypad_getkey+0x7a>
     26e:	22 0f       	add	r18, r18
     270:	33 1f       	adc	r19, r19
     272:	8a 95       	dec	r24
     274:	e2 f7       	brpl	.-8      	; 0x26e <Keypad_getkey+0x76>
     276:	82 2f       	mov	r24, r18
     278:	80 95       	com	r24
     27a:	89 23       	and	r24, r25
     27c:	82 bb       	out	0x12, r24	; 18
     27e:	e8 e6       	ldi	r30, 0x68	; 104
     280:	f0 e0       	ldi	r31, 0x00	; 0
     282:	ee 24       	eor	r14, r14
     284:	e3 94       	inc	r14
     286:	f1 2c       	mov	r15, r1
     288:	00 e0       	ldi	r16, 0x00	; 0
     28a:	10 e0       	ldi	r17, 0x00	; 0
     28c:	05 c0       	rjmp	.+10     	; 0x298 <Keypad_getkey+0xa0>
     28e:	0f 5f       	subi	r16, 0xFF	; 255
     290:	1f 4f       	sbci	r17, 0xFF	; 255
     292:	8f ef       	ldi	r24, 0xFF	; 255
     294:	e8 1a       	sub	r14, r24
     296:	f8 0a       	sbc	r15, r24
		for(j = 0; j < 4; j++){
			if (!(keypadPIN & (1 << Key_padRow[j])))
     298:	80 b3       	in	r24, 0x10	; 16
     29a:	20 81       	ld	r18, Z
     29c:	32 96       	adiw	r30, 0x02	; 2
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	02 2e       	mov	r0, r18
     2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <Keypad_getkey+0xb0>
     2a4:	95 95       	asr	r25
     2a6:	87 95       	ror	r24
     2a8:	0a 94       	dec	r0
     2aa:	e2 f7       	brpl	.-8      	; 0x2a4 <Keypad_getkey+0xac>
     2ac:	80 fd       	sbrc	r24, 0
     2ae:	50 c0       	rjmp	.+160    	; 0x350 <Keypad_getkey+0x158>
     2b0:	ca 01       	movw	r24, r20
     2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <Keypad_getkey+0xc0>
     2b4:	88 0f       	add	r24, r24
     2b6:	99 1f       	adc	r25, r25
     2b8:	2a 95       	dec	r18
     2ba:	e2 f7       	brpl	.-8      	; 0x2b4 <Keypad_getkey+0xbc>
     2bc:	9c 01       	movw	r18, r24
			{
				while(!(keypadPIN & (1 << Key_padRow[j])));
     2be:	80 b3       	in	r24, 0x10	; 16
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	82 23       	and	r24, r18
     2c4:	93 23       	and	r25, r19
     2c6:	89 2b       	or	r24, r25
     2c8:	d1 f3       	breq	.-12     	; 0x2be <Keypad_getkey+0xc6>
				switch(i){
     2ca:	61 30       	cpi	r22, 0x01	; 1
     2cc:	71 05       	cpc	r23, r1
     2ce:	c9 f0       	breq	.+50     	; 0x302 <Keypad_getkey+0x10a>
     2d0:	24 f4       	brge	.+8      	; 0x2da <Keypad_getkey+0xe2>
     2d2:	61 15       	cp	r22, r1
     2d4:	71 05       	cpc	r23, r1
     2d6:	41 f0       	breq	.+16     	; 0x2e8 <Keypad_getkey+0xf0>
     2d8:	3b c0       	rjmp	.+118    	; 0x350 <Keypad_getkey+0x158>
     2da:	62 30       	cpi	r22, 0x02	; 2
     2dc:	71 05       	cpc	r23, r1
     2de:	f1 f0       	breq	.+60     	; 0x31c <Keypad_getkey+0x124>
     2e0:	63 30       	cpi	r22, 0x03	; 3
     2e2:	71 05       	cpc	r23, r1
     2e4:	41 f1       	breq	.+80     	; 0x336 <Keypad_getkey+0x13e>
     2e6:	34 c0       	rjmp	.+104    	; 0x350 <Keypad_getkey+0x158>
					case (0):
						if (j == 0) return '7';
     2e8:	01 15       	cp	r16, r1
     2ea:	11 05       	cpc	r17, r1
     2ec:	f1 f1       	breq	.+124    	; 0x36a <Keypad_getkey+0x172>
						else if (j == 1) return '4';
     2ee:	01 30       	cpi	r16, 0x01	; 1
     2f0:	11 05       	cpc	r17, r1
     2f2:	e9 f1       	breq	.+122    	; 0x36e <Keypad_getkey+0x176>
						else if (j == 2) return '1';
     2f4:	02 30       	cpi	r16, 0x02	; 2
     2f6:	11 05       	cpc	r17, r1
     2f8:	e1 f1       	breq	.+120    	; 0x372 <Keypad_getkey+0x17a>
						else if (j == 3) return '?';
     2fa:	03 30       	cpi	r16, 0x03	; 3
     2fc:	11 05       	cpc	r17, r1
     2fe:	41 f5       	brne	.+80     	; 0x350 <Keypad_getkey+0x158>
     300:	3a c0       	rjmp	.+116    	; 0x376 <Keypad_getkey+0x17e>
						break;
					case (1):
						if (j == 0) return '8';
     302:	01 15       	cp	r16, r1
     304:	11 05       	cpc	r17, r1
     306:	c9 f1       	breq	.+114    	; 0x37a <Keypad_getkey+0x182>
						else if (j == 1) return '5';
     308:	01 30       	cpi	r16, 0x01	; 1
     30a:	11 05       	cpc	r17, r1
     30c:	c1 f1       	breq	.+112    	; 0x37e <Keypad_getkey+0x186>
						else if (j == 2) return '2';
     30e:	02 30       	cpi	r16, 0x02	; 2
     310:	11 05       	cpc	r17, r1
     312:	b9 f1       	breq	.+110    	; 0x382 <Keypad_getkey+0x18a>
						else if (j == 3) return '0';
     314:	03 30       	cpi	r16, 0x03	; 3
     316:	11 05       	cpc	r17, r1
     318:	d9 f4       	brne	.+54     	; 0x350 <Keypad_getkey+0x158>
     31a:	35 c0       	rjmp	.+106    	; 0x386 <Keypad_getkey+0x18e>
						break;
					case (2):
						if (j == 0) return '9';
     31c:	01 15       	cp	r16, r1
     31e:	11 05       	cpc	r17, r1
     320:	a1 f1       	breq	.+104    	; 0x38a <Keypad_getkey+0x192>
						else if (j == 1) return '6';
     322:	01 30       	cpi	r16, 0x01	; 1
     324:	11 05       	cpc	r17, r1
     326:	99 f1       	breq	.+102    	; 0x38e <Keypad_getkey+0x196>
						else if (j == 2) return '3';
     328:	02 30       	cpi	r16, 0x02	; 2
     32a:	11 05       	cpc	r17, r1
     32c:	91 f1       	breq	.+100    	; 0x392 <Keypad_getkey+0x19a>
						else if (j == 3) return '=';
     32e:	03 30       	cpi	r16, 0x03	; 3
     330:	11 05       	cpc	r17, r1
     332:	71 f4       	brne	.+28     	; 0x350 <Keypad_getkey+0x158>
     334:	30 c0       	rjmp	.+96     	; 0x396 <Keypad_getkey+0x19e>
						break;
					case (3):
						if (j == 0) return '/';
     336:	01 15       	cp	r16, r1
     338:	11 05       	cpc	r17, r1
     33a:	79 f1       	breq	.+94     	; 0x39a <Keypad_getkey+0x1a2>
						else if (j == 1) return '*';
     33c:	01 30       	cpi	r16, 0x01	; 1
     33e:	11 05       	cpc	r17, r1
     340:	71 f1       	breq	.+92     	; 0x39e <Keypad_getkey+0x1a6>
						else if (j == 2) return '-';
     342:	02 30       	cpi	r16, 0x02	; 2
     344:	11 05       	cpc	r17, r1
     346:	69 f1       	breq	.+90     	; 0x3a2 <Keypad_getkey+0x1aa>
						else if (j == 3) return '+';
     348:	03 30       	cpi	r16, 0x03	; 3
     34a:	11 05       	cpc	r17, r1
     34c:	71 f5       	brne	.+92     	; 0x3aa <Keypad_getkey+0x1b2>
     34e:	2b c0       	rjmp	.+86     	; 0x3a6 <Keypad_getkey+0x1ae>
char Keypad_getkey(){
	int i,j;
	for (i = 0; i < 4; i++){
		KEYPAD_PORT |= ((1<<Key_padCol[0]) | (1<<Key_padCol[1]) | (1<<Key_padCol[2]) | (1<<Key_padCol[3]));
		KEYPAD_PORT &= ~(1<<Key_padCol[i]);
		for(j = 0; j < 4; j++){
     350:	94 e0       	ldi	r25, 0x04	; 4
     352:	e9 16       	cp	r14, r25
     354:	f1 04       	cpc	r15, r1
     356:	0c f4       	brge	.+2      	; 0x35a <Keypad_getkey+0x162>
     358:	9a cf       	rjmp	.-204    	; 0x28e <Keypad_getkey+0x96>
	KEYPAD_PORT = 0xFF;
}

char Keypad_getkey(){
	int i,j;
	for (i = 0; i < 4; i++){
     35a:	6f 5f       	subi	r22, 0xFF	; 255
     35c:	7f 4f       	sbci	r23, 0xFF	; 255
     35e:	64 30       	cpi	r22, 0x04	; 4
     360:	71 05       	cpc	r23, r1
     362:	09 f0       	breq	.+2      	; 0x366 <Keypad_getkey+0x16e>
     364:	56 cf       	rjmp	.-340    	; 0x212 <Keypad_getkey+0x1a>
						break;
				}
			}
		}
	}
	return 'A';
     366:	81 e4       	ldi	r24, 0x41	; 65
     368:	26 c0       	rjmp	.+76     	; 0x3b6 <Keypad_getkey+0x1be>
			if (!(keypadPIN & (1 << Key_padRow[j])))
			{
				while(!(keypadPIN & (1 << Key_padRow[j])));
				switch(i){
					case (0):
						if (j == 0) return '7';
     36a:	87 e3       	ldi	r24, 0x37	; 55
     36c:	24 c0       	rjmp	.+72     	; 0x3b6 <Keypad_getkey+0x1be>
						else if (j == 1) return '4';
     36e:	84 e3       	ldi	r24, 0x34	; 52
     370:	22 c0       	rjmp	.+68     	; 0x3b6 <Keypad_getkey+0x1be>
						else if (j == 2) return '1';
     372:	81 e3       	ldi	r24, 0x31	; 49
     374:	20 c0       	rjmp	.+64     	; 0x3b6 <Keypad_getkey+0x1be>
						else if (j == 3) return '?';
     376:	8f e3       	ldi	r24, 0x3F	; 63
     378:	1e c0       	rjmp	.+60     	; 0x3b6 <Keypad_getkey+0x1be>
						break;
					case (1):
						if (j == 0) return '8';
     37a:	88 e3       	ldi	r24, 0x38	; 56
     37c:	1c c0       	rjmp	.+56     	; 0x3b6 <Keypad_getkey+0x1be>
						else if (j == 1) return '5';
     37e:	85 e3       	ldi	r24, 0x35	; 53
     380:	1a c0       	rjmp	.+52     	; 0x3b6 <Keypad_getkey+0x1be>
						else if (j == 2) return '2';
     382:	82 e3       	ldi	r24, 0x32	; 50
     384:	18 c0       	rjmp	.+48     	; 0x3b6 <Keypad_getkey+0x1be>
						else if (j == 3) return '0';
     386:	80 e3       	ldi	r24, 0x30	; 48
     388:	16 c0       	rjmp	.+44     	; 0x3b6 <Keypad_getkey+0x1be>
						break;
					case (2):
						if (j == 0) return '9';
     38a:	89 e3       	ldi	r24, 0x39	; 57
     38c:	14 c0       	rjmp	.+40     	; 0x3b6 <Keypad_getkey+0x1be>
						else if (j == 1) return '6';
     38e:	86 e3       	ldi	r24, 0x36	; 54
     390:	12 c0       	rjmp	.+36     	; 0x3b6 <Keypad_getkey+0x1be>
						else if (j == 2) return '3';
     392:	83 e3       	ldi	r24, 0x33	; 51
     394:	10 c0       	rjmp	.+32     	; 0x3b6 <Keypad_getkey+0x1be>
						else if (j == 3) return '=';
     396:	8d e3       	ldi	r24, 0x3D	; 61
     398:	0e c0       	rjmp	.+28     	; 0x3b6 <Keypad_getkey+0x1be>
						break;
					case (3):
						if (j == 0) return '/';
     39a:	8f e2       	ldi	r24, 0x2F	; 47
     39c:	0c c0       	rjmp	.+24     	; 0x3b6 <Keypad_getkey+0x1be>
						else if (j == 1) return '*';
     39e:	8a e2       	ldi	r24, 0x2A	; 42
     3a0:	0a c0       	rjmp	.+20     	; 0x3b6 <Keypad_getkey+0x1be>
						else if (j == 2) return '-';
     3a2:	8d e2       	ldi	r24, 0x2D	; 45
     3a4:	08 c0       	rjmp	.+16     	; 0x3b6 <Keypad_getkey+0x1be>
						else if (j == 3) return '+';
     3a6:	8b e2       	ldi	r24, 0x2B	; 43
     3a8:	06 c0       	rjmp	.+12     	; 0x3b6 <Keypad_getkey+0x1be>
char Keypad_getkey(){
	int i,j;
	for (i = 0; i < 4; i++){
		KEYPAD_PORT |= ((1<<Key_padCol[0]) | (1<<Key_padCol[1]) | (1<<Key_padCol[2]) | (1<<Key_padCol[3]));
		KEYPAD_PORT &= ~(1<<Key_padCol[i]);
		for(j = 0; j < 4; j++){
     3aa:	84 e0       	ldi	r24, 0x04	; 4
     3ac:	e8 16       	cp	r14, r24
     3ae:	f1 04       	cpc	r15, r1
     3b0:	0c f4       	brge	.+2      	; 0x3b4 <Keypad_getkey+0x1bc>
     3b2:	6d cf       	rjmp	.-294    	; 0x28e <Keypad_getkey+0x96>
						break;
				}
			}
		}
	}
	return 'A';
     3b4:	81 e4       	ldi	r24, 0x41	; 65
     3b6:	df 91       	pop	r29
     3b8:	cf 91       	pop	r28
     3ba:	1f 91       	pop	r17
     3bc:	0f 91       	pop	r16
     3be:	ff 90       	pop	r15
     3c0:	ef 90       	pop	r14
     3c2:	08 95       	ret

000003c4 <LCD_lcd_kick>:
	curser = 0;
	LCD_WRITE_COMMAND(LCD_CLEAR_SCREEN);
}

void LCD_lcd_kick(){
	LCD_CTRL |= (1 << EN_SWITCH);
     3c4:	c3 9a       	sbi	0x18, 3	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3c6:	83 ed       	ldi	r24, 0xD3	; 211
     3c8:	90 e3       	ldi	r25, 0x30	; 48
     3ca:	01 97       	sbiw	r24, 0x01	; 1
     3cc:	f1 f7       	brne	.-4      	; 0x3ca <LCD_lcd_kick+0x6>
     3ce:	00 c0       	rjmp	.+0      	; 0x3d0 <LCD_lcd_kick+0xc>
     3d0:	00 00       	nop
	_delay_ms(50);
	LCD_CTRL &= ~(1 << EN_SWITCH);
     3d2:	c3 98       	cbi	0x18, 3	; 24
     3d4:	08 95       	ret

000003d6 <LCD_check_lcd_isbusy>:
	LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW);
	LCD_WRITE_COMMAND(LCD_DISP_ON_CURSOR_BLINK);	
}

void LCD_check_lcd_isbusy(){
	DataDir_LCD_PORT &= ~(0xFF<<DATA_shift);
     3d6:	8a b3       	in	r24, 0x1a	; 26
     3d8:	1a ba       	out	0x1a, r1	; 26
	LCD_CTRL |= (1 << RW_SWITCH);
     3da:	c2 9a       	sbi	0x18, 2	; 24
	LCD_CTRL &= ~(1 << RS_SWITCH);
     3dc:	c1 98       	cbi	0x18, 1	; 24
	LCD_lcd_kick();
     3de:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <LCD_lcd_kick>
	DataDir_LCD_PORT |= (0xFF<<DATA_shift);
     3e2:	8a b3       	in	r24, 0x1a	; 26
     3e4:	8f ef       	ldi	r24, 0xFF	; 255
     3e6:	8a bb       	out	0x1a, r24	; 26
	LCD_CTRL &= ~(1 << RW_SWITCH);
     3e8:	c2 98       	cbi	0x18, 2	; 24
     3ea:	08 95       	ret

000003ec <LCD_WRITE_COMMAND>:
	
}


void LCD_WRITE_COMMAND(unsigned char command){
     3ec:	cf 93       	push	r28
     3ee:	c8 2f       	mov	r28, r24
	#ifdef EIGHT_BIT_MODE
		LCD_check_lcd_isbusy();
     3f0:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <LCD_check_lcd_isbusy>
		LCD_PORT = command;
     3f4:	cb bb       	out	0x1b, r28	; 27
		LCD_CTRL &= ~((1 << RS_SWITCH) | (1<<RW_SWITCH)); 
     3f6:	88 b3       	in	r24, 0x18	; 24
     3f8:	89 7f       	andi	r24, 0xF9	; 249
     3fa:	88 bb       	out	0x18, r24	; 24
     3fc:	89 ef       	ldi	r24, 0xF9	; 249
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	01 97       	sbiw	r24, 0x01	; 1
     402:	f1 f7       	brne	.-4      	; 0x400 <__LOCK_REGION_LENGTH__>
     404:	00 c0       	rjmp	.+0      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     406:	00 00       	nop
		_delay_ms(1);
		LCD_lcd_kick();
     408:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <LCD_lcd_kick>
		LCD_lcd_kick ();
		LCD_PORT = (LCD_PORT & 0x0F) | (command << 4);
		LCD_CTRL &= ~ ((1<<RW_SWITCH)|(1<<RS_SWITCH));
		LCD_lcd_kick();
	#endif
}
     40c:	cf 91       	pop	r28
     40e:	08 95       	ret

00000410 <LCD_clear_screen>:
#include <string.h>

int curser = 0;

void LCD_clear_screen(){
	curser = 0;
     410:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__data_end+0x1>
     414:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__data_end>
	LCD_WRITE_COMMAND(LCD_CLEAR_SCREEN);
     418:	81 e0       	ldi	r24, 0x01	; 1
     41a:	0e 94 f6 01 	call	0x3ec	; 0x3ec <LCD_WRITE_COMMAND>
     41e:	08 95       	ret

00000420 <LCD_GOTO_XY>:
	_delay_ms(50);
	LCD_CTRL &= ~(1 << EN_SWITCH);
}

void LCD_GOTO_XY(unsigned char line, unsigned char position){
	if (line == 1)
     420:	81 30       	cpi	r24, 0x01	; 1
     422:	39 f4       	brne	.+14     	; 0x432 <LCD_GOTO_XY+0x12>
	{
		if (position < 16 && position >= 0)
     424:	60 31       	cpi	r22, 0x10	; 16
     426:	98 f4       	brcc	.+38     	; 0x44e <LCD_GOTO_XY+0x2e>
		{
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW+position);
     428:	80 e8       	ldi	r24, 0x80	; 128
     42a:	86 0f       	add	r24, r22
     42c:	0e 94 f6 01 	call	0x3ec	; 0x3ec <LCD_WRITE_COMMAND>
     430:	08 95       	ret
		}
	}
	if (line == 2)
     432:	82 30       	cpi	r24, 0x02	; 2
     434:	61 f4       	brne	.+24     	; 0x44e <LCD_GOTO_XY+0x2e>
	{
		if (position < 16 && position >= 0)
     436:	60 31       	cpi	r22, 0x10	; 16
     438:	50 f4       	brcc	.+20     	; 0x44e <LCD_GOTO_XY+0x2e>
		{
			curser = 16;
     43a:	80 e1       	ldi	r24, 0x10	; 16
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__data_end+0x1>
     442:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__data_end>
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_SECOND_ROW+position);
     446:	80 ec       	ldi	r24, 0xC0	; 192
     448:	86 0f       	add	r24, r22
     44a:	0e 94 f6 01 	call	0x3ec	; 0x3ec <LCD_WRITE_COMMAND>
     44e:	08 95       	ret

00000450 <LCD_INIT>:
     450:	87 e8       	ldi	r24, 0x87	; 135
     452:	93 e1       	ldi	r25, 0x13	; 19
     454:	01 97       	sbiw	r24, 0x01	; 1
     456:	f1 f7       	brne	.-4      	; 0x454 <LCD_INIT+0x4>
     458:	00 c0       	rjmp	.+0      	; 0x45a <LCD_INIT+0xa>
     45a:	00 00       	nop
	}
}

void LCD_INIT(){
	_delay_ms(20);
	DataDir_LCD_CTRL |= (1<<EN_SWITCH | 1<<RS_SWITCH | 1<<RW_SWITCH);
     45c:	87 b3       	in	r24, 0x17	; 23
     45e:	8e 60       	ori	r24, 0x0E	; 14
     460:	87 bb       	out	0x17, r24	; 23
	LCD_CTRL &= ~ (1<<EN_SWITCH | 1<<RS_SWITCH | 1<<RW_SWITCH);
     462:	88 b3       	in	r24, 0x18	; 24
     464:	81 7f       	andi	r24, 0xF1	; 241
     466:	88 bb       	out	0x18, r24	; 24
	DataDir_LCD_PORT = 0xFF;
     468:	8f ef       	ldi	r24, 0xFF	; 255
     46a:	8a bb       	out	0x1a, r24	; 26
     46c:	85 ea       	ldi	r24, 0xA5	; 165
     46e:	9e e0       	ldi	r25, 0x0E	; 14
     470:	01 97       	sbiw	r24, 0x01	; 1
     472:	f1 f7       	brne	.-4      	; 0x470 <LCD_INIT+0x20>
     474:	00 c0       	rjmp	.+0      	; 0x476 <LCD_INIT+0x26>
     476:	00 00       	nop
	_delay_ms(15);
	LCD_clear_screen();
     478:	0e 94 08 02 	call	0x410	; 0x410 <LCD_clear_screen>
	
	#ifdef EIGHT_BIT_MODE
	LCD_WRITE_COMMAND(LCD_FUNCTION_8BIT_2LINES);
     47c:	88 e3       	ldi	r24, 0x38	; 56
     47e:	0e 94 f6 01 	call	0x3ec	; 0x3ec <LCD_WRITE_COMMAND>
		//LCD_WRITE_COMMAND(0x01);
	LCD_WRITE_COMMAND(0x02);
	LCD_WRITE_COMMAND(LCD_FUNCTION_4BIT_2LINES);
	#endif
	
	LCD_WRITE_COMMAND(LCD_ENTRY_MODE);
     482:	86 e0       	ldi	r24, 0x06	; 6
     484:	0e 94 f6 01 	call	0x3ec	; 0x3ec <LCD_WRITE_COMMAND>
	LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW);
     488:	80 e8       	ldi	r24, 0x80	; 128
     48a:	0e 94 f6 01 	call	0x3ec	; 0x3ec <LCD_WRITE_COMMAND>
	LCD_WRITE_COMMAND(LCD_DISP_ON_CURSOR_BLINK);	
     48e:	8f e0       	ldi	r24, 0x0F	; 15
     490:	0e 94 f6 01 	call	0x3ec	; 0x3ec <LCD_WRITE_COMMAND>
     494:	08 95       	ret

00000496 <check_position>:
		LCD_lcd_kick();
	#endif
}

void check_position (){
	curser++;
     496:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__data_end>
     49a:	90 91 81 00 	lds	r25, 0x0081	; 0x800081 <__data_end+0x1>
     49e:	01 96       	adiw	r24, 0x01	; 1
     4a0:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__data_end+0x1>
     4a4:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__data_end>
	if (curser == 16)
     4a8:	80 31       	cpi	r24, 0x10	; 16
     4aa:	91 05       	cpc	r25, r1
     4ac:	21 f4       	brne	.+8      	; 0x4b6 <check_position+0x20>
	if (line == 2)
	{
		if (position < 16 && position >= 0)
		{
			curser = 16;
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_SECOND_ROW+position);
     4ae:	80 ec       	ldi	r24, 0xC0	; 192
     4b0:	0e 94 f6 01 	call	0x3ec	; 0x3ec <LCD_WRITE_COMMAND>
     4b4:	08 95       	ret
	curser++;
	if (curser == 16)
	{
		LCD_GOTO_XY(2,0);
	}
	else if (curser == 32)
     4b6:	80 97       	sbiw	r24, 0x20	; 32
     4b8:	49 f4       	brne	.+18     	; 0x4cc <check_position+0x36>
	{
		LCD_clear_screen();
     4ba:	0e 94 08 02 	call	0x410	; 0x410 <LCD_clear_screen>
void LCD_GOTO_XY(unsigned char line, unsigned char position){
	if (line == 1)
	{
		if (position < 16 && position >= 0)
		{
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW+position);
     4be:	80 e8       	ldi	r24, 0x80	; 128
     4c0:	0e 94 f6 01 	call	0x3ec	; 0x3ec <LCD_WRITE_COMMAND>
	}
	else if (curser == 32)
	{
		LCD_clear_screen();
		LCD_GOTO_XY(1,0);
		curser = 0;
     4c4:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__data_end+0x1>
     4c8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__data_end>
     4cc:	08 95       	ret

000004ce <LCD_WRITE_CHAR>:
	}
	
}

void LCD_WRITE_CHAR(unsigned char character){
     4ce:	cf 93       	push	r28
     4d0:	c8 2f       	mov	r28, r24
	#ifdef EIGHT_BIT_MODE
		LCD_check_lcd_isbusy();
     4d2:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <LCD_check_lcd_isbusy>
		LCD_PORT = character;
     4d6:	cb bb       	out	0x1b, r28	; 27
		LCD_CTRL &= ~(1 << RW_SWITCH);
     4d8:	c2 98       	cbi	0x18, 2	; 24
		LCD_CTRL |= (1 << RS_SWITCH);
     4da:	c1 9a       	sbi	0x18, 1	; 24
     4dc:	89 ef       	ldi	r24, 0xF9	; 249
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	01 97       	sbiw	r24, 0x01	; 1
     4e2:	f1 f7       	brne	.-4      	; 0x4e0 <LCD_WRITE_CHAR+0x12>
     4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <LCD_WRITE_CHAR+0x18>
     4e6:	00 00       	nop
		_delay_ms(1);
		LCD_lcd_kick();
     4e8:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <LCD_lcd_kick>
     4ec:	89 ef       	ldi	r24, 0xF9	; 249
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	01 97       	sbiw	r24, 0x01	; 1
     4f2:	f1 f7       	brne	.-4      	; 0x4f0 <LCD_WRITE_CHAR+0x22>
     4f4:	00 c0       	rjmp	.+0      	; 0x4f6 <LCD_WRITE_CHAR+0x28>
     4f6:	00 00       	nop
		_delay_ms(1);
		check_position();
     4f8:	0e 94 4b 02 	call	0x496	; 0x496 <check_position>
     4fc:	89 ef       	ldi	r24, 0xF9	; 249
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	01 97       	sbiw	r24, 0x01	; 1
     502:	f1 f7       	brne	.-4      	; 0x500 <LCD_WRITE_CHAR+0x32>
     504:	00 c0       	rjmp	.+0      	; 0x506 <LCD_WRITE_CHAR+0x38>
     506:	00 00       	nop
		LCD_PORT = (LCD_PORT & 0x0F) | (character << 4);
		LCD_CTRL |= 1<<RS_SWITCH; //turn RS ON for Data mode.
		LCD_CTRL &= ~ (1<<RW_SWITCH);//turn RW off so you can write.
		LCD_lcd_kick ();
	#endif
}
     508:	cf 91       	pop	r28
     50a:	08 95       	ret

0000050c <LCD_WRITE_STRING>:

void LCD_WRITE_STRING(char* string){
     50c:	cf 93       	push	r28
     50e:	df 93       	push	r29
     510:	ec 01       	movw	r28, r24
	while (*string > 0) {
     512:	88 81       	ld	r24, Y
     514:	88 23       	and	r24, r24
     516:	31 f0       	breq	.+12     	; 0x524 <LCD_WRITE_STRING+0x18>
     518:	21 96       	adiw	r28, 0x01	; 1
		LCD_WRITE_CHAR(*string++);
     51a:	0e 94 67 02 	call	0x4ce	; 0x4ce <LCD_WRITE_CHAR>
		LCD_lcd_kick ();
	#endif
}

void LCD_WRITE_STRING(char* string){
	while (*string > 0) {
     51e:	89 91       	ld	r24, Y+
     520:	81 11       	cpse	r24, r1
     522:	fb cf       	rjmp	.-10     	; 0x51a <LCD_WRITE_STRING+0xe>
		LCD_WRITE_CHAR(*string++);
	}
}
     524:	df 91       	pop	r29
     526:	cf 91       	pop	r28
     528:	08 95       	ret

0000052a <dipaly_number>:

void dipaly_number(long int number)
{
     52a:	0f 93       	push	r16
     52c:	1f 93       	push	r17
     52e:	cf 93       	push	r28
     530:	df 93       	push	r29
     532:	cd b7       	in	r28, 0x3d	; 61
     534:	de b7       	in	r29, 0x3e	; 62
     536:	60 97       	sbiw	r28, 0x10	; 16
     538:	0f b6       	in	r0, 0x3f	; 63
     53a:	f8 94       	cli
     53c:	de bf       	out	0x3e, r29	; 62
     53e:	0f be       	out	0x3f, r0	; 63
     540:	cd bf       	out	0x3d, r28	; 61
	char str[16];
	sprintf(str,"%li",number);
     542:	9f 93       	push	r25
     544:	8f 93       	push	r24
     546:	7f 93       	push	r23
     548:	6f 93       	push	r22
     54a:	80 e7       	ldi	r24, 0x70	; 112
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	9f 93       	push	r25
     550:	8f 93       	push	r24
     552:	8e 01       	movw	r16, r28
     554:	0f 5f       	subi	r16, 0xFF	; 255
     556:	1f 4f       	sbci	r17, 0xFF	; 255
     558:	1f 93       	push	r17
     55a:	0f 93       	push	r16
     55c:	0e 94 81 06 	call	0xd02	; 0xd02 <sprintf>
	LCD_WRITE_STRING(str);
     560:	c8 01       	movw	r24, r16
     562:	0e 94 86 02 	call	0x50c	; 0x50c <LCD_WRITE_STRING>
}
     566:	0f b6       	in	r0, 0x3f	; 63
     568:	f8 94       	cli
     56a:	de bf       	out	0x3e, r29	; 62
     56c:	0f be       	out	0x3f, r0	; 63
     56e:	cd bf       	out	0x3d, r28	; 61
     570:	60 96       	adiw	r28, 0x10	; 16
     572:	0f b6       	in	r0, 0x3f	; 63
     574:	f8 94       	cli
     576:	de bf       	out	0x3e, r29	; 62
     578:	0f be       	out	0x3f, r0	; 63
     57a:	cd bf       	out	0x3d, r28	; 61
     57c:	df 91       	pop	r29
     57e:	cf 91       	pop	r28
     580:	1f 91       	pop	r17
     582:	0f 91       	pop	r16
     584:	08 95       	ret

00000586 <dipaly_real_number>:

void dipaly_real_number(float number)
{
     586:	8f 92       	push	r8
     588:	9f 92       	push	r9
     58a:	af 92       	push	r10
     58c:	bf 92       	push	r11
     58e:	cf 92       	push	r12
     590:	df 92       	push	r13
     592:	ef 92       	push	r14
     594:	ff 92       	push	r15
     596:	0f 93       	push	r16
     598:	1f 93       	push	r17
     59a:	cf 93       	push	r28
     59c:	df 93       	push	r29
     59e:	cd b7       	in	r28, 0x3d	; 61
     5a0:	de b7       	in	r29, 0x3e	; 62
     5a2:	60 97       	sbiw	r28, 0x10	; 16
     5a4:	0f b6       	in	r0, 0x3f	; 63
     5a6:	f8 94       	cli
     5a8:	de bf       	out	0x3e, r29	; 62
     5aa:	0f be       	out	0x3f, r0	; 63
     5ac:	cd bf       	out	0x3d, r28	; 61
     5ae:	6b 01       	movw	r12, r22
     5b0:	7c 01       	movw	r14, r24
	char strr[16];
	
	char *tmpsign = (number < 0) ? "-" : "";
     5b2:	20 e0       	ldi	r18, 0x00	; 0
     5b4:	30 e0       	ldi	r19, 0x00	; 0
     5b6:	a9 01       	movw	r20, r18
     5b8:	0e 94 4b 04 	call	0x896	; 0x896 <__cmpsf2>
     5bc:	88 23       	and	r24, r24
     5be:	64 f0       	brlt	.+24     	; 0x5d8 <dipaly_real_number+0x52>
	float tmpval = (number < 0) ? -number : number;
     5c0:	20 e0       	ldi	r18, 0x00	; 0
     5c2:	30 e0       	ldi	r19, 0x00	; 0
     5c4:	a9 01       	movw	r20, r18
     5c6:	c7 01       	movw	r24, r14
     5c8:	b6 01       	movw	r22, r12
     5ca:	0e 94 4b 04 	call	0x896	; 0x896 <__cmpsf2>
     5ce:	88 23       	and	r24, r24
     5d0:	54 f4       	brge	.+20     	; 0x5e6 <dipaly_real_number+0x60>

void dipaly_real_number(float number)
{
	char strr[16];
	
	char *tmpsign = (number < 0) ? "-" : "";
     5d2:	05 e7       	ldi	r16, 0x75	; 117
     5d4:	10 e0       	ldi	r17, 0x00	; 0
     5d6:	02 c0       	rjmp	.+4      	; 0x5dc <dipaly_real_number+0x56>
     5d8:	04 e7       	ldi	r16, 0x74	; 116
     5da:	10 e0       	ldi	r17, 0x00	; 0
	float tmpval = (number < 0) ? -number : number;
     5dc:	f7 fa       	bst	r15, 7
     5de:	f0 94       	com	r15
     5e0:	f7 f8       	bld	r15, 7
     5e2:	f0 94       	com	r15
     5e4:	02 c0       	rjmp	.+4      	; 0x5ea <dipaly_real_number+0x64>

void dipaly_real_number(float number)
{
	char strr[16];
	
	char *tmpsign = (number < 0) ? "-" : "";
     5e6:	05 e7       	ldi	r16, 0x75	; 117
     5e8:	10 e0       	ldi	r17, 0x00	; 0
	float tmpval = (number < 0) ? -number : number;
	
	int tmpint1 = tmpval;
     5ea:	c7 01       	movw	r24, r14
     5ec:	b6 01       	movw	r22, r12
     5ee:	0e 94 c2 04 	call	0x984	; 0x984 <__fixsfsi>
     5f2:	4b 01       	movw	r8, r22
     5f4:	5c 01       	movw	r10, r24
	float tmpfrac = tmpval - tmpint1;
	int tmpint2 = tmpfrac * 1000;
		
	sprintf(strr,"%s%d.%03d",tmpsign,tmpint1,tmpint2);
     5f6:	07 2e       	mov	r0, r23
     5f8:	00 0c       	add	r0, r0
     5fa:	88 0b       	sbc	r24, r24
     5fc:	99 0b       	sbc	r25, r25
     5fe:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__floatsisf>
     602:	9b 01       	movw	r18, r22
     604:	ac 01       	movw	r20, r24
     606:	c7 01       	movw	r24, r14
     608:	b6 01       	movw	r22, r12
     60a:	0e 94 de 03 	call	0x7bc	; 0x7bc <__subsf3>
     60e:	20 e0       	ldi	r18, 0x00	; 0
     610:	30 e0       	ldi	r19, 0x00	; 0
     612:	4a e7       	ldi	r20, 0x7A	; 122
     614:	54 e4       	ldi	r21, 0x44	; 68
     616:	0e 94 aa 05 	call	0xb54	; 0xb54 <__mulsf3>
     61a:	0e 94 c2 04 	call	0x984	; 0x984 <__fixsfsi>
     61e:	7f 93       	push	r23
     620:	6f 93       	push	r22
     622:	9f 92       	push	r9
     624:	8f 92       	push	r8
     626:	1f 93       	push	r17
     628:	0f 93       	push	r16
     62a:	86 e7       	ldi	r24, 0x76	; 118
     62c:	90 e0       	ldi	r25, 0x00	; 0
     62e:	9f 93       	push	r25
     630:	8f 93       	push	r24
     632:	8e 01       	movw	r16, r28
     634:	0f 5f       	subi	r16, 0xFF	; 255
     636:	1f 4f       	sbci	r17, 0xFF	; 255
     638:	1f 93       	push	r17
     63a:	0f 93       	push	r16
     63c:	0e 94 81 06 	call	0xd02	; 0xd02 <sprintf>
	
	LCD_WRITE_STRING(strr);
     640:	c8 01       	movw	r24, r16
     642:	0e 94 86 02 	call	0x50c	; 0x50c <LCD_WRITE_STRING>
     646:	0f b6       	in	r0, 0x3f	; 63
     648:	f8 94       	cli
     64a:	de bf       	out	0x3e, r29	; 62
     64c:	0f be       	out	0x3f, r0	; 63
     64e:	cd bf       	out	0x3d, r28	; 61
     650:	60 96       	adiw	r28, 0x10	; 16
     652:	0f b6       	in	r0, 0x3f	; 63
     654:	f8 94       	cli
     656:	de bf       	out	0x3e, r29	; 62
     658:	0f be       	out	0x3f, r0	; 63
     65a:	cd bf       	out	0x3d, r28	; 61
     65c:	df 91       	pop	r29
     65e:	cf 91       	pop	r28
     660:	1f 91       	pop	r17
     662:	0f 91       	pop	r16
     664:	ff 90       	pop	r15
     666:	ef 90       	pop	r14
     668:	df 90       	pop	r13
     66a:	cf 90       	pop	r12
     66c:	bf 90       	pop	r11
     66e:	af 90       	pop	r10
     670:	9f 90       	pop	r9
     672:	8f 90       	pop	r8
     674:	08 95       	ret

00000676 <reset>:

char op1[16] = {};
char op2[16] = {};
char op = '\0';

void reset() {
     676:	e3 e9       	ldi	r30, 0x93	; 147
     678:	f0 e0       	ldi	r31, 0x00	; 0
     67a:	a3 e8       	ldi	r26, 0x83	; 131
     67c:	b0 e0       	ldi	r27, 0x00	; 0
     67e:	83 ea       	ldi	r24, 0xA3	; 163
     680:	90 e0       	ldi	r25, 0x00	; 0
	
	for (int i = 0 ; i < 16 ; i++){
		op1[i] = '\0';
     682:	11 92       	st	Z+, r1
		op2[i] = '\0';
     684:	1d 92       	st	X+, r1
char op2[16] = {};
char op = '\0';

void reset() {
	
	for (int i = 0 ; i < 16 ; i++){
     686:	e8 17       	cp	r30, r24
     688:	f9 07       	cpc	r31, r25
     68a:	d9 f7       	brne	.-10     	; 0x682 <reset+0xc>
		op1[i] = '\0';
		op2[i] = '\0';
	}
	
}
     68c:	08 95       	ret

0000068e <main>:
int main()
{
	int flag = 0;
	int count = 0;
	
	LCD_INIT();
     68e:	0e 94 28 02 	call	0x450	; 0x450 <LCD_INIT>
	Keypad_init();
     692:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <Keypad_init>
     696:	83 ed       	ldi	r24, 0xD3	; 211
     698:	90 e3       	ldi	r25, 0x30	; 48
     69a:	01 97       	sbiw	r24, 0x01	; 1
     69c:	f1 f7       	brne	.-4      	; 0x69a <main+0xc>
     69e:	00 c0       	rjmp	.+0      	; 0x6a0 <main+0x12>
     6a0:	00 00       	nop
}

int main()
{
	int flag = 0;
	int count = 0;
     6a2:	e1 2c       	mov	r14, r1
     6a4:	f1 2c       	mov	r15, r1
	
}

int main()
{
	int flag = 0;
     6a6:	00 e0       	ldi	r16, 0x00	; 0
     6a8:	10 e0       	ldi	r17, 0x00	; 0
			case '?':
				LCD_clear_screen();
				reset();
				op = '\0';
				count = 0;
				flag = 0;
     6aa:	d1 2c       	mov	r13, r1
     6ac:	d0 e0       	ldi	r29, 0x00	; 0
				break;
			default:
				LCD_WRITE_CHAR(key_pressed);
				if (key_pressed == '+' || key_pressed == '-'  || key_pressed == '*' || key_pressed =='/') {
					flag = 1;
     6ae:	bb 24       	eor	r11, r11
     6b0:	b3 94       	inc	r11
     6b2:	c1 2c       	mov	r12, r1
	LCD_INIT();
	Keypad_init();
	_delay_ms(50);
	unsigned char key_pressed;
	while(1){
		key_pressed = Keypad_getkey();
     6b4:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <Keypad_getkey>
     6b8:	c8 2f       	mov	r28, r24
		switch(key_pressed){
     6ba:	8f 33       	cpi	r24, 0x3F	; 63
     6bc:	19 f0       	breq	.+6      	; 0x6c4 <main+0x36>
     6be:	81 34       	cpi	r24, 0x41	; 65
     6c0:	c9 f3       	breq	.-14     	; 0x6b4 <main+0x26>
     6c2:	0b c0       	rjmp	.+22     	; 0x6da <main+0x4c>
			case 'A':
				break;
			case '?':
				LCD_clear_screen();
     6c4:	0e 94 08 02 	call	0x410	; 0x410 <LCD_clear_screen>
				reset();
     6c8:	0e 94 3b 03 	call	0x676	; 0x676 <reset>
				op = '\0';
     6cc:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <op>
				count = 0;
     6d0:	e1 2c       	mov	r14, r1
     6d2:	f1 2c       	mov	r15, r1
				flag = 0;
     6d4:	0d 2d       	mov	r16, r13
     6d6:	1d 2f       	mov	r17, r29
				break;
     6d8:	ed cf       	rjmp	.-38     	; 0x6b4 <main+0x26>
			default:
				LCD_WRITE_CHAR(key_pressed);
     6da:	0e 94 67 02 	call	0x4ce	; 0x4ce <LCD_WRITE_CHAR>
				if (key_pressed == '+' || key_pressed == '-'  || key_pressed == '*' || key_pressed =='/') {
     6de:	8c 2f       	mov	r24, r28
     6e0:	8d 7f       	andi	r24, 0xFD	; 253
     6e2:	8d 32       	cpi	r24, 0x2D	; 45
     6e4:	21 f0       	breq	.+8      	; 0x6ee <main+0x60>
     6e6:	86 ed       	ldi	r24, 0xD6	; 214
     6e8:	8c 0f       	add	r24, r28
     6ea:	82 30       	cpi	r24, 0x02	; 2
     6ec:	38 f4       	brcc	.+14     	; 0x6fc <main+0x6e>
					flag = 1;
					op = key_pressed;
     6ee:	c0 93 82 00 	sts	0x0082, r28	; 0x800082 <op>
					count = 0;
     6f2:	e1 2c       	mov	r14, r1
     6f4:	f1 2c       	mov	r15, r1
				flag = 0;
				break;
			default:
				LCD_WRITE_CHAR(key_pressed);
				if (key_pressed == '+' || key_pressed == '-'  || key_pressed == '*' || key_pressed =='/') {
					flag = 1;
     6f6:	0b 2d       	mov	r16, r11
     6f8:	1c 2d       	mov	r17, r12
					op = key_pressed;
					count = 0;
     6fa:	18 c0       	rjmp	.+48     	; 0x72c <main+0x9e>
				}				
				else if(flag == 0){
     6fc:	01 15       	cp	r16, r1
     6fe:	11 05       	cpc	r17, r1
     700:	41 f4       	brne	.+16     	; 0x712 <main+0x84>
					op1[count] = key_pressed;
     702:	f7 01       	movw	r30, r14
     704:	ed 56       	subi	r30, 0x6D	; 109
     706:	ff 4f       	sbci	r31, 0xFF	; 255
     708:	c0 83       	st	Z, r28
					count++;
     70a:	9f ef       	ldi	r25, 0xFF	; 255
     70c:	e9 1a       	sub	r14, r25
     70e:	f9 0a       	sbc	r15, r25
     710:	0d c0       	rjmp	.+26     	; 0x72c <main+0x9e>
				}
				else if(flag == 1 && (key_pressed != '=')){
     712:	01 30       	cpi	r16, 0x01	; 1
     714:	11 05       	cpc	r17, r1
     716:	51 f4       	brne	.+20     	; 0x72c <main+0x9e>
     718:	cd 33       	cpi	r28, 0x3D	; 61
     71a:	51 f0       	breq	.+20     	; 0x730 <main+0xa2>
					op2[count] = key_pressed;
     71c:	f7 01       	movw	r30, r14
     71e:	ed 57       	subi	r30, 0x7D	; 125
     720:	ff 4f       	sbci	r31, 0xFF	; 255
     722:	c0 83       	st	Z, r28
					count++;
     724:	8f ef       	ldi	r24, 0xFF	; 255
     726:	e8 1a       	sub	r14, r24
     728:	f8 0a       	sbc	r15, r24
     72a:	c4 cf       	rjmp	.-120    	; 0x6b4 <main+0x26>
				}
				if ((key_pressed == '=') && (op == '+') ){
     72c:	cd 33       	cpi	r28, 0x3D	; 61
     72e:	11 f6       	brne	.-124    	; 0x6b4 <main+0x26>
     730:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <op>
     734:	8b 32       	cpi	r24, 0x2B	; 43
     736:	69 f4       	brne	.+26     	; 0x752 <main+0xc4>
					sum(op1,op2);
     738:	63 e8       	ldi	r22, 0x83	; 131
     73a:	70 e0       	ldi	r23, 0x00	; 0
     73c:	83 e9       	ldi	r24, 0x93	; 147
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	0e 94 67 00 	call	0xce	; 0xce <sum>
					op = '\0';
     744:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <op>
					count = 0;
     748:	e1 2c       	mov	r14, r1
     74a:	f1 2c       	mov	r15, r1
					flag = 0;
     74c:	0d 2d       	mov	r16, r13
     74e:	1d 2f       	mov	r17, r29
     750:	2b c0       	rjmp	.+86     	; 0x7a8 <main+0x11a>
				}
				if ((key_pressed == '=') && (op == '-') ){
     752:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <op>
     756:	8d 32       	cpi	r24, 0x2D	; 45
     758:	39 f5       	brne	.+78     	; 0x7a8 <main+0x11a>
					subtract(op1,op2);
     75a:	63 e8       	ldi	r22, 0x83	; 131
     75c:	70 e0       	ldi	r23, 0x00	; 0
     75e:	83 e9       	ldi	r24, 0x93	; 147
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	0e 94 88 00 	call	0x110	; 0x110 <subtract>
					op = '\0';
     766:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <op>
					count = 0;
     76a:	e1 2c       	mov	r14, r1
     76c:	f1 2c       	mov	r15, r1
					flag = 0;
     76e:	0d 2d       	mov	r16, r13
     770:	1d 2f       	mov	r17, r29
     772:	1e c0       	rjmp	.+60     	; 0x7b0 <main+0x122>
				}
				if ((key_pressed == '=') && (op == '*') ){
					multiplay(op1,op2);
     774:	63 e8       	ldi	r22, 0x83	; 131
     776:	70 e0       	ldi	r23, 0x00	; 0
     778:	83 e9       	ldi	r24, 0x93	; 147
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	0e 94 ad 00 	call	0x15a	; 0x15a <multiplay>
					op = '\0';
     780:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <op>
					count = 0;
     784:	e1 2c       	mov	r14, r1
     786:	f1 2c       	mov	r15, r1
					flag = 0;
     788:	0d 2d       	mov	r16, r13
     78a:	1d 2f       	mov	r17, r29
     78c:	93 cf       	rjmp	.-218    	; 0x6b4 <main+0x26>
				}
				if ((key_pressed == '=') && (op == '/') ){
					divide(op1,op2);
     78e:	63 e8       	ldi	r22, 0x83	; 131
     790:	70 e0       	ldi	r23, 0x00	; 0
     792:	83 e9       	ldi	r24, 0x93	; 147
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	0e 94 ce 00 	call	0x19c	; 0x19c <divide>
					op = '\0';
     79a:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <op>
					count = 0;
     79e:	e1 2c       	mov	r14, r1
     7a0:	f1 2c       	mov	r15, r1
					flag = 0;
     7a2:	0d 2d       	mov	r16, r13
     7a4:	1d 2f       	mov	r17, r29
     7a6:	86 cf       	rjmp	.-244    	; 0x6b4 <main+0x26>
					subtract(op1,op2);
					op = '\0';
					count = 0;
					flag = 0;
				}
				if ((key_pressed == '=') && (op == '*') ){
     7a8:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <op>
     7ac:	8a 32       	cpi	r24, 0x2A	; 42
     7ae:	11 f3       	breq	.-60     	; 0x774 <main+0xe6>
					multiplay(op1,op2);
					op = '\0';
					count = 0;
					flag = 0;
				}
				if ((key_pressed == '=') && (op == '/') ){
     7b0:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <op>
     7b4:	8f 32       	cpi	r24, 0x2F	; 47
     7b6:	09 f0       	breq	.+2      	; 0x7ba <main+0x12c>
     7b8:	7d cf       	rjmp	.-262    	; 0x6b4 <main+0x26>
     7ba:	e9 cf       	rjmp	.-46     	; 0x78e <main+0x100>

000007bc <__subsf3>:
     7bc:	50 58       	subi	r21, 0x80	; 128

000007be <__addsf3>:
     7be:	bb 27       	eor	r27, r27
     7c0:	aa 27       	eor	r26, r26
     7c2:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__addsf3x>
     7c6:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_round>
     7ca:	0e 94 62 05 	call	0xac4	; 0xac4 <__fp_pscA>
     7ce:	38 f0       	brcs	.+14     	; 0x7de <__addsf3+0x20>
     7d0:	0e 94 69 05 	call	0xad2	; 0xad2 <__fp_pscB>
     7d4:	20 f0       	brcs	.+8      	; 0x7de <__addsf3+0x20>
     7d6:	39 f4       	brne	.+14     	; 0x7e6 <__addsf3+0x28>
     7d8:	9f 3f       	cpi	r25, 0xFF	; 255
     7da:	19 f4       	brne	.+6      	; 0x7e2 <__addsf3+0x24>
     7dc:	26 f4       	brtc	.+8      	; 0x7e6 <__addsf3+0x28>
     7de:	0c 94 5f 05 	jmp	0xabe	; 0xabe <__fp_nan>
     7e2:	0e f4       	brtc	.+2      	; 0x7e6 <__addsf3+0x28>
     7e4:	e0 95       	com	r30
     7e6:	e7 fb       	bst	r30, 7
     7e8:	0c 94 59 05 	jmp	0xab2	; 0xab2 <__fp_inf>

000007ec <__addsf3x>:
     7ec:	e9 2f       	mov	r30, r25
     7ee:	0e 94 81 05 	call	0xb02	; 0xb02 <__fp_split3>
     7f2:	58 f3       	brcs	.-42     	; 0x7ca <__addsf3+0xc>
     7f4:	ba 17       	cp	r27, r26
     7f6:	62 07       	cpc	r22, r18
     7f8:	73 07       	cpc	r23, r19
     7fa:	84 07       	cpc	r24, r20
     7fc:	95 07       	cpc	r25, r21
     7fe:	20 f0       	brcs	.+8      	; 0x808 <__addsf3x+0x1c>
     800:	79 f4       	brne	.+30     	; 0x820 <__addsf3x+0x34>
     802:	a6 f5       	brtc	.+104    	; 0x86c <__stack+0xd>
     804:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__fp_zero>
     808:	0e f4       	brtc	.+2      	; 0x80c <__addsf3x+0x20>
     80a:	e0 95       	com	r30
     80c:	0b 2e       	mov	r0, r27
     80e:	ba 2f       	mov	r27, r26
     810:	a0 2d       	mov	r26, r0
     812:	0b 01       	movw	r0, r22
     814:	b9 01       	movw	r22, r18
     816:	90 01       	movw	r18, r0
     818:	0c 01       	movw	r0, r24
     81a:	ca 01       	movw	r24, r20
     81c:	a0 01       	movw	r20, r0
     81e:	11 24       	eor	r1, r1
     820:	ff 27       	eor	r31, r31
     822:	59 1b       	sub	r21, r25
     824:	99 f0       	breq	.+38     	; 0x84c <__addsf3x+0x60>
     826:	59 3f       	cpi	r21, 0xF9	; 249
     828:	50 f4       	brcc	.+20     	; 0x83e <__addsf3x+0x52>
     82a:	50 3e       	cpi	r21, 0xE0	; 224
     82c:	68 f1       	brcs	.+90     	; 0x888 <__stack+0x29>
     82e:	1a 16       	cp	r1, r26
     830:	f0 40       	sbci	r31, 0x00	; 0
     832:	a2 2f       	mov	r26, r18
     834:	23 2f       	mov	r18, r19
     836:	34 2f       	mov	r19, r20
     838:	44 27       	eor	r20, r20
     83a:	58 5f       	subi	r21, 0xF8	; 248
     83c:	f3 cf       	rjmp	.-26     	; 0x824 <__addsf3x+0x38>
     83e:	46 95       	lsr	r20
     840:	37 95       	ror	r19
     842:	27 95       	ror	r18
     844:	a7 95       	ror	r26
     846:	f0 40       	sbci	r31, 0x00	; 0
     848:	53 95       	inc	r21
     84a:	c9 f7       	brne	.-14     	; 0x83e <__addsf3x+0x52>
     84c:	7e f4       	brtc	.+30     	; 0x86c <__stack+0xd>
     84e:	1f 16       	cp	r1, r31
     850:	ba 0b       	sbc	r27, r26
     852:	62 0b       	sbc	r22, r18
     854:	73 0b       	sbc	r23, r19
     856:	84 0b       	sbc	r24, r20
     858:	ba f0       	brmi	.+46     	; 0x888 <__stack+0x29>
     85a:	91 50       	subi	r25, 0x01	; 1
     85c:	a1 f0       	breq	.+40     	; 0x886 <__stack+0x27>
     85e:	ff 0f       	add	r31, r31
     860:	bb 1f       	adc	r27, r27
     862:	66 1f       	adc	r22, r22
     864:	77 1f       	adc	r23, r23
     866:	88 1f       	adc	r24, r24
     868:	c2 f7       	brpl	.-16     	; 0x85a <__addsf3x+0x6e>
     86a:	0e c0       	rjmp	.+28     	; 0x888 <__stack+0x29>
     86c:	ba 0f       	add	r27, r26
     86e:	62 1f       	adc	r22, r18
     870:	73 1f       	adc	r23, r19
     872:	84 1f       	adc	r24, r20
     874:	48 f4       	brcc	.+18     	; 0x888 <__stack+0x29>
     876:	87 95       	ror	r24
     878:	77 95       	ror	r23
     87a:	67 95       	ror	r22
     87c:	b7 95       	ror	r27
     87e:	f7 95       	ror	r31
     880:	9e 3f       	cpi	r25, 0xFE	; 254
     882:	08 f0       	brcs	.+2      	; 0x886 <__stack+0x27>
     884:	b0 cf       	rjmp	.-160    	; 0x7e6 <__addsf3+0x28>
     886:	93 95       	inc	r25
     888:	88 0f       	add	r24, r24
     88a:	08 f0       	brcs	.+2      	; 0x88e <__stack+0x2f>
     88c:	99 27       	eor	r25, r25
     88e:	ee 0f       	add	r30, r30
     890:	97 95       	ror	r25
     892:	87 95       	ror	r24
     894:	08 95       	ret

00000896 <__cmpsf2>:
     896:	0e 94 35 05 	call	0xa6a	; 0xa6a <__fp_cmp>
     89a:	08 f4       	brcc	.+2      	; 0x89e <__cmpsf2+0x8>
     89c:	81 e0       	ldi	r24, 0x01	; 1
     89e:	08 95       	ret

000008a0 <__divsf3>:
     8a0:	0e 94 64 04 	call	0x8c8	; 0x8c8 <__divsf3x>
     8a4:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_round>
     8a8:	0e 94 69 05 	call	0xad2	; 0xad2 <__fp_pscB>
     8ac:	58 f0       	brcs	.+22     	; 0x8c4 <__divsf3+0x24>
     8ae:	0e 94 62 05 	call	0xac4	; 0xac4 <__fp_pscA>
     8b2:	40 f0       	brcs	.+16     	; 0x8c4 <__divsf3+0x24>
     8b4:	29 f4       	brne	.+10     	; 0x8c0 <__divsf3+0x20>
     8b6:	5f 3f       	cpi	r21, 0xFF	; 255
     8b8:	29 f0       	breq	.+10     	; 0x8c4 <__divsf3+0x24>
     8ba:	0c 94 59 05 	jmp	0xab2	; 0xab2 <__fp_inf>
     8be:	51 11       	cpse	r21, r1
     8c0:	0c 94 a4 05 	jmp	0xb48	; 0xb48 <__fp_szero>
     8c4:	0c 94 5f 05 	jmp	0xabe	; 0xabe <__fp_nan>

000008c8 <__divsf3x>:
     8c8:	0e 94 81 05 	call	0xb02	; 0xb02 <__fp_split3>
     8cc:	68 f3       	brcs	.-38     	; 0x8a8 <__divsf3+0x8>

000008ce <__divsf3_pse>:
     8ce:	99 23       	and	r25, r25
     8d0:	b1 f3       	breq	.-20     	; 0x8be <__divsf3+0x1e>
     8d2:	55 23       	and	r21, r21
     8d4:	91 f3       	breq	.-28     	; 0x8ba <__divsf3+0x1a>
     8d6:	95 1b       	sub	r25, r21
     8d8:	55 0b       	sbc	r21, r21
     8da:	bb 27       	eor	r27, r27
     8dc:	aa 27       	eor	r26, r26
     8de:	62 17       	cp	r22, r18
     8e0:	73 07       	cpc	r23, r19
     8e2:	84 07       	cpc	r24, r20
     8e4:	38 f0       	brcs	.+14     	; 0x8f4 <__divsf3_pse+0x26>
     8e6:	9f 5f       	subi	r25, 0xFF	; 255
     8e8:	5f 4f       	sbci	r21, 0xFF	; 255
     8ea:	22 0f       	add	r18, r18
     8ec:	33 1f       	adc	r19, r19
     8ee:	44 1f       	adc	r20, r20
     8f0:	aa 1f       	adc	r26, r26
     8f2:	a9 f3       	breq	.-22     	; 0x8de <__divsf3_pse+0x10>
     8f4:	35 d0       	rcall	.+106    	; 0x960 <__divsf3_pse+0x92>
     8f6:	0e 2e       	mov	r0, r30
     8f8:	3a f0       	brmi	.+14     	; 0x908 <__divsf3_pse+0x3a>
     8fa:	e0 e8       	ldi	r30, 0x80	; 128
     8fc:	32 d0       	rcall	.+100    	; 0x962 <__divsf3_pse+0x94>
     8fe:	91 50       	subi	r25, 0x01	; 1
     900:	50 40       	sbci	r21, 0x00	; 0
     902:	e6 95       	lsr	r30
     904:	00 1c       	adc	r0, r0
     906:	ca f7       	brpl	.-14     	; 0x8fa <__divsf3_pse+0x2c>
     908:	2b d0       	rcall	.+86     	; 0x960 <__divsf3_pse+0x92>
     90a:	fe 2f       	mov	r31, r30
     90c:	29 d0       	rcall	.+82     	; 0x960 <__divsf3_pse+0x92>
     90e:	66 0f       	add	r22, r22
     910:	77 1f       	adc	r23, r23
     912:	88 1f       	adc	r24, r24
     914:	bb 1f       	adc	r27, r27
     916:	26 17       	cp	r18, r22
     918:	37 07       	cpc	r19, r23
     91a:	48 07       	cpc	r20, r24
     91c:	ab 07       	cpc	r26, r27
     91e:	b0 e8       	ldi	r27, 0x80	; 128
     920:	09 f0       	breq	.+2      	; 0x924 <__divsf3_pse+0x56>
     922:	bb 0b       	sbc	r27, r27
     924:	80 2d       	mov	r24, r0
     926:	bf 01       	movw	r22, r30
     928:	ff 27       	eor	r31, r31
     92a:	93 58       	subi	r25, 0x83	; 131
     92c:	5f 4f       	sbci	r21, 0xFF	; 255
     92e:	3a f0       	brmi	.+14     	; 0x93e <__divsf3_pse+0x70>
     930:	9e 3f       	cpi	r25, 0xFE	; 254
     932:	51 05       	cpc	r21, r1
     934:	78 f0       	brcs	.+30     	; 0x954 <__divsf3_pse+0x86>
     936:	0c 94 59 05 	jmp	0xab2	; 0xab2 <__fp_inf>
     93a:	0c 94 a4 05 	jmp	0xb48	; 0xb48 <__fp_szero>
     93e:	5f 3f       	cpi	r21, 0xFF	; 255
     940:	e4 f3       	brlt	.-8      	; 0x93a <__divsf3_pse+0x6c>
     942:	98 3e       	cpi	r25, 0xE8	; 232
     944:	d4 f3       	brlt	.-12     	; 0x93a <__divsf3_pse+0x6c>
     946:	86 95       	lsr	r24
     948:	77 95       	ror	r23
     94a:	67 95       	ror	r22
     94c:	b7 95       	ror	r27
     94e:	f7 95       	ror	r31
     950:	9f 5f       	subi	r25, 0xFF	; 255
     952:	c9 f7       	brne	.-14     	; 0x946 <__divsf3_pse+0x78>
     954:	88 0f       	add	r24, r24
     956:	91 1d       	adc	r25, r1
     958:	96 95       	lsr	r25
     95a:	87 95       	ror	r24
     95c:	97 f9       	bld	r25, 7
     95e:	08 95       	ret
     960:	e1 e0       	ldi	r30, 0x01	; 1
     962:	66 0f       	add	r22, r22
     964:	77 1f       	adc	r23, r23
     966:	88 1f       	adc	r24, r24
     968:	bb 1f       	adc	r27, r27
     96a:	62 17       	cp	r22, r18
     96c:	73 07       	cpc	r23, r19
     96e:	84 07       	cpc	r24, r20
     970:	ba 07       	cpc	r27, r26
     972:	20 f0       	brcs	.+8      	; 0x97c <__divsf3_pse+0xae>
     974:	62 1b       	sub	r22, r18
     976:	73 0b       	sbc	r23, r19
     978:	84 0b       	sbc	r24, r20
     97a:	ba 0b       	sbc	r27, r26
     97c:	ee 1f       	adc	r30, r30
     97e:	88 f7       	brcc	.-30     	; 0x962 <__divsf3_pse+0x94>
     980:	e0 95       	com	r30
     982:	08 95       	ret

00000984 <__fixsfsi>:
     984:	0e 94 c9 04 	call	0x992	; 0x992 <__fixunssfsi>
     988:	68 94       	set
     98a:	b1 11       	cpse	r27, r1
     98c:	0c 94 a4 05 	jmp	0xb48	; 0xb48 <__fp_szero>
     990:	08 95       	ret

00000992 <__fixunssfsi>:
     992:	0e 94 89 05 	call	0xb12	; 0xb12 <__fp_splitA>
     996:	88 f0       	brcs	.+34     	; 0x9ba <__fixunssfsi+0x28>
     998:	9f 57       	subi	r25, 0x7F	; 127
     99a:	98 f0       	brcs	.+38     	; 0x9c2 <__fixunssfsi+0x30>
     99c:	b9 2f       	mov	r27, r25
     99e:	99 27       	eor	r25, r25
     9a0:	b7 51       	subi	r27, 0x17	; 23
     9a2:	b0 f0       	brcs	.+44     	; 0x9d0 <__fixunssfsi+0x3e>
     9a4:	e1 f0       	breq	.+56     	; 0x9de <__fixunssfsi+0x4c>
     9a6:	66 0f       	add	r22, r22
     9a8:	77 1f       	adc	r23, r23
     9aa:	88 1f       	adc	r24, r24
     9ac:	99 1f       	adc	r25, r25
     9ae:	1a f0       	brmi	.+6      	; 0x9b6 <__fixunssfsi+0x24>
     9b0:	ba 95       	dec	r27
     9b2:	c9 f7       	brne	.-14     	; 0x9a6 <__fixunssfsi+0x14>
     9b4:	14 c0       	rjmp	.+40     	; 0x9de <__fixunssfsi+0x4c>
     9b6:	b1 30       	cpi	r27, 0x01	; 1
     9b8:	91 f0       	breq	.+36     	; 0x9de <__fixunssfsi+0x4c>
     9ba:	0e 94 a3 05 	call	0xb46	; 0xb46 <__fp_zero>
     9be:	b1 e0       	ldi	r27, 0x01	; 1
     9c0:	08 95       	ret
     9c2:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__fp_zero>
     9c6:	67 2f       	mov	r22, r23
     9c8:	78 2f       	mov	r23, r24
     9ca:	88 27       	eor	r24, r24
     9cc:	b8 5f       	subi	r27, 0xF8	; 248
     9ce:	39 f0       	breq	.+14     	; 0x9de <__fixunssfsi+0x4c>
     9d0:	b9 3f       	cpi	r27, 0xF9	; 249
     9d2:	cc f3       	brlt	.-14     	; 0x9c6 <__fixunssfsi+0x34>
     9d4:	86 95       	lsr	r24
     9d6:	77 95       	ror	r23
     9d8:	67 95       	ror	r22
     9da:	b3 95       	inc	r27
     9dc:	d9 f7       	brne	.-10     	; 0x9d4 <__fixunssfsi+0x42>
     9de:	3e f4       	brtc	.+14     	; 0x9ee <__fixunssfsi+0x5c>
     9e0:	90 95       	com	r25
     9e2:	80 95       	com	r24
     9e4:	70 95       	com	r23
     9e6:	61 95       	neg	r22
     9e8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ea:	8f 4f       	sbci	r24, 0xFF	; 255
     9ec:	9f 4f       	sbci	r25, 0xFF	; 255
     9ee:	08 95       	ret

000009f0 <__floatunsisf>:
     9f0:	e8 94       	clt
     9f2:	09 c0       	rjmp	.+18     	; 0xa06 <__floatsisf+0x12>

000009f4 <__floatsisf>:
     9f4:	97 fb       	bst	r25, 7
     9f6:	3e f4       	brtc	.+14     	; 0xa06 <__floatsisf+0x12>
     9f8:	90 95       	com	r25
     9fa:	80 95       	com	r24
     9fc:	70 95       	com	r23
     9fe:	61 95       	neg	r22
     a00:	7f 4f       	sbci	r23, 0xFF	; 255
     a02:	8f 4f       	sbci	r24, 0xFF	; 255
     a04:	9f 4f       	sbci	r25, 0xFF	; 255
     a06:	99 23       	and	r25, r25
     a08:	a9 f0       	breq	.+42     	; 0xa34 <__floatsisf+0x40>
     a0a:	f9 2f       	mov	r31, r25
     a0c:	96 e9       	ldi	r25, 0x96	; 150
     a0e:	bb 27       	eor	r27, r27
     a10:	93 95       	inc	r25
     a12:	f6 95       	lsr	r31
     a14:	87 95       	ror	r24
     a16:	77 95       	ror	r23
     a18:	67 95       	ror	r22
     a1a:	b7 95       	ror	r27
     a1c:	f1 11       	cpse	r31, r1
     a1e:	f8 cf       	rjmp	.-16     	; 0xa10 <__floatsisf+0x1c>
     a20:	fa f4       	brpl	.+62     	; 0xa60 <__floatsisf+0x6c>
     a22:	bb 0f       	add	r27, r27
     a24:	11 f4       	brne	.+4      	; 0xa2a <__floatsisf+0x36>
     a26:	60 ff       	sbrs	r22, 0
     a28:	1b c0       	rjmp	.+54     	; 0xa60 <__floatsisf+0x6c>
     a2a:	6f 5f       	subi	r22, 0xFF	; 255
     a2c:	7f 4f       	sbci	r23, 0xFF	; 255
     a2e:	8f 4f       	sbci	r24, 0xFF	; 255
     a30:	9f 4f       	sbci	r25, 0xFF	; 255
     a32:	16 c0       	rjmp	.+44     	; 0xa60 <__floatsisf+0x6c>
     a34:	88 23       	and	r24, r24
     a36:	11 f0       	breq	.+4      	; 0xa3c <__floatsisf+0x48>
     a38:	96 e9       	ldi	r25, 0x96	; 150
     a3a:	11 c0       	rjmp	.+34     	; 0xa5e <__floatsisf+0x6a>
     a3c:	77 23       	and	r23, r23
     a3e:	21 f0       	breq	.+8      	; 0xa48 <__floatsisf+0x54>
     a40:	9e e8       	ldi	r25, 0x8E	; 142
     a42:	87 2f       	mov	r24, r23
     a44:	76 2f       	mov	r23, r22
     a46:	05 c0       	rjmp	.+10     	; 0xa52 <__floatsisf+0x5e>
     a48:	66 23       	and	r22, r22
     a4a:	71 f0       	breq	.+28     	; 0xa68 <__floatsisf+0x74>
     a4c:	96 e8       	ldi	r25, 0x86	; 134
     a4e:	86 2f       	mov	r24, r22
     a50:	70 e0       	ldi	r23, 0x00	; 0
     a52:	60 e0       	ldi	r22, 0x00	; 0
     a54:	2a f0       	brmi	.+10     	; 0xa60 <__floatsisf+0x6c>
     a56:	9a 95       	dec	r25
     a58:	66 0f       	add	r22, r22
     a5a:	77 1f       	adc	r23, r23
     a5c:	88 1f       	adc	r24, r24
     a5e:	da f7       	brpl	.-10     	; 0xa56 <__floatsisf+0x62>
     a60:	88 0f       	add	r24, r24
     a62:	96 95       	lsr	r25
     a64:	87 95       	ror	r24
     a66:	97 f9       	bld	r25, 7
     a68:	08 95       	ret

00000a6a <__fp_cmp>:
     a6a:	99 0f       	add	r25, r25
     a6c:	00 08       	sbc	r0, r0
     a6e:	55 0f       	add	r21, r21
     a70:	aa 0b       	sbc	r26, r26
     a72:	e0 e8       	ldi	r30, 0x80	; 128
     a74:	fe ef       	ldi	r31, 0xFE	; 254
     a76:	16 16       	cp	r1, r22
     a78:	17 06       	cpc	r1, r23
     a7a:	e8 07       	cpc	r30, r24
     a7c:	f9 07       	cpc	r31, r25
     a7e:	c0 f0       	brcs	.+48     	; 0xab0 <__fp_cmp+0x46>
     a80:	12 16       	cp	r1, r18
     a82:	13 06       	cpc	r1, r19
     a84:	e4 07       	cpc	r30, r20
     a86:	f5 07       	cpc	r31, r21
     a88:	98 f0       	brcs	.+38     	; 0xab0 <__fp_cmp+0x46>
     a8a:	62 1b       	sub	r22, r18
     a8c:	73 0b       	sbc	r23, r19
     a8e:	84 0b       	sbc	r24, r20
     a90:	95 0b       	sbc	r25, r21
     a92:	39 f4       	brne	.+14     	; 0xaa2 <__fp_cmp+0x38>
     a94:	0a 26       	eor	r0, r26
     a96:	61 f0       	breq	.+24     	; 0xab0 <__fp_cmp+0x46>
     a98:	23 2b       	or	r18, r19
     a9a:	24 2b       	or	r18, r20
     a9c:	25 2b       	or	r18, r21
     a9e:	21 f4       	brne	.+8      	; 0xaa8 <__fp_cmp+0x3e>
     aa0:	08 95       	ret
     aa2:	0a 26       	eor	r0, r26
     aa4:	09 f4       	brne	.+2      	; 0xaa8 <__fp_cmp+0x3e>
     aa6:	a1 40       	sbci	r26, 0x01	; 1
     aa8:	a6 95       	lsr	r26
     aaa:	8f ef       	ldi	r24, 0xFF	; 255
     aac:	81 1d       	adc	r24, r1
     aae:	81 1d       	adc	r24, r1
     ab0:	08 95       	ret

00000ab2 <__fp_inf>:
     ab2:	97 f9       	bld	r25, 7
     ab4:	9f 67       	ori	r25, 0x7F	; 127
     ab6:	80 e8       	ldi	r24, 0x80	; 128
     ab8:	70 e0       	ldi	r23, 0x00	; 0
     aba:	60 e0       	ldi	r22, 0x00	; 0
     abc:	08 95       	ret

00000abe <__fp_nan>:
     abe:	9f ef       	ldi	r25, 0xFF	; 255
     ac0:	80 ec       	ldi	r24, 0xC0	; 192
     ac2:	08 95       	ret

00000ac4 <__fp_pscA>:
     ac4:	00 24       	eor	r0, r0
     ac6:	0a 94       	dec	r0
     ac8:	16 16       	cp	r1, r22
     aca:	17 06       	cpc	r1, r23
     acc:	18 06       	cpc	r1, r24
     ace:	09 06       	cpc	r0, r25
     ad0:	08 95       	ret

00000ad2 <__fp_pscB>:
     ad2:	00 24       	eor	r0, r0
     ad4:	0a 94       	dec	r0
     ad6:	12 16       	cp	r1, r18
     ad8:	13 06       	cpc	r1, r19
     ada:	14 06       	cpc	r1, r20
     adc:	05 06       	cpc	r0, r21
     ade:	08 95       	ret

00000ae0 <__fp_round>:
     ae0:	09 2e       	mov	r0, r25
     ae2:	03 94       	inc	r0
     ae4:	00 0c       	add	r0, r0
     ae6:	11 f4       	brne	.+4      	; 0xaec <__fp_round+0xc>
     ae8:	88 23       	and	r24, r24
     aea:	52 f0       	brmi	.+20     	; 0xb00 <__fp_round+0x20>
     aec:	bb 0f       	add	r27, r27
     aee:	40 f4       	brcc	.+16     	; 0xb00 <__fp_round+0x20>
     af0:	bf 2b       	or	r27, r31
     af2:	11 f4       	brne	.+4      	; 0xaf8 <__fp_round+0x18>
     af4:	60 ff       	sbrs	r22, 0
     af6:	04 c0       	rjmp	.+8      	; 0xb00 <__fp_round+0x20>
     af8:	6f 5f       	subi	r22, 0xFF	; 255
     afa:	7f 4f       	sbci	r23, 0xFF	; 255
     afc:	8f 4f       	sbci	r24, 0xFF	; 255
     afe:	9f 4f       	sbci	r25, 0xFF	; 255
     b00:	08 95       	ret

00000b02 <__fp_split3>:
     b02:	57 fd       	sbrc	r21, 7
     b04:	90 58       	subi	r25, 0x80	; 128
     b06:	44 0f       	add	r20, r20
     b08:	55 1f       	adc	r21, r21
     b0a:	59 f0       	breq	.+22     	; 0xb22 <__fp_splitA+0x10>
     b0c:	5f 3f       	cpi	r21, 0xFF	; 255
     b0e:	71 f0       	breq	.+28     	; 0xb2c <__fp_splitA+0x1a>
     b10:	47 95       	ror	r20

00000b12 <__fp_splitA>:
     b12:	88 0f       	add	r24, r24
     b14:	97 fb       	bst	r25, 7
     b16:	99 1f       	adc	r25, r25
     b18:	61 f0       	breq	.+24     	; 0xb32 <__fp_splitA+0x20>
     b1a:	9f 3f       	cpi	r25, 0xFF	; 255
     b1c:	79 f0       	breq	.+30     	; 0xb3c <__fp_splitA+0x2a>
     b1e:	87 95       	ror	r24
     b20:	08 95       	ret
     b22:	12 16       	cp	r1, r18
     b24:	13 06       	cpc	r1, r19
     b26:	14 06       	cpc	r1, r20
     b28:	55 1f       	adc	r21, r21
     b2a:	f2 cf       	rjmp	.-28     	; 0xb10 <__fp_split3+0xe>
     b2c:	46 95       	lsr	r20
     b2e:	f1 df       	rcall	.-30     	; 0xb12 <__fp_splitA>
     b30:	08 c0       	rjmp	.+16     	; 0xb42 <__fp_splitA+0x30>
     b32:	16 16       	cp	r1, r22
     b34:	17 06       	cpc	r1, r23
     b36:	18 06       	cpc	r1, r24
     b38:	99 1f       	adc	r25, r25
     b3a:	f1 cf       	rjmp	.-30     	; 0xb1e <__fp_splitA+0xc>
     b3c:	86 95       	lsr	r24
     b3e:	71 05       	cpc	r23, r1
     b40:	61 05       	cpc	r22, r1
     b42:	08 94       	sec
     b44:	08 95       	ret

00000b46 <__fp_zero>:
     b46:	e8 94       	clt

00000b48 <__fp_szero>:
     b48:	bb 27       	eor	r27, r27
     b4a:	66 27       	eor	r22, r22
     b4c:	77 27       	eor	r23, r23
     b4e:	cb 01       	movw	r24, r22
     b50:	97 f9       	bld	r25, 7
     b52:	08 95       	ret

00000b54 <__mulsf3>:
     b54:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__mulsf3x>
     b58:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_round>
     b5c:	0e 94 62 05 	call	0xac4	; 0xac4 <__fp_pscA>
     b60:	38 f0       	brcs	.+14     	; 0xb70 <__mulsf3+0x1c>
     b62:	0e 94 69 05 	call	0xad2	; 0xad2 <__fp_pscB>
     b66:	20 f0       	brcs	.+8      	; 0xb70 <__mulsf3+0x1c>
     b68:	95 23       	and	r25, r21
     b6a:	11 f0       	breq	.+4      	; 0xb70 <__mulsf3+0x1c>
     b6c:	0c 94 59 05 	jmp	0xab2	; 0xab2 <__fp_inf>
     b70:	0c 94 5f 05 	jmp	0xabe	; 0xabe <__fp_nan>
     b74:	11 24       	eor	r1, r1
     b76:	0c 94 a4 05 	jmp	0xb48	; 0xb48 <__fp_szero>

00000b7a <__mulsf3x>:
     b7a:	0e 94 81 05 	call	0xb02	; 0xb02 <__fp_split3>
     b7e:	70 f3       	brcs	.-36     	; 0xb5c <__mulsf3+0x8>

00000b80 <__mulsf3_pse>:
     b80:	95 9f       	mul	r25, r21
     b82:	c1 f3       	breq	.-16     	; 0xb74 <__mulsf3+0x20>
     b84:	95 0f       	add	r25, r21
     b86:	50 e0       	ldi	r21, 0x00	; 0
     b88:	55 1f       	adc	r21, r21
     b8a:	62 9f       	mul	r22, r18
     b8c:	f0 01       	movw	r30, r0
     b8e:	72 9f       	mul	r23, r18
     b90:	bb 27       	eor	r27, r27
     b92:	f0 0d       	add	r31, r0
     b94:	b1 1d       	adc	r27, r1
     b96:	63 9f       	mul	r22, r19
     b98:	aa 27       	eor	r26, r26
     b9a:	f0 0d       	add	r31, r0
     b9c:	b1 1d       	adc	r27, r1
     b9e:	aa 1f       	adc	r26, r26
     ba0:	64 9f       	mul	r22, r20
     ba2:	66 27       	eor	r22, r22
     ba4:	b0 0d       	add	r27, r0
     ba6:	a1 1d       	adc	r26, r1
     ba8:	66 1f       	adc	r22, r22
     baa:	82 9f       	mul	r24, r18
     bac:	22 27       	eor	r18, r18
     bae:	b0 0d       	add	r27, r0
     bb0:	a1 1d       	adc	r26, r1
     bb2:	62 1f       	adc	r22, r18
     bb4:	73 9f       	mul	r23, r19
     bb6:	b0 0d       	add	r27, r0
     bb8:	a1 1d       	adc	r26, r1
     bba:	62 1f       	adc	r22, r18
     bbc:	83 9f       	mul	r24, r19
     bbe:	a0 0d       	add	r26, r0
     bc0:	61 1d       	adc	r22, r1
     bc2:	22 1f       	adc	r18, r18
     bc4:	74 9f       	mul	r23, r20
     bc6:	33 27       	eor	r19, r19
     bc8:	a0 0d       	add	r26, r0
     bca:	61 1d       	adc	r22, r1
     bcc:	23 1f       	adc	r18, r19
     bce:	84 9f       	mul	r24, r20
     bd0:	60 0d       	add	r22, r0
     bd2:	21 1d       	adc	r18, r1
     bd4:	82 2f       	mov	r24, r18
     bd6:	76 2f       	mov	r23, r22
     bd8:	6a 2f       	mov	r22, r26
     bda:	11 24       	eor	r1, r1
     bdc:	9f 57       	subi	r25, 0x7F	; 127
     bde:	50 40       	sbci	r21, 0x00	; 0
     be0:	9a f0       	brmi	.+38     	; 0xc08 <__mulsf3_pse+0x88>
     be2:	f1 f0       	breq	.+60     	; 0xc20 <__mulsf3_pse+0xa0>
     be4:	88 23       	and	r24, r24
     be6:	4a f0       	brmi	.+18     	; 0xbfa <__mulsf3_pse+0x7a>
     be8:	ee 0f       	add	r30, r30
     bea:	ff 1f       	adc	r31, r31
     bec:	bb 1f       	adc	r27, r27
     bee:	66 1f       	adc	r22, r22
     bf0:	77 1f       	adc	r23, r23
     bf2:	88 1f       	adc	r24, r24
     bf4:	91 50       	subi	r25, 0x01	; 1
     bf6:	50 40       	sbci	r21, 0x00	; 0
     bf8:	a9 f7       	brne	.-22     	; 0xbe4 <__mulsf3_pse+0x64>
     bfa:	9e 3f       	cpi	r25, 0xFE	; 254
     bfc:	51 05       	cpc	r21, r1
     bfe:	80 f0       	brcs	.+32     	; 0xc20 <__mulsf3_pse+0xa0>
     c00:	0c 94 59 05 	jmp	0xab2	; 0xab2 <__fp_inf>
     c04:	0c 94 a4 05 	jmp	0xb48	; 0xb48 <__fp_szero>
     c08:	5f 3f       	cpi	r21, 0xFF	; 255
     c0a:	e4 f3       	brlt	.-8      	; 0xc04 <__mulsf3_pse+0x84>
     c0c:	98 3e       	cpi	r25, 0xE8	; 232
     c0e:	d4 f3       	brlt	.-12     	; 0xc04 <__mulsf3_pse+0x84>
     c10:	86 95       	lsr	r24
     c12:	77 95       	ror	r23
     c14:	67 95       	ror	r22
     c16:	b7 95       	ror	r27
     c18:	f7 95       	ror	r31
     c1a:	e7 95       	ror	r30
     c1c:	9f 5f       	subi	r25, 0xFF	; 255
     c1e:	c1 f7       	brne	.-16     	; 0xc10 <__mulsf3_pse+0x90>
     c20:	fe 2b       	or	r31, r30
     c22:	88 0f       	add	r24, r24
     c24:	91 1d       	adc	r25, r1
     c26:	96 95       	lsr	r25
     c28:	87 95       	ror	r24
     c2a:	97 f9       	bld	r25, 7
     c2c:	08 95       	ret

00000c2e <__mulsi3>:
     c2e:	db 01       	movw	r26, r22
     c30:	8f 93       	push	r24
     c32:	9f 93       	push	r25
     c34:	0e 94 27 06 	call	0xc4e	; 0xc4e <__muluhisi3>
     c38:	bf 91       	pop	r27
     c3a:	af 91       	pop	r26
     c3c:	a2 9f       	mul	r26, r18
     c3e:	80 0d       	add	r24, r0
     c40:	91 1d       	adc	r25, r1
     c42:	a3 9f       	mul	r26, r19
     c44:	90 0d       	add	r25, r0
     c46:	b2 9f       	mul	r27, r18
     c48:	90 0d       	add	r25, r0
     c4a:	11 24       	eor	r1, r1
     c4c:	08 95       	ret

00000c4e <__muluhisi3>:
     c4e:	0e 94 32 06 	call	0xc64	; 0xc64 <__umulhisi3>
     c52:	a5 9f       	mul	r26, r21
     c54:	90 0d       	add	r25, r0
     c56:	b4 9f       	mul	r27, r20
     c58:	90 0d       	add	r25, r0
     c5a:	a4 9f       	mul	r26, r20
     c5c:	80 0d       	add	r24, r0
     c5e:	91 1d       	adc	r25, r1
     c60:	11 24       	eor	r1, r1
     c62:	08 95       	ret

00000c64 <__umulhisi3>:
     c64:	a2 9f       	mul	r26, r18
     c66:	b0 01       	movw	r22, r0
     c68:	b3 9f       	mul	r27, r19
     c6a:	c0 01       	movw	r24, r0
     c6c:	a3 9f       	mul	r26, r19
     c6e:	70 0d       	add	r23, r0
     c70:	81 1d       	adc	r24, r1
     c72:	11 24       	eor	r1, r1
     c74:	91 1d       	adc	r25, r1
     c76:	b2 9f       	mul	r27, r18
     c78:	70 0d       	add	r23, r0
     c7a:	81 1d       	adc	r24, r1
     c7c:	11 24       	eor	r1, r1
     c7e:	91 1d       	adc	r25, r1
     c80:	08 95       	ret

00000c82 <atof>:
     c82:	66 27       	eor	r22, r22
     c84:	77 27       	eor	r23, r23
     c86:	0c 94 84 08 	jmp	0x1108	; 0x1108 <strtod>

00000c8a <atol>:
     c8a:	1f 93       	push	r17
     c8c:	fc 01       	movw	r30, r24
     c8e:	99 27       	eor	r25, r25
     c90:	88 27       	eor	r24, r24
     c92:	bc 01       	movw	r22, r24
     c94:	e8 94       	clt
     c96:	11 91       	ld	r17, Z+
     c98:	10 32       	cpi	r17, 0x20	; 32
     c9a:	e9 f3       	breq	.-6      	; 0xc96 <atol+0xc>
     c9c:	19 30       	cpi	r17, 0x09	; 9
     c9e:	10 f0       	brcs	.+4      	; 0xca4 <atol+0x1a>
     ca0:	1e 30       	cpi	r17, 0x0E	; 14
     ca2:	c8 f3       	brcs	.-14     	; 0xc96 <atol+0xc>
     ca4:	1b 32       	cpi	r17, 0x2B	; 43
     ca6:	51 f0       	breq	.+20     	; 0xcbc <atol+0x32>
     ca8:	1d 32       	cpi	r17, 0x2D	; 45
     caa:	49 f4       	brne	.+18     	; 0xcbe <atol+0x34>
     cac:	68 94       	set
     cae:	06 c0       	rjmp	.+12     	; 0xcbc <atol+0x32>
     cb0:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__mulsi_const_10>
     cb4:	61 0f       	add	r22, r17
     cb6:	71 1d       	adc	r23, r1
     cb8:	81 1d       	adc	r24, r1
     cba:	91 1d       	adc	r25, r1
     cbc:	11 91       	ld	r17, Z+
     cbe:	10 53       	subi	r17, 0x30	; 48
     cc0:	1a 30       	cpi	r17, 0x0A	; 10
     cc2:	b0 f3       	brcs	.-20     	; 0xcb0 <atol+0x26>
     cc4:	3e f4       	brtc	.+14     	; 0xcd4 <atol+0x4a>
     cc6:	90 95       	com	r25
     cc8:	80 95       	com	r24
     cca:	70 95       	com	r23
     ccc:	61 95       	neg	r22
     cce:	7f 4f       	sbci	r23, 0xFF	; 255
     cd0:	8f 4f       	sbci	r24, 0xFF	; 255
     cd2:	9f 4f       	sbci	r25, 0xFF	; 255
     cd4:	1f 91       	pop	r17
     cd6:	08 95       	ret

00000cd8 <__mulsi_const_10>:
     cd8:	59 2f       	mov	r21, r25
     cda:	48 2f       	mov	r20, r24
     cdc:	37 2f       	mov	r19, r23
     cde:	26 2f       	mov	r18, r22
     ce0:	66 0f       	add	r22, r22
     ce2:	77 1f       	adc	r23, r23
     ce4:	88 1f       	adc	r24, r24
     ce6:	99 1f       	adc	r25, r25
     ce8:	66 0f       	add	r22, r22
     cea:	77 1f       	adc	r23, r23
     cec:	88 1f       	adc	r24, r24
     cee:	99 1f       	adc	r25, r25
     cf0:	62 0f       	add	r22, r18
     cf2:	73 1f       	adc	r23, r19
     cf4:	84 1f       	adc	r24, r20
     cf6:	95 1f       	adc	r25, r21
     cf8:	66 0f       	add	r22, r22
     cfa:	77 1f       	adc	r23, r23
     cfc:	88 1f       	adc	r24, r24
     cfe:	99 1f       	adc	r25, r25
     d00:	08 95       	ret

00000d02 <sprintf>:
     d02:	ae e0       	ldi	r26, 0x0E	; 14
     d04:	b0 e0       	ldi	r27, 0x00	; 0
     d06:	e7 e8       	ldi	r30, 0x87	; 135
     d08:	f6 e0       	ldi	r31, 0x06	; 6
     d0a:	0c 94 b4 0a 	jmp	0x1568	; 0x1568 <__prologue_saves__+0x1c>
     d0e:	0d 89       	ldd	r16, Y+21	; 0x15
     d10:	1e 89       	ldd	r17, Y+22	; 0x16
     d12:	86 e0       	ldi	r24, 0x06	; 6
     d14:	8c 83       	std	Y+4, r24	; 0x04
     d16:	1a 83       	std	Y+2, r17	; 0x02
     d18:	09 83       	std	Y+1, r16	; 0x01
     d1a:	8f ef       	ldi	r24, 0xFF	; 255
     d1c:	9f e7       	ldi	r25, 0x7F	; 127
     d1e:	9e 83       	std	Y+6, r25	; 0x06
     d20:	8d 83       	std	Y+5, r24	; 0x05
     d22:	ae 01       	movw	r20, r28
     d24:	47 5e       	subi	r20, 0xE7	; 231
     d26:	5f 4f       	sbci	r21, 0xFF	; 255
     d28:	6f 89       	ldd	r22, Y+23	; 0x17
     d2a:	78 8d       	ldd	r23, Y+24	; 0x18
     d2c:	ce 01       	movw	r24, r28
     d2e:	01 96       	adiw	r24, 0x01	; 1
     d30:	0e 94 a3 06 	call	0xd46	; 0xd46 <vfprintf>
     d34:	ef 81       	ldd	r30, Y+7	; 0x07
     d36:	f8 85       	ldd	r31, Y+8	; 0x08
     d38:	e0 0f       	add	r30, r16
     d3a:	f1 1f       	adc	r31, r17
     d3c:	10 82       	st	Z, r1
     d3e:	2e 96       	adiw	r28, 0x0e	; 14
     d40:	e4 e0       	ldi	r30, 0x04	; 4
     d42:	0c 94 d0 0a 	jmp	0x15a0	; 0x15a0 <__epilogue_restores__+0x1c>

00000d46 <vfprintf>:
     d46:	ab e0       	ldi	r26, 0x0B	; 11
     d48:	b0 e0       	ldi	r27, 0x00	; 0
     d4a:	e9 ea       	ldi	r30, 0xA9	; 169
     d4c:	f6 e0       	ldi	r31, 0x06	; 6
     d4e:	0c 94 a6 0a 	jmp	0x154c	; 0x154c <__prologue_saves__>
     d52:	6c 01       	movw	r12, r24
     d54:	7b 01       	movw	r14, r22
     d56:	8a 01       	movw	r16, r20
     d58:	fc 01       	movw	r30, r24
     d5a:	17 82       	std	Z+7, r1	; 0x07
     d5c:	16 82       	std	Z+6, r1	; 0x06
     d5e:	83 81       	ldd	r24, Z+3	; 0x03
     d60:	81 ff       	sbrs	r24, 1
     d62:	cc c1       	rjmp	.+920    	; 0x10fc <vfprintf+0x3b6>
     d64:	ce 01       	movw	r24, r28
     d66:	01 96       	adiw	r24, 0x01	; 1
     d68:	3c 01       	movw	r6, r24
     d6a:	f6 01       	movw	r30, r12
     d6c:	93 81       	ldd	r25, Z+3	; 0x03
     d6e:	f7 01       	movw	r30, r14
     d70:	93 fd       	sbrc	r25, 3
     d72:	85 91       	lpm	r24, Z+
     d74:	93 ff       	sbrs	r25, 3
     d76:	81 91       	ld	r24, Z+
     d78:	7f 01       	movw	r14, r30
     d7a:	88 23       	and	r24, r24
     d7c:	09 f4       	brne	.+2      	; 0xd80 <vfprintf+0x3a>
     d7e:	ba c1       	rjmp	.+884    	; 0x10f4 <vfprintf+0x3ae>
     d80:	85 32       	cpi	r24, 0x25	; 37
     d82:	39 f4       	brne	.+14     	; 0xd92 <vfprintf+0x4c>
     d84:	93 fd       	sbrc	r25, 3
     d86:	85 91       	lpm	r24, Z+
     d88:	93 ff       	sbrs	r25, 3
     d8a:	81 91       	ld	r24, Z+
     d8c:	7f 01       	movw	r14, r30
     d8e:	85 32       	cpi	r24, 0x25	; 37
     d90:	29 f4       	brne	.+10     	; 0xd9c <vfprintf+0x56>
     d92:	b6 01       	movw	r22, r12
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	0e 94 09 0a 	call	0x1412	; 0x1412 <fputc>
     d9a:	e7 cf       	rjmp	.-50     	; 0xd6a <vfprintf+0x24>
     d9c:	91 2c       	mov	r9, r1
     d9e:	21 2c       	mov	r2, r1
     da0:	31 2c       	mov	r3, r1
     da2:	ff e1       	ldi	r31, 0x1F	; 31
     da4:	f3 15       	cp	r31, r3
     da6:	d8 f0       	brcs	.+54     	; 0xdde <vfprintf+0x98>
     da8:	8b 32       	cpi	r24, 0x2B	; 43
     daa:	79 f0       	breq	.+30     	; 0xdca <vfprintf+0x84>
     dac:	38 f4       	brcc	.+14     	; 0xdbc <vfprintf+0x76>
     dae:	80 32       	cpi	r24, 0x20	; 32
     db0:	79 f0       	breq	.+30     	; 0xdd0 <vfprintf+0x8a>
     db2:	83 32       	cpi	r24, 0x23	; 35
     db4:	a1 f4       	brne	.+40     	; 0xdde <vfprintf+0x98>
     db6:	23 2d       	mov	r18, r3
     db8:	20 61       	ori	r18, 0x10	; 16
     dba:	1d c0       	rjmp	.+58     	; 0xdf6 <vfprintf+0xb0>
     dbc:	8d 32       	cpi	r24, 0x2D	; 45
     dbe:	61 f0       	breq	.+24     	; 0xdd8 <vfprintf+0x92>
     dc0:	80 33       	cpi	r24, 0x30	; 48
     dc2:	69 f4       	brne	.+26     	; 0xdde <vfprintf+0x98>
     dc4:	23 2d       	mov	r18, r3
     dc6:	21 60       	ori	r18, 0x01	; 1
     dc8:	16 c0       	rjmp	.+44     	; 0xdf6 <vfprintf+0xb0>
     dca:	83 2d       	mov	r24, r3
     dcc:	82 60       	ori	r24, 0x02	; 2
     dce:	38 2e       	mov	r3, r24
     dd0:	e3 2d       	mov	r30, r3
     dd2:	e4 60       	ori	r30, 0x04	; 4
     dd4:	3e 2e       	mov	r3, r30
     dd6:	2a c0       	rjmp	.+84     	; 0xe2c <vfprintf+0xe6>
     dd8:	f3 2d       	mov	r31, r3
     dda:	f8 60       	ori	r31, 0x08	; 8
     ddc:	1d c0       	rjmp	.+58     	; 0xe18 <vfprintf+0xd2>
     dde:	37 fc       	sbrc	r3, 7
     de0:	2d c0       	rjmp	.+90     	; 0xe3c <vfprintf+0xf6>
     de2:	20 ed       	ldi	r18, 0xD0	; 208
     de4:	28 0f       	add	r18, r24
     de6:	2a 30       	cpi	r18, 0x0A	; 10
     de8:	40 f0       	brcs	.+16     	; 0xdfa <vfprintf+0xb4>
     dea:	8e 32       	cpi	r24, 0x2E	; 46
     dec:	b9 f4       	brne	.+46     	; 0xe1c <vfprintf+0xd6>
     dee:	36 fc       	sbrc	r3, 6
     df0:	81 c1       	rjmp	.+770    	; 0x10f4 <vfprintf+0x3ae>
     df2:	23 2d       	mov	r18, r3
     df4:	20 64       	ori	r18, 0x40	; 64
     df6:	32 2e       	mov	r3, r18
     df8:	19 c0       	rjmp	.+50     	; 0xe2c <vfprintf+0xe6>
     dfa:	36 fe       	sbrs	r3, 6
     dfc:	06 c0       	rjmp	.+12     	; 0xe0a <vfprintf+0xc4>
     dfe:	8a e0       	ldi	r24, 0x0A	; 10
     e00:	98 9e       	mul	r9, r24
     e02:	20 0d       	add	r18, r0
     e04:	11 24       	eor	r1, r1
     e06:	92 2e       	mov	r9, r18
     e08:	11 c0       	rjmp	.+34     	; 0xe2c <vfprintf+0xe6>
     e0a:	ea e0       	ldi	r30, 0x0A	; 10
     e0c:	2e 9e       	mul	r2, r30
     e0e:	20 0d       	add	r18, r0
     e10:	11 24       	eor	r1, r1
     e12:	22 2e       	mov	r2, r18
     e14:	f3 2d       	mov	r31, r3
     e16:	f0 62       	ori	r31, 0x20	; 32
     e18:	3f 2e       	mov	r3, r31
     e1a:	08 c0       	rjmp	.+16     	; 0xe2c <vfprintf+0xe6>
     e1c:	8c 36       	cpi	r24, 0x6C	; 108
     e1e:	21 f4       	brne	.+8      	; 0xe28 <vfprintf+0xe2>
     e20:	83 2d       	mov	r24, r3
     e22:	80 68       	ori	r24, 0x80	; 128
     e24:	38 2e       	mov	r3, r24
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <vfprintf+0xe6>
     e28:	88 36       	cpi	r24, 0x68	; 104
     e2a:	41 f4       	brne	.+16     	; 0xe3c <vfprintf+0xf6>
     e2c:	f7 01       	movw	r30, r14
     e2e:	93 fd       	sbrc	r25, 3
     e30:	85 91       	lpm	r24, Z+
     e32:	93 ff       	sbrs	r25, 3
     e34:	81 91       	ld	r24, Z+
     e36:	7f 01       	movw	r14, r30
     e38:	81 11       	cpse	r24, r1
     e3a:	b3 cf       	rjmp	.-154    	; 0xda2 <vfprintf+0x5c>
     e3c:	98 2f       	mov	r25, r24
     e3e:	9f 7d       	andi	r25, 0xDF	; 223
     e40:	95 54       	subi	r25, 0x45	; 69
     e42:	93 30       	cpi	r25, 0x03	; 3
     e44:	28 f4       	brcc	.+10     	; 0xe50 <vfprintf+0x10a>
     e46:	0c 5f       	subi	r16, 0xFC	; 252
     e48:	1f 4f       	sbci	r17, 0xFF	; 255
     e4a:	9f e3       	ldi	r25, 0x3F	; 63
     e4c:	99 83       	std	Y+1, r25	; 0x01
     e4e:	0d c0       	rjmp	.+26     	; 0xe6a <vfprintf+0x124>
     e50:	83 36       	cpi	r24, 0x63	; 99
     e52:	31 f0       	breq	.+12     	; 0xe60 <vfprintf+0x11a>
     e54:	83 37       	cpi	r24, 0x73	; 115
     e56:	71 f0       	breq	.+28     	; 0xe74 <vfprintf+0x12e>
     e58:	83 35       	cpi	r24, 0x53	; 83
     e5a:	09 f0       	breq	.+2      	; 0xe5e <vfprintf+0x118>
     e5c:	59 c0       	rjmp	.+178    	; 0xf10 <vfprintf+0x1ca>
     e5e:	21 c0       	rjmp	.+66     	; 0xea2 <vfprintf+0x15c>
     e60:	f8 01       	movw	r30, r16
     e62:	80 81       	ld	r24, Z
     e64:	89 83       	std	Y+1, r24	; 0x01
     e66:	0e 5f       	subi	r16, 0xFE	; 254
     e68:	1f 4f       	sbci	r17, 0xFF	; 255
     e6a:	88 24       	eor	r8, r8
     e6c:	83 94       	inc	r8
     e6e:	91 2c       	mov	r9, r1
     e70:	53 01       	movw	r10, r6
     e72:	13 c0       	rjmp	.+38     	; 0xe9a <vfprintf+0x154>
     e74:	28 01       	movw	r4, r16
     e76:	f2 e0       	ldi	r31, 0x02	; 2
     e78:	4f 0e       	add	r4, r31
     e7a:	51 1c       	adc	r5, r1
     e7c:	f8 01       	movw	r30, r16
     e7e:	a0 80       	ld	r10, Z
     e80:	b1 80       	ldd	r11, Z+1	; 0x01
     e82:	36 fe       	sbrs	r3, 6
     e84:	03 c0       	rjmp	.+6      	; 0xe8c <vfprintf+0x146>
     e86:	69 2d       	mov	r22, r9
     e88:	70 e0       	ldi	r23, 0x00	; 0
     e8a:	02 c0       	rjmp	.+4      	; 0xe90 <vfprintf+0x14a>
     e8c:	6f ef       	ldi	r22, 0xFF	; 255
     e8e:	7f ef       	ldi	r23, 0xFF	; 255
     e90:	c5 01       	movw	r24, r10
     e92:	0e 94 fe 09 	call	0x13fc	; 0x13fc <strnlen>
     e96:	4c 01       	movw	r8, r24
     e98:	82 01       	movw	r16, r4
     e9a:	f3 2d       	mov	r31, r3
     e9c:	ff 77       	andi	r31, 0x7F	; 127
     e9e:	3f 2e       	mov	r3, r31
     ea0:	16 c0       	rjmp	.+44     	; 0xece <vfprintf+0x188>
     ea2:	28 01       	movw	r4, r16
     ea4:	22 e0       	ldi	r18, 0x02	; 2
     ea6:	42 0e       	add	r4, r18
     ea8:	51 1c       	adc	r5, r1
     eaa:	f8 01       	movw	r30, r16
     eac:	a0 80       	ld	r10, Z
     eae:	b1 80       	ldd	r11, Z+1	; 0x01
     eb0:	36 fe       	sbrs	r3, 6
     eb2:	03 c0       	rjmp	.+6      	; 0xeba <vfprintf+0x174>
     eb4:	69 2d       	mov	r22, r9
     eb6:	70 e0       	ldi	r23, 0x00	; 0
     eb8:	02 c0       	rjmp	.+4      	; 0xebe <vfprintf+0x178>
     eba:	6f ef       	ldi	r22, 0xFF	; 255
     ebc:	7f ef       	ldi	r23, 0xFF	; 255
     ebe:	c5 01       	movw	r24, r10
     ec0:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <strnlen_P>
     ec4:	4c 01       	movw	r8, r24
     ec6:	f3 2d       	mov	r31, r3
     ec8:	f0 68       	ori	r31, 0x80	; 128
     eca:	3f 2e       	mov	r3, r31
     ecc:	82 01       	movw	r16, r4
     ece:	33 fc       	sbrc	r3, 3
     ed0:	1b c0       	rjmp	.+54     	; 0xf08 <vfprintf+0x1c2>
     ed2:	82 2d       	mov	r24, r2
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	88 16       	cp	r8, r24
     ed8:	99 06       	cpc	r9, r25
     eda:	b0 f4       	brcc	.+44     	; 0xf08 <vfprintf+0x1c2>
     edc:	b6 01       	movw	r22, r12
     ede:	80 e2       	ldi	r24, 0x20	; 32
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	0e 94 09 0a 	call	0x1412	; 0x1412 <fputc>
     ee6:	2a 94       	dec	r2
     ee8:	f4 cf       	rjmp	.-24     	; 0xed2 <vfprintf+0x18c>
     eea:	f5 01       	movw	r30, r10
     eec:	37 fc       	sbrc	r3, 7
     eee:	85 91       	lpm	r24, Z+
     ef0:	37 fe       	sbrs	r3, 7
     ef2:	81 91       	ld	r24, Z+
     ef4:	5f 01       	movw	r10, r30
     ef6:	b6 01       	movw	r22, r12
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	0e 94 09 0a 	call	0x1412	; 0x1412 <fputc>
     efe:	21 10       	cpse	r2, r1
     f00:	2a 94       	dec	r2
     f02:	21 e0       	ldi	r18, 0x01	; 1
     f04:	82 1a       	sub	r8, r18
     f06:	91 08       	sbc	r9, r1
     f08:	81 14       	cp	r8, r1
     f0a:	91 04       	cpc	r9, r1
     f0c:	71 f7       	brne	.-36     	; 0xeea <vfprintf+0x1a4>
     f0e:	e8 c0       	rjmp	.+464    	; 0x10e0 <vfprintf+0x39a>
     f10:	84 36       	cpi	r24, 0x64	; 100
     f12:	11 f0       	breq	.+4      	; 0xf18 <vfprintf+0x1d2>
     f14:	89 36       	cpi	r24, 0x69	; 105
     f16:	41 f5       	brne	.+80     	; 0xf68 <vfprintf+0x222>
     f18:	f8 01       	movw	r30, r16
     f1a:	37 fe       	sbrs	r3, 7
     f1c:	07 c0       	rjmp	.+14     	; 0xf2c <vfprintf+0x1e6>
     f1e:	60 81       	ld	r22, Z
     f20:	71 81       	ldd	r23, Z+1	; 0x01
     f22:	82 81       	ldd	r24, Z+2	; 0x02
     f24:	93 81       	ldd	r25, Z+3	; 0x03
     f26:	0c 5f       	subi	r16, 0xFC	; 252
     f28:	1f 4f       	sbci	r17, 0xFF	; 255
     f2a:	08 c0       	rjmp	.+16     	; 0xf3c <vfprintf+0x1f6>
     f2c:	60 81       	ld	r22, Z
     f2e:	71 81       	ldd	r23, Z+1	; 0x01
     f30:	07 2e       	mov	r0, r23
     f32:	00 0c       	add	r0, r0
     f34:	88 0b       	sbc	r24, r24
     f36:	99 0b       	sbc	r25, r25
     f38:	0e 5f       	subi	r16, 0xFE	; 254
     f3a:	1f 4f       	sbci	r17, 0xFF	; 255
     f3c:	f3 2d       	mov	r31, r3
     f3e:	ff 76       	andi	r31, 0x6F	; 111
     f40:	3f 2e       	mov	r3, r31
     f42:	97 ff       	sbrs	r25, 7
     f44:	09 c0       	rjmp	.+18     	; 0xf58 <vfprintf+0x212>
     f46:	90 95       	com	r25
     f48:	80 95       	com	r24
     f4a:	70 95       	com	r23
     f4c:	61 95       	neg	r22
     f4e:	7f 4f       	sbci	r23, 0xFF	; 255
     f50:	8f 4f       	sbci	r24, 0xFF	; 255
     f52:	9f 4f       	sbci	r25, 0xFF	; 255
     f54:	f0 68       	ori	r31, 0x80	; 128
     f56:	3f 2e       	mov	r3, r31
     f58:	2a e0       	ldi	r18, 0x0A	; 10
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	a3 01       	movw	r20, r6
     f5e:	0e 94 45 0a 	call	0x148a	; 0x148a <__ultoa_invert>
     f62:	88 2e       	mov	r8, r24
     f64:	86 18       	sub	r8, r6
     f66:	45 c0       	rjmp	.+138    	; 0xff2 <vfprintf+0x2ac>
     f68:	85 37       	cpi	r24, 0x75	; 117
     f6a:	31 f4       	brne	.+12     	; 0xf78 <vfprintf+0x232>
     f6c:	23 2d       	mov	r18, r3
     f6e:	2f 7e       	andi	r18, 0xEF	; 239
     f70:	b2 2e       	mov	r11, r18
     f72:	2a e0       	ldi	r18, 0x0A	; 10
     f74:	30 e0       	ldi	r19, 0x00	; 0
     f76:	25 c0       	rjmp	.+74     	; 0xfc2 <vfprintf+0x27c>
     f78:	93 2d       	mov	r25, r3
     f7a:	99 7f       	andi	r25, 0xF9	; 249
     f7c:	b9 2e       	mov	r11, r25
     f7e:	8f 36       	cpi	r24, 0x6F	; 111
     f80:	c1 f0       	breq	.+48     	; 0xfb2 <vfprintf+0x26c>
     f82:	18 f4       	brcc	.+6      	; 0xf8a <vfprintf+0x244>
     f84:	88 35       	cpi	r24, 0x58	; 88
     f86:	79 f0       	breq	.+30     	; 0xfa6 <vfprintf+0x260>
     f88:	b5 c0       	rjmp	.+362    	; 0x10f4 <vfprintf+0x3ae>
     f8a:	80 37       	cpi	r24, 0x70	; 112
     f8c:	19 f0       	breq	.+6      	; 0xf94 <vfprintf+0x24e>
     f8e:	88 37       	cpi	r24, 0x78	; 120
     f90:	21 f0       	breq	.+8      	; 0xf9a <vfprintf+0x254>
     f92:	b0 c0       	rjmp	.+352    	; 0x10f4 <vfprintf+0x3ae>
     f94:	e9 2f       	mov	r30, r25
     f96:	e0 61       	ori	r30, 0x10	; 16
     f98:	be 2e       	mov	r11, r30
     f9a:	b4 fe       	sbrs	r11, 4
     f9c:	0d c0       	rjmp	.+26     	; 0xfb8 <vfprintf+0x272>
     f9e:	fb 2d       	mov	r31, r11
     fa0:	f4 60       	ori	r31, 0x04	; 4
     fa2:	bf 2e       	mov	r11, r31
     fa4:	09 c0       	rjmp	.+18     	; 0xfb8 <vfprintf+0x272>
     fa6:	34 fe       	sbrs	r3, 4
     fa8:	0a c0       	rjmp	.+20     	; 0xfbe <vfprintf+0x278>
     faa:	29 2f       	mov	r18, r25
     fac:	26 60       	ori	r18, 0x06	; 6
     fae:	b2 2e       	mov	r11, r18
     fb0:	06 c0       	rjmp	.+12     	; 0xfbe <vfprintf+0x278>
     fb2:	28 e0       	ldi	r18, 0x08	; 8
     fb4:	30 e0       	ldi	r19, 0x00	; 0
     fb6:	05 c0       	rjmp	.+10     	; 0xfc2 <vfprintf+0x27c>
     fb8:	20 e1       	ldi	r18, 0x10	; 16
     fba:	30 e0       	ldi	r19, 0x00	; 0
     fbc:	02 c0       	rjmp	.+4      	; 0xfc2 <vfprintf+0x27c>
     fbe:	20 e1       	ldi	r18, 0x10	; 16
     fc0:	32 e0       	ldi	r19, 0x02	; 2
     fc2:	f8 01       	movw	r30, r16
     fc4:	b7 fe       	sbrs	r11, 7
     fc6:	07 c0       	rjmp	.+14     	; 0xfd6 <vfprintf+0x290>
     fc8:	60 81       	ld	r22, Z
     fca:	71 81       	ldd	r23, Z+1	; 0x01
     fcc:	82 81       	ldd	r24, Z+2	; 0x02
     fce:	93 81       	ldd	r25, Z+3	; 0x03
     fd0:	0c 5f       	subi	r16, 0xFC	; 252
     fd2:	1f 4f       	sbci	r17, 0xFF	; 255
     fd4:	06 c0       	rjmp	.+12     	; 0xfe2 <vfprintf+0x29c>
     fd6:	60 81       	ld	r22, Z
     fd8:	71 81       	ldd	r23, Z+1	; 0x01
     fda:	80 e0       	ldi	r24, 0x00	; 0
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	0e 5f       	subi	r16, 0xFE	; 254
     fe0:	1f 4f       	sbci	r17, 0xFF	; 255
     fe2:	a3 01       	movw	r20, r6
     fe4:	0e 94 45 0a 	call	0x148a	; 0x148a <__ultoa_invert>
     fe8:	88 2e       	mov	r8, r24
     fea:	86 18       	sub	r8, r6
     fec:	fb 2d       	mov	r31, r11
     fee:	ff 77       	andi	r31, 0x7F	; 127
     ff0:	3f 2e       	mov	r3, r31
     ff2:	36 fe       	sbrs	r3, 6
     ff4:	0d c0       	rjmp	.+26     	; 0x1010 <vfprintf+0x2ca>
     ff6:	23 2d       	mov	r18, r3
     ff8:	2e 7f       	andi	r18, 0xFE	; 254
     ffa:	a2 2e       	mov	r10, r18
     ffc:	89 14       	cp	r8, r9
     ffe:	58 f4       	brcc	.+22     	; 0x1016 <vfprintf+0x2d0>
    1000:	34 fe       	sbrs	r3, 4
    1002:	0b c0       	rjmp	.+22     	; 0x101a <vfprintf+0x2d4>
    1004:	32 fc       	sbrc	r3, 2
    1006:	09 c0       	rjmp	.+18     	; 0x101a <vfprintf+0x2d4>
    1008:	83 2d       	mov	r24, r3
    100a:	8e 7e       	andi	r24, 0xEE	; 238
    100c:	a8 2e       	mov	r10, r24
    100e:	05 c0       	rjmp	.+10     	; 0x101a <vfprintf+0x2d4>
    1010:	b8 2c       	mov	r11, r8
    1012:	a3 2c       	mov	r10, r3
    1014:	03 c0       	rjmp	.+6      	; 0x101c <vfprintf+0x2d6>
    1016:	b8 2c       	mov	r11, r8
    1018:	01 c0       	rjmp	.+2      	; 0x101c <vfprintf+0x2d6>
    101a:	b9 2c       	mov	r11, r9
    101c:	a4 fe       	sbrs	r10, 4
    101e:	0f c0       	rjmp	.+30     	; 0x103e <vfprintf+0x2f8>
    1020:	fe 01       	movw	r30, r28
    1022:	e8 0d       	add	r30, r8
    1024:	f1 1d       	adc	r31, r1
    1026:	80 81       	ld	r24, Z
    1028:	80 33       	cpi	r24, 0x30	; 48
    102a:	21 f4       	brne	.+8      	; 0x1034 <vfprintf+0x2ee>
    102c:	9a 2d       	mov	r25, r10
    102e:	99 7e       	andi	r25, 0xE9	; 233
    1030:	a9 2e       	mov	r10, r25
    1032:	09 c0       	rjmp	.+18     	; 0x1046 <vfprintf+0x300>
    1034:	a2 fe       	sbrs	r10, 2
    1036:	06 c0       	rjmp	.+12     	; 0x1044 <vfprintf+0x2fe>
    1038:	b3 94       	inc	r11
    103a:	b3 94       	inc	r11
    103c:	04 c0       	rjmp	.+8      	; 0x1046 <vfprintf+0x300>
    103e:	8a 2d       	mov	r24, r10
    1040:	86 78       	andi	r24, 0x86	; 134
    1042:	09 f0       	breq	.+2      	; 0x1046 <vfprintf+0x300>
    1044:	b3 94       	inc	r11
    1046:	a3 fc       	sbrc	r10, 3
    1048:	11 c0       	rjmp	.+34     	; 0x106c <vfprintf+0x326>
    104a:	a0 fe       	sbrs	r10, 0
    104c:	06 c0       	rjmp	.+12     	; 0x105a <vfprintf+0x314>
    104e:	b2 14       	cp	r11, r2
    1050:	88 f4       	brcc	.+34     	; 0x1074 <vfprintf+0x32e>
    1052:	28 0c       	add	r2, r8
    1054:	92 2c       	mov	r9, r2
    1056:	9b 18       	sub	r9, r11
    1058:	0e c0       	rjmp	.+28     	; 0x1076 <vfprintf+0x330>
    105a:	b2 14       	cp	r11, r2
    105c:	60 f4       	brcc	.+24     	; 0x1076 <vfprintf+0x330>
    105e:	b6 01       	movw	r22, r12
    1060:	80 e2       	ldi	r24, 0x20	; 32
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	0e 94 09 0a 	call	0x1412	; 0x1412 <fputc>
    1068:	b3 94       	inc	r11
    106a:	f7 cf       	rjmp	.-18     	; 0x105a <vfprintf+0x314>
    106c:	b2 14       	cp	r11, r2
    106e:	18 f4       	brcc	.+6      	; 0x1076 <vfprintf+0x330>
    1070:	2b 18       	sub	r2, r11
    1072:	02 c0       	rjmp	.+4      	; 0x1078 <vfprintf+0x332>
    1074:	98 2c       	mov	r9, r8
    1076:	21 2c       	mov	r2, r1
    1078:	a4 fe       	sbrs	r10, 4
    107a:	10 c0       	rjmp	.+32     	; 0x109c <vfprintf+0x356>
    107c:	b6 01       	movw	r22, r12
    107e:	80 e3       	ldi	r24, 0x30	; 48
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	0e 94 09 0a 	call	0x1412	; 0x1412 <fputc>
    1086:	a2 fe       	sbrs	r10, 2
    1088:	17 c0       	rjmp	.+46     	; 0x10b8 <vfprintf+0x372>
    108a:	a1 fc       	sbrc	r10, 1
    108c:	03 c0       	rjmp	.+6      	; 0x1094 <vfprintf+0x34e>
    108e:	88 e7       	ldi	r24, 0x78	; 120
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	02 c0       	rjmp	.+4      	; 0x1098 <vfprintf+0x352>
    1094:	88 e5       	ldi	r24, 0x58	; 88
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	b6 01       	movw	r22, r12
    109a:	0c c0       	rjmp	.+24     	; 0x10b4 <vfprintf+0x36e>
    109c:	8a 2d       	mov	r24, r10
    109e:	86 78       	andi	r24, 0x86	; 134
    10a0:	59 f0       	breq	.+22     	; 0x10b8 <vfprintf+0x372>
    10a2:	a1 fe       	sbrs	r10, 1
    10a4:	02 c0       	rjmp	.+4      	; 0x10aa <vfprintf+0x364>
    10a6:	8b e2       	ldi	r24, 0x2B	; 43
    10a8:	01 c0       	rjmp	.+2      	; 0x10ac <vfprintf+0x366>
    10aa:	80 e2       	ldi	r24, 0x20	; 32
    10ac:	a7 fc       	sbrc	r10, 7
    10ae:	8d e2       	ldi	r24, 0x2D	; 45
    10b0:	b6 01       	movw	r22, r12
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	0e 94 09 0a 	call	0x1412	; 0x1412 <fputc>
    10b8:	89 14       	cp	r8, r9
    10ba:	38 f4       	brcc	.+14     	; 0x10ca <vfprintf+0x384>
    10bc:	b6 01       	movw	r22, r12
    10be:	80 e3       	ldi	r24, 0x30	; 48
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	0e 94 09 0a 	call	0x1412	; 0x1412 <fputc>
    10c6:	9a 94       	dec	r9
    10c8:	f7 cf       	rjmp	.-18     	; 0x10b8 <vfprintf+0x372>
    10ca:	8a 94       	dec	r8
    10cc:	f3 01       	movw	r30, r6
    10ce:	e8 0d       	add	r30, r8
    10d0:	f1 1d       	adc	r31, r1
    10d2:	80 81       	ld	r24, Z
    10d4:	b6 01       	movw	r22, r12
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	0e 94 09 0a 	call	0x1412	; 0x1412 <fputc>
    10dc:	81 10       	cpse	r8, r1
    10de:	f5 cf       	rjmp	.-22     	; 0x10ca <vfprintf+0x384>
    10e0:	22 20       	and	r2, r2
    10e2:	09 f4       	brne	.+2      	; 0x10e6 <vfprintf+0x3a0>
    10e4:	42 ce       	rjmp	.-892    	; 0xd6a <vfprintf+0x24>
    10e6:	b6 01       	movw	r22, r12
    10e8:	80 e2       	ldi	r24, 0x20	; 32
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	0e 94 09 0a 	call	0x1412	; 0x1412 <fputc>
    10f0:	2a 94       	dec	r2
    10f2:	f6 cf       	rjmp	.-20     	; 0x10e0 <vfprintf+0x39a>
    10f4:	f6 01       	movw	r30, r12
    10f6:	86 81       	ldd	r24, Z+6	; 0x06
    10f8:	97 81       	ldd	r25, Z+7	; 0x07
    10fa:	02 c0       	rjmp	.+4      	; 0x1100 <vfprintf+0x3ba>
    10fc:	8f ef       	ldi	r24, 0xFF	; 255
    10fe:	9f ef       	ldi	r25, 0xFF	; 255
    1100:	2b 96       	adiw	r28, 0x0b	; 11
    1102:	e2 e1       	ldi	r30, 0x12	; 18
    1104:	0c 94 c2 0a 	jmp	0x1584	; 0x1584 <__epilogue_restores__>

00001108 <strtod>:
    1108:	a0 e0       	ldi	r26, 0x00	; 0
    110a:	b0 e0       	ldi	r27, 0x00	; 0
    110c:	ea e8       	ldi	r30, 0x8A	; 138
    110e:	f8 e0       	ldi	r31, 0x08	; 8
    1110:	0c 94 ac 0a 	jmp	0x1558	; 0x1558 <__prologue_saves__+0xc>
    1114:	ec 01       	movw	r28, r24
    1116:	6b 01       	movw	r12, r22
    1118:	61 15       	cp	r22, r1
    111a:	71 05       	cpc	r23, r1
    111c:	19 f0       	breq	.+6      	; 0x1124 <strtod+0x1c>
    111e:	fb 01       	movw	r30, r22
    1120:	91 83       	std	Z+1, r25	; 0x01
    1122:	80 83       	st	Z, r24
    1124:	7e 01       	movw	r14, r28
    1126:	ff ef       	ldi	r31, 0xFF	; 255
    1128:	ef 1a       	sub	r14, r31
    112a:	ff 0a       	sbc	r15, r31
    112c:	08 81       	ld	r16, Y
    112e:	80 2f       	mov	r24, r16
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <isspace>
    1136:	89 2b       	or	r24, r25
    1138:	11 f0       	breq	.+4      	; 0x113e <strtod+0x36>
    113a:	e7 01       	movw	r28, r14
    113c:	f3 cf       	rjmp	.-26     	; 0x1124 <strtod+0x1c>
    113e:	0d 32       	cpi	r16, 0x2D	; 45
    1140:	39 f4       	brne	.+14     	; 0x1150 <strtod+0x48>
    1142:	7e 01       	movw	r14, r28
    1144:	82 e0       	ldi	r24, 0x02	; 2
    1146:	e8 0e       	add	r14, r24
    1148:	f1 1c       	adc	r15, r1
    114a:	09 81       	ldd	r16, Y+1	; 0x01
    114c:	11 e0       	ldi	r17, 0x01	; 1
    114e:	08 c0       	rjmp	.+16     	; 0x1160 <strtod+0x58>
    1150:	0b 32       	cpi	r16, 0x2B	; 43
    1152:	29 f4       	brne	.+10     	; 0x115e <strtod+0x56>
    1154:	7e 01       	movw	r14, r28
    1156:	92 e0       	ldi	r25, 0x02	; 2
    1158:	e9 0e       	add	r14, r25
    115a:	f1 1c       	adc	r15, r1
    115c:	09 81       	ldd	r16, Y+1	; 0x01
    115e:	10 e0       	ldi	r17, 0x00	; 0
    1160:	e7 01       	movw	r28, r14
    1162:	21 97       	sbiw	r28, 0x01	; 1
    1164:	43 e0       	ldi	r20, 0x03	; 3
    1166:	50 e0       	ldi	r21, 0x00	; 0
    1168:	6c e5       	ldi	r22, 0x5C	; 92
    116a:	70 e0       	ldi	r23, 0x00	; 0
    116c:	ce 01       	movw	r24, r28
    116e:	0e 94 db 09 	call	0x13b6	; 0x13b6 <strncasecmp_P>
    1172:	89 2b       	or	r24, r25
    1174:	c1 f4       	brne	.+48     	; 0x11a6 <strtod+0x9e>
    1176:	23 96       	adiw	r28, 0x03	; 3
    1178:	45 e0       	ldi	r20, 0x05	; 5
    117a:	50 e0       	ldi	r21, 0x00	; 0
    117c:	67 e5       	ldi	r22, 0x57	; 87
    117e:	70 e0       	ldi	r23, 0x00	; 0
    1180:	ce 01       	movw	r24, r28
    1182:	0e 94 db 09 	call	0x13b6	; 0x13b6 <strncasecmp_P>
    1186:	89 2b       	or	r24, r25
    1188:	09 f4       	brne	.+2      	; 0x118c <strtod+0x84>
    118a:	25 96       	adiw	r28, 0x05	; 5
    118c:	c1 14       	cp	r12, r1
    118e:	d1 04       	cpc	r13, r1
    1190:	19 f0       	breq	.+6      	; 0x1198 <strtod+0x90>
    1192:	f6 01       	movw	r30, r12
    1194:	d1 83       	std	Z+1, r29	; 0x01
    1196:	c0 83       	st	Z, r28
    1198:	11 11       	cpse	r17, r1
    119a:	f6 c0       	rjmp	.+492    	; 0x1388 <strtod+0x280>
    119c:	60 e0       	ldi	r22, 0x00	; 0
    119e:	70 e0       	ldi	r23, 0x00	; 0
    11a0:	80 e8       	ldi	r24, 0x80	; 128
    11a2:	9f e7       	ldi	r25, 0x7F	; 127
    11a4:	fa c0       	rjmp	.+500    	; 0x139a <strtod+0x292>
    11a6:	43 e0       	ldi	r20, 0x03	; 3
    11a8:	50 e0       	ldi	r21, 0x00	; 0
    11aa:	64 e5       	ldi	r22, 0x54	; 84
    11ac:	70 e0       	ldi	r23, 0x00	; 0
    11ae:	ce 01       	movw	r24, r28
    11b0:	0e 94 db 09 	call	0x13b6	; 0x13b6 <strncasecmp_P>
    11b4:	89 2b       	or	r24, r25
    11b6:	59 f4       	brne	.+22     	; 0x11ce <strtod+0xc6>
    11b8:	c1 14       	cp	r12, r1
    11ba:	d1 04       	cpc	r13, r1
    11bc:	09 f4       	brne	.+2      	; 0x11c0 <strtod+0xb8>
    11be:	e9 c0       	rjmp	.+466    	; 0x1392 <strtod+0x28a>
    11c0:	f2 e0       	ldi	r31, 0x02	; 2
    11c2:	ef 0e       	add	r14, r31
    11c4:	f1 1c       	adc	r15, r1
    11c6:	f6 01       	movw	r30, r12
    11c8:	f1 82       	std	Z+1, r15	; 0x01
    11ca:	e0 82       	st	Z, r14
    11cc:	e2 c0       	rjmp	.+452    	; 0x1392 <strtod+0x28a>
    11ce:	20 e0       	ldi	r18, 0x00	; 0
    11d0:	30 e0       	ldi	r19, 0x00	; 0
    11d2:	a9 01       	movw	r20, r18
    11d4:	c0 e0       	ldi	r28, 0x00	; 0
    11d6:	d0 e0       	ldi	r29, 0x00	; 0
    11d8:	f7 01       	movw	r30, r14
    11da:	80 ed       	ldi	r24, 0xD0	; 208
    11dc:	a8 2e       	mov	r10, r24
    11de:	a0 0e       	add	r10, r16
    11e0:	89 e0       	ldi	r24, 0x09	; 9
    11e2:	8a 15       	cp	r24, r10
    11e4:	30 f1       	brcs	.+76     	; 0x1232 <strtod+0x12a>
    11e6:	91 2f       	mov	r25, r17
    11e8:	92 60       	ori	r25, 0x02	; 2
    11ea:	b9 2e       	mov	r11, r25
    11ec:	81 2f       	mov	r24, r17
    11ee:	88 70       	andi	r24, 0x08	; 8
    11f0:	12 ff       	sbrs	r17, 2
    11f2:	04 c0       	rjmp	.+8      	; 0x11fc <strtod+0xf4>
    11f4:	81 11       	cpse	r24, r1
    11f6:	24 c0       	rjmp	.+72     	; 0x1240 <strtod+0x138>
    11f8:	21 96       	adiw	r28, 0x01	; 1
    11fa:	22 c0       	rjmp	.+68     	; 0x1240 <strtod+0x138>
    11fc:	81 11       	cpse	r24, r1
    11fe:	21 97       	sbiw	r28, 0x01	; 1
    1200:	a5 e0       	ldi	r26, 0x05	; 5
    1202:	b0 e0       	ldi	r27, 0x00	; 0
    1204:	0e 94 27 06 	call	0xc4e	; 0xc4e <__muluhisi3>
    1208:	dc 01       	movw	r26, r24
    120a:	cb 01       	movw	r24, r22
    120c:	88 0f       	add	r24, r24
    120e:	99 1f       	adc	r25, r25
    1210:	aa 1f       	adc	r26, r26
    1212:	bb 1f       	adc	r27, r27
    1214:	9c 01       	movw	r18, r24
    1216:	ad 01       	movw	r20, r26
    1218:	2a 0d       	add	r18, r10
    121a:	31 1d       	adc	r19, r1
    121c:	41 1d       	adc	r20, r1
    121e:	51 1d       	adc	r21, r1
    1220:	28 39       	cpi	r18, 0x98	; 152
    1222:	89 e9       	ldi	r24, 0x99	; 153
    1224:	38 07       	cpc	r19, r24
    1226:	48 07       	cpc	r20, r24
    1228:	89 e1       	ldi	r24, 0x19	; 25
    122a:	58 07       	cpc	r21, r24
    122c:	48 f0       	brcs	.+18     	; 0x1240 <strtod+0x138>
    122e:	16 60       	ori	r17, 0x06	; 6
    1230:	06 c0       	rjmp	.+12     	; 0x123e <strtod+0x136>
    1232:	9e ef       	ldi	r25, 0xFE	; 254
    1234:	a9 12       	cpse	r10, r25
    1236:	0a c0       	rjmp	.+20     	; 0x124c <strtod+0x144>
    1238:	13 fd       	sbrc	r17, 3
    123a:	40 c0       	rjmp	.+128    	; 0x12bc <strtod+0x1b4>
    123c:	18 60       	ori	r17, 0x08	; 8
    123e:	b1 2e       	mov	r11, r17
    1240:	8f ef       	ldi	r24, 0xFF	; 255
    1242:	e8 1a       	sub	r14, r24
    1244:	f8 0a       	sbc	r15, r24
    1246:	00 81       	ld	r16, Z
    1248:	1b 2d       	mov	r17, r11
    124a:	c6 cf       	rjmp	.-116    	; 0x11d8 <strtod+0xd0>
    124c:	80 2f       	mov	r24, r16
    124e:	8f 7d       	andi	r24, 0xDF	; 223
    1250:	85 34       	cpi	r24, 0x45	; 69
    1252:	a1 f5       	brne	.+104    	; 0x12bc <strtod+0x1b4>
    1254:	80 81       	ld	r24, Z
    1256:	8d 32       	cpi	r24, 0x2D	; 45
    1258:	11 f4       	brne	.+4      	; 0x125e <strtod+0x156>
    125a:	10 61       	ori	r17, 0x10	; 16
    125c:	06 c0       	rjmp	.+12     	; 0x126a <strtod+0x162>
    125e:	8b 32       	cpi	r24, 0x2B	; 43
    1260:	21 f0       	breq	.+8      	; 0x126a <strtod+0x162>
    1262:	31 96       	adiw	r30, 0x01	; 1
    1264:	61 e0       	ldi	r22, 0x01	; 1
    1266:	70 e0       	ldi	r23, 0x00	; 0
    1268:	04 c0       	rjmp	.+8      	; 0x1272 <strtod+0x16a>
    126a:	81 81       	ldd	r24, Z+1	; 0x01
    126c:	32 96       	adiw	r30, 0x02	; 2
    126e:	62 e0       	ldi	r22, 0x02	; 2
    1270:	70 e0       	ldi	r23, 0x00	; 0
    1272:	80 53       	subi	r24, 0x30	; 48
    1274:	8a 30       	cpi	r24, 0x0A	; 10
    1276:	18 f0       	brcs	.+6      	; 0x127e <strtod+0x176>
    1278:	e6 1b       	sub	r30, r22
    127a:	f7 0b       	sbc	r31, r23
    127c:	1f c0       	rjmp	.+62     	; 0x12bc <strtod+0x1b4>
    127e:	60 e0       	ldi	r22, 0x00	; 0
    1280:	70 e0       	ldi	r23, 0x00	; 0
    1282:	60 38       	cpi	r22, 0x80	; 128
    1284:	9c e0       	ldi	r25, 0x0C	; 12
    1286:	79 07       	cpc	r23, r25
    1288:	5c f4       	brge	.+22     	; 0x12a0 <strtod+0x198>
    128a:	db 01       	movw	r26, r22
    128c:	aa 0f       	add	r26, r26
    128e:	bb 1f       	adc	r27, r27
    1290:	aa 0f       	add	r26, r26
    1292:	bb 1f       	adc	r27, r27
    1294:	6a 0f       	add	r22, r26
    1296:	7b 1f       	adc	r23, r27
    1298:	66 0f       	add	r22, r22
    129a:	77 1f       	adc	r23, r23
    129c:	68 0f       	add	r22, r24
    129e:	71 1d       	adc	r23, r1
    12a0:	31 96       	adiw	r30, 0x01	; 1
    12a2:	df 01       	movw	r26, r30
    12a4:	11 97       	sbiw	r26, 0x01	; 1
    12a6:	8c 91       	ld	r24, X
    12a8:	80 53       	subi	r24, 0x30	; 48
    12aa:	8a 30       	cpi	r24, 0x0A	; 10
    12ac:	50 f3       	brcs	.-44     	; 0x1282 <strtod+0x17a>
    12ae:	14 ff       	sbrs	r17, 4
    12b0:	03 c0       	rjmp	.+6      	; 0x12b8 <strtod+0x1b0>
    12b2:	71 95       	neg	r23
    12b4:	61 95       	neg	r22
    12b6:	71 09       	sbc	r23, r1
    12b8:	c6 0f       	add	r28, r22
    12ba:	d7 1f       	adc	r29, r23
    12bc:	11 ff       	sbrs	r17, 1
    12be:	08 c0       	rjmp	.+16     	; 0x12d0 <strtod+0x1c8>
    12c0:	c1 14       	cp	r12, r1
    12c2:	d1 04       	cpc	r13, r1
    12c4:	29 f0       	breq	.+10     	; 0x12d0 <strtod+0x1c8>
    12c6:	cf 01       	movw	r24, r30
    12c8:	01 97       	sbiw	r24, 0x01	; 1
    12ca:	f6 01       	movw	r30, r12
    12cc:	91 83       	std	Z+1, r25	; 0x01
    12ce:	80 83       	st	Z, r24
    12d0:	ca 01       	movw	r24, r20
    12d2:	b9 01       	movw	r22, r18
    12d4:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__floatunsisf>
    12d8:	21 2f       	mov	r18, r17
    12da:	23 70       	andi	r18, 0x03	; 3
    12dc:	23 30       	cpi	r18, 0x03	; 3
    12de:	19 f0       	breq	.+6      	; 0x12e6 <strtod+0x1de>
    12e0:	4b 01       	movw	r8, r22
    12e2:	5c 01       	movw	r10, r24
    12e4:	06 c0       	rjmp	.+12     	; 0x12f2 <strtod+0x1ea>
    12e6:	4b 01       	movw	r8, r22
    12e8:	5c 01       	movw	r10, r24
    12ea:	b7 fa       	bst	r11, 7
    12ec:	b0 94       	com	r11
    12ee:	b7 f8       	bld	r11, 7
    12f0:	b0 94       	com	r11
    12f2:	20 e0       	ldi	r18, 0x00	; 0
    12f4:	30 e0       	ldi	r19, 0x00	; 0
    12f6:	a9 01       	movw	r20, r18
    12f8:	c5 01       	movw	r24, r10
    12fa:	b4 01       	movw	r22, r8
    12fc:	0e 94 4b 04 	call	0x896	; 0x896 <__cmpsf2>
    1300:	88 23       	and	r24, r24
    1302:	09 f4       	brne	.+2      	; 0x1306 <strtod+0x1fe>
    1304:	3e c0       	rjmp	.+124    	; 0x1382 <strtod+0x27a>
    1306:	d7 ff       	sbrs	r29, 7
    1308:	06 c0       	rjmp	.+12     	; 0x1316 <strtod+0x20e>
    130a:	d1 95       	neg	r29
    130c:	c1 95       	neg	r28
    130e:	d1 09       	sbc	r29, r1
    1310:	03 e7       	ldi	r16, 0x73	; 115
    1312:	10 e0       	ldi	r17, 0x00	; 0
    1314:	02 c0       	rjmp	.+4      	; 0x131a <strtod+0x212>
    1316:	0b e8       	ldi	r16, 0x8B	; 139
    1318:	10 e0       	ldi	r17, 0x00	; 0
    131a:	68 01       	movw	r12, r16
    131c:	f8 e1       	ldi	r31, 0x18	; 24
    131e:	cf 1a       	sub	r12, r31
    1320:	d1 08       	sbc	r13, r1
    1322:	90 e2       	ldi	r25, 0x20	; 32
    1324:	e9 2e       	mov	r14, r25
    1326:	f1 2c       	mov	r15, r1
    1328:	ce 15       	cp	r28, r14
    132a:	df 05       	cpc	r29, r15
    132c:	74 f0       	brlt	.+28     	; 0x134a <strtod+0x242>
    132e:	f8 01       	movw	r30, r16
    1330:	25 91       	lpm	r18, Z+
    1332:	35 91       	lpm	r19, Z+
    1334:	45 91       	lpm	r20, Z+
    1336:	54 91       	lpm	r21, Z
    1338:	c5 01       	movw	r24, r10
    133a:	b4 01       	movw	r22, r8
    133c:	0e 94 aa 05 	call	0xb54	; 0xb54 <__mulsf3>
    1340:	4b 01       	movw	r8, r22
    1342:	5c 01       	movw	r10, r24
    1344:	ce 19       	sub	r28, r14
    1346:	df 09       	sbc	r29, r15
    1348:	ef cf       	rjmp	.-34     	; 0x1328 <strtod+0x220>
    134a:	04 50       	subi	r16, 0x04	; 4
    134c:	11 09       	sbc	r17, r1
    134e:	f5 94       	asr	r15
    1350:	e7 94       	ror	r14
    1352:	0c 15       	cp	r16, r12
    1354:	1d 05       	cpc	r17, r13
    1356:	41 f7       	brne	.-48     	; 0x1328 <strtod+0x220>
    1358:	8a 2d       	mov	r24, r10
    135a:	88 0f       	add	r24, r24
    135c:	8b 2d       	mov	r24, r11
    135e:	88 1f       	adc	r24, r24
    1360:	8f 3f       	cpi	r24, 0xFF	; 255
    1362:	49 f0       	breq	.+18     	; 0x1376 <strtod+0x26e>
    1364:	20 e0       	ldi	r18, 0x00	; 0
    1366:	30 e0       	ldi	r19, 0x00	; 0
    1368:	a9 01       	movw	r20, r18
    136a:	c5 01       	movw	r24, r10
    136c:	b4 01       	movw	r22, r8
    136e:	0e 94 4b 04 	call	0x896	; 0x896 <__cmpsf2>
    1372:	81 11       	cpse	r24, r1
    1374:	06 c0       	rjmp	.+12     	; 0x1382 <strtod+0x27a>
    1376:	82 e2       	ldi	r24, 0x22	; 34
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <errno+0x1>
    137e:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <errno>
    1382:	c5 01       	movw	r24, r10
    1384:	b4 01       	movw	r22, r8
    1386:	09 c0       	rjmp	.+18     	; 0x139a <strtod+0x292>
    1388:	60 e0       	ldi	r22, 0x00	; 0
    138a:	70 e0       	ldi	r23, 0x00	; 0
    138c:	80 e8       	ldi	r24, 0x80	; 128
    138e:	9f ef       	ldi	r25, 0xFF	; 255
    1390:	04 c0       	rjmp	.+8      	; 0x139a <strtod+0x292>
    1392:	60 e0       	ldi	r22, 0x00	; 0
    1394:	70 e0       	ldi	r23, 0x00	; 0
    1396:	80 ec       	ldi	r24, 0xC0	; 192
    1398:	9f e7       	ldi	r25, 0x7F	; 127
    139a:	cd b7       	in	r28, 0x3d	; 61
    139c:	de b7       	in	r29, 0x3e	; 62
    139e:	ec e0       	ldi	r30, 0x0C	; 12
    13a0:	0c 94 c8 0a 	jmp	0x1590	; 0x1590 <__epilogue_restores__+0xc>

000013a4 <isspace>:
    13a4:	91 11       	cpse	r25, r1
    13a6:	0c 94 a3 0a 	jmp	0x1546	; 0x1546 <__ctype_isfalse>
    13aa:	80 32       	cpi	r24, 0x20	; 32
    13ac:	19 f0       	breq	.+6      	; 0x13b4 <isspace+0x10>
    13ae:	89 50       	subi	r24, 0x09	; 9
    13b0:	85 50       	subi	r24, 0x05	; 5
    13b2:	c8 f7       	brcc	.-14     	; 0x13a6 <isspace+0x2>
    13b4:	08 95       	ret

000013b6 <strncasecmp_P>:
    13b6:	fb 01       	movw	r30, r22
    13b8:	dc 01       	movw	r26, r24
    13ba:	41 50       	subi	r20, 0x01	; 1
    13bc:	50 40       	sbci	r21, 0x00	; 0
    13be:	88 f0       	brcs	.+34     	; 0x13e2 <strncasecmp_P+0x2c>
    13c0:	8d 91       	ld	r24, X+
    13c2:	81 34       	cpi	r24, 0x41	; 65
    13c4:	1c f0       	brlt	.+6      	; 0x13cc <strncasecmp_P+0x16>
    13c6:	8b 35       	cpi	r24, 0x5B	; 91
    13c8:	0c f4       	brge	.+2      	; 0x13cc <strncasecmp_P+0x16>
    13ca:	80 5e       	subi	r24, 0xE0	; 224
    13cc:	65 91       	lpm	r22, Z+
    13ce:	61 34       	cpi	r22, 0x41	; 65
    13d0:	1c f0       	brlt	.+6      	; 0x13d8 <strncasecmp_P+0x22>
    13d2:	6b 35       	cpi	r22, 0x5B	; 91
    13d4:	0c f4       	brge	.+2      	; 0x13d8 <strncasecmp_P+0x22>
    13d6:	60 5e       	subi	r22, 0xE0	; 224
    13d8:	86 1b       	sub	r24, r22
    13da:	61 11       	cpse	r22, r1
    13dc:	71 f3       	breq	.-36     	; 0x13ba <strncasecmp_P+0x4>
    13de:	99 0b       	sbc	r25, r25
    13e0:	08 95       	ret
    13e2:	88 1b       	sub	r24, r24
    13e4:	fc cf       	rjmp	.-8      	; 0x13de <strncasecmp_P+0x28>

000013e6 <strnlen_P>:
    13e6:	fc 01       	movw	r30, r24
    13e8:	05 90       	lpm	r0, Z+
    13ea:	61 50       	subi	r22, 0x01	; 1
    13ec:	70 40       	sbci	r23, 0x00	; 0
    13ee:	01 10       	cpse	r0, r1
    13f0:	d8 f7       	brcc	.-10     	; 0x13e8 <strnlen_P+0x2>
    13f2:	80 95       	com	r24
    13f4:	90 95       	com	r25
    13f6:	8e 0f       	add	r24, r30
    13f8:	9f 1f       	adc	r25, r31
    13fa:	08 95       	ret

000013fc <strnlen>:
    13fc:	fc 01       	movw	r30, r24
    13fe:	61 50       	subi	r22, 0x01	; 1
    1400:	70 40       	sbci	r23, 0x00	; 0
    1402:	01 90       	ld	r0, Z+
    1404:	01 10       	cpse	r0, r1
    1406:	d8 f7       	brcc	.-10     	; 0x13fe <strnlen+0x2>
    1408:	80 95       	com	r24
    140a:	90 95       	com	r25
    140c:	8e 0f       	add	r24, r30
    140e:	9f 1f       	adc	r25, r31
    1410:	08 95       	ret

00001412 <fputc>:
    1412:	0f 93       	push	r16
    1414:	1f 93       	push	r17
    1416:	cf 93       	push	r28
    1418:	df 93       	push	r29
    141a:	fb 01       	movw	r30, r22
    141c:	23 81       	ldd	r18, Z+3	; 0x03
    141e:	21 fd       	sbrc	r18, 1
    1420:	03 c0       	rjmp	.+6      	; 0x1428 <fputc+0x16>
    1422:	8f ef       	ldi	r24, 0xFF	; 255
    1424:	9f ef       	ldi	r25, 0xFF	; 255
    1426:	2c c0       	rjmp	.+88     	; 0x1480 <fputc+0x6e>
    1428:	22 ff       	sbrs	r18, 2
    142a:	16 c0       	rjmp	.+44     	; 0x1458 <fputc+0x46>
    142c:	46 81       	ldd	r20, Z+6	; 0x06
    142e:	57 81       	ldd	r21, Z+7	; 0x07
    1430:	24 81       	ldd	r18, Z+4	; 0x04
    1432:	35 81       	ldd	r19, Z+5	; 0x05
    1434:	42 17       	cp	r20, r18
    1436:	53 07       	cpc	r21, r19
    1438:	44 f4       	brge	.+16     	; 0x144a <fputc+0x38>
    143a:	a0 81       	ld	r26, Z
    143c:	b1 81       	ldd	r27, Z+1	; 0x01
    143e:	9d 01       	movw	r18, r26
    1440:	2f 5f       	subi	r18, 0xFF	; 255
    1442:	3f 4f       	sbci	r19, 0xFF	; 255
    1444:	31 83       	std	Z+1, r19	; 0x01
    1446:	20 83       	st	Z, r18
    1448:	8c 93       	st	X, r24
    144a:	26 81       	ldd	r18, Z+6	; 0x06
    144c:	37 81       	ldd	r19, Z+7	; 0x07
    144e:	2f 5f       	subi	r18, 0xFF	; 255
    1450:	3f 4f       	sbci	r19, 0xFF	; 255
    1452:	37 83       	std	Z+7, r19	; 0x07
    1454:	26 83       	std	Z+6, r18	; 0x06
    1456:	14 c0       	rjmp	.+40     	; 0x1480 <fputc+0x6e>
    1458:	8b 01       	movw	r16, r22
    145a:	ec 01       	movw	r28, r24
    145c:	fb 01       	movw	r30, r22
    145e:	00 84       	ldd	r0, Z+8	; 0x08
    1460:	f1 85       	ldd	r31, Z+9	; 0x09
    1462:	e0 2d       	mov	r30, r0
    1464:	09 95       	icall
    1466:	89 2b       	or	r24, r25
    1468:	e1 f6       	brne	.-72     	; 0x1422 <fputc+0x10>
    146a:	d8 01       	movw	r26, r16
    146c:	16 96       	adiw	r26, 0x06	; 6
    146e:	8d 91       	ld	r24, X+
    1470:	9c 91       	ld	r25, X
    1472:	17 97       	sbiw	r26, 0x07	; 7
    1474:	01 96       	adiw	r24, 0x01	; 1
    1476:	17 96       	adiw	r26, 0x07	; 7
    1478:	9c 93       	st	X, r25
    147a:	8e 93       	st	-X, r24
    147c:	16 97       	sbiw	r26, 0x06	; 6
    147e:	ce 01       	movw	r24, r28
    1480:	df 91       	pop	r29
    1482:	cf 91       	pop	r28
    1484:	1f 91       	pop	r17
    1486:	0f 91       	pop	r16
    1488:	08 95       	ret

0000148a <__ultoa_invert>:
    148a:	fa 01       	movw	r30, r20
    148c:	aa 27       	eor	r26, r26
    148e:	28 30       	cpi	r18, 0x08	; 8
    1490:	51 f1       	breq	.+84     	; 0x14e6 <__ultoa_invert+0x5c>
    1492:	20 31       	cpi	r18, 0x10	; 16
    1494:	81 f1       	breq	.+96     	; 0x14f6 <__ultoa_invert+0x6c>
    1496:	e8 94       	clt
    1498:	6f 93       	push	r22
    149a:	6e 7f       	andi	r22, 0xFE	; 254
    149c:	6e 5f       	subi	r22, 0xFE	; 254
    149e:	7f 4f       	sbci	r23, 0xFF	; 255
    14a0:	8f 4f       	sbci	r24, 0xFF	; 255
    14a2:	9f 4f       	sbci	r25, 0xFF	; 255
    14a4:	af 4f       	sbci	r26, 0xFF	; 255
    14a6:	b1 e0       	ldi	r27, 0x01	; 1
    14a8:	3e d0       	rcall	.+124    	; 0x1526 <__ultoa_invert+0x9c>
    14aa:	b4 e0       	ldi	r27, 0x04	; 4
    14ac:	3c d0       	rcall	.+120    	; 0x1526 <__ultoa_invert+0x9c>
    14ae:	67 0f       	add	r22, r23
    14b0:	78 1f       	adc	r23, r24
    14b2:	89 1f       	adc	r24, r25
    14b4:	9a 1f       	adc	r25, r26
    14b6:	a1 1d       	adc	r26, r1
    14b8:	68 0f       	add	r22, r24
    14ba:	79 1f       	adc	r23, r25
    14bc:	8a 1f       	adc	r24, r26
    14be:	91 1d       	adc	r25, r1
    14c0:	a1 1d       	adc	r26, r1
    14c2:	6a 0f       	add	r22, r26
    14c4:	71 1d       	adc	r23, r1
    14c6:	81 1d       	adc	r24, r1
    14c8:	91 1d       	adc	r25, r1
    14ca:	a1 1d       	adc	r26, r1
    14cc:	20 d0       	rcall	.+64     	; 0x150e <__ultoa_invert+0x84>
    14ce:	09 f4       	brne	.+2      	; 0x14d2 <__ultoa_invert+0x48>
    14d0:	68 94       	set
    14d2:	3f 91       	pop	r19
    14d4:	2a e0       	ldi	r18, 0x0A	; 10
    14d6:	26 9f       	mul	r18, r22
    14d8:	11 24       	eor	r1, r1
    14da:	30 19       	sub	r19, r0
    14dc:	30 5d       	subi	r19, 0xD0	; 208
    14de:	31 93       	st	Z+, r19
    14e0:	de f6       	brtc	.-74     	; 0x1498 <__ultoa_invert+0xe>
    14e2:	cf 01       	movw	r24, r30
    14e4:	08 95       	ret
    14e6:	46 2f       	mov	r20, r22
    14e8:	47 70       	andi	r20, 0x07	; 7
    14ea:	40 5d       	subi	r20, 0xD0	; 208
    14ec:	41 93       	st	Z+, r20
    14ee:	b3 e0       	ldi	r27, 0x03	; 3
    14f0:	0f d0       	rcall	.+30     	; 0x1510 <__ultoa_invert+0x86>
    14f2:	c9 f7       	brne	.-14     	; 0x14e6 <__ultoa_invert+0x5c>
    14f4:	f6 cf       	rjmp	.-20     	; 0x14e2 <__ultoa_invert+0x58>
    14f6:	46 2f       	mov	r20, r22
    14f8:	4f 70       	andi	r20, 0x0F	; 15
    14fa:	40 5d       	subi	r20, 0xD0	; 208
    14fc:	4a 33       	cpi	r20, 0x3A	; 58
    14fe:	18 f0       	brcs	.+6      	; 0x1506 <__ultoa_invert+0x7c>
    1500:	49 5d       	subi	r20, 0xD9	; 217
    1502:	31 fd       	sbrc	r19, 1
    1504:	40 52       	subi	r20, 0x20	; 32
    1506:	41 93       	st	Z+, r20
    1508:	02 d0       	rcall	.+4      	; 0x150e <__ultoa_invert+0x84>
    150a:	a9 f7       	brne	.-22     	; 0x14f6 <__ultoa_invert+0x6c>
    150c:	ea cf       	rjmp	.-44     	; 0x14e2 <__ultoa_invert+0x58>
    150e:	b4 e0       	ldi	r27, 0x04	; 4
    1510:	a6 95       	lsr	r26
    1512:	97 95       	ror	r25
    1514:	87 95       	ror	r24
    1516:	77 95       	ror	r23
    1518:	67 95       	ror	r22
    151a:	ba 95       	dec	r27
    151c:	c9 f7       	brne	.-14     	; 0x1510 <__ultoa_invert+0x86>
    151e:	00 97       	sbiw	r24, 0x00	; 0
    1520:	61 05       	cpc	r22, r1
    1522:	71 05       	cpc	r23, r1
    1524:	08 95       	ret
    1526:	9b 01       	movw	r18, r22
    1528:	ac 01       	movw	r20, r24
    152a:	0a 2e       	mov	r0, r26
    152c:	06 94       	lsr	r0
    152e:	57 95       	ror	r21
    1530:	47 95       	ror	r20
    1532:	37 95       	ror	r19
    1534:	27 95       	ror	r18
    1536:	ba 95       	dec	r27
    1538:	c9 f7       	brne	.-14     	; 0x152c <__ultoa_invert+0xa2>
    153a:	62 0f       	add	r22, r18
    153c:	73 1f       	adc	r23, r19
    153e:	84 1f       	adc	r24, r20
    1540:	95 1f       	adc	r25, r21
    1542:	a0 1d       	adc	r26, r0
    1544:	08 95       	ret

00001546 <__ctype_isfalse>:
    1546:	99 27       	eor	r25, r25
    1548:	88 27       	eor	r24, r24

0000154a <__ctype_istrue>:
    154a:	08 95       	ret

0000154c <__prologue_saves__>:
    154c:	2f 92       	push	r2
    154e:	3f 92       	push	r3
    1550:	4f 92       	push	r4
    1552:	5f 92       	push	r5
    1554:	6f 92       	push	r6
    1556:	7f 92       	push	r7
    1558:	8f 92       	push	r8
    155a:	9f 92       	push	r9
    155c:	af 92       	push	r10
    155e:	bf 92       	push	r11
    1560:	cf 92       	push	r12
    1562:	df 92       	push	r13
    1564:	ef 92       	push	r14
    1566:	ff 92       	push	r15
    1568:	0f 93       	push	r16
    156a:	1f 93       	push	r17
    156c:	cf 93       	push	r28
    156e:	df 93       	push	r29
    1570:	cd b7       	in	r28, 0x3d	; 61
    1572:	de b7       	in	r29, 0x3e	; 62
    1574:	ca 1b       	sub	r28, r26
    1576:	db 0b       	sbc	r29, r27
    1578:	0f b6       	in	r0, 0x3f	; 63
    157a:	f8 94       	cli
    157c:	de bf       	out	0x3e, r29	; 62
    157e:	0f be       	out	0x3f, r0	; 63
    1580:	cd bf       	out	0x3d, r28	; 61
    1582:	09 94       	ijmp

00001584 <__epilogue_restores__>:
    1584:	2a 88       	ldd	r2, Y+18	; 0x12
    1586:	39 88       	ldd	r3, Y+17	; 0x11
    1588:	48 88       	ldd	r4, Y+16	; 0x10
    158a:	5f 84       	ldd	r5, Y+15	; 0x0f
    158c:	6e 84       	ldd	r6, Y+14	; 0x0e
    158e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1590:	8c 84       	ldd	r8, Y+12	; 0x0c
    1592:	9b 84       	ldd	r9, Y+11	; 0x0b
    1594:	aa 84       	ldd	r10, Y+10	; 0x0a
    1596:	b9 84       	ldd	r11, Y+9	; 0x09
    1598:	c8 84       	ldd	r12, Y+8	; 0x08
    159a:	df 80       	ldd	r13, Y+7	; 0x07
    159c:	ee 80       	ldd	r14, Y+6	; 0x06
    159e:	fd 80       	ldd	r15, Y+5	; 0x05
    15a0:	0c 81       	ldd	r16, Y+4	; 0x04
    15a2:	1b 81       	ldd	r17, Y+3	; 0x03
    15a4:	aa 81       	ldd	r26, Y+2	; 0x02
    15a6:	b9 81       	ldd	r27, Y+1	; 0x01
    15a8:	ce 0f       	add	r28, r30
    15aa:	d1 1d       	adc	r29, r1
    15ac:	0f b6       	in	r0, 0x3f	; 63
    15ae:	f8 94       	cli
    15b0:	de bf       	out	0x3e, r29	; 62
    15b2:	0f be       	out	0x3f, r0	; 63
    15b4:	cd bf       	out	0x3d, r28	; 61
    15b6:	ed 01       	movw	r28, r26
    15b8:	08 95       	ret

000015ba <_exit>:
    15ba:	f8 94       	cli

000015bc <__stop_program>:
    15bc:	ff cf       	rjmp	.-2      	; 0x15bc <__stop_program>
